Index: ssl/s3_srvr.c
===================================================================
--- ssl/s3_srvr.c.orig	2010-03-04 21:28:34.000000000 +0000
+++ ssl/s3_srvr.c	2010-03-04 21:31:30.246161559 +0000
@@ -718,6 +718,15 @@
 #endif
 	STACK_OF(SSL_CIPHER) *ciphers=NULL;
 
+#ifndef OPENSSL_ENABLE_UNSAFE_LEGACY_SESSION_RENEGOTATION
+	if (s->new_session)
+		{
+		al=SSL_AD_HANDSHAKE_FAILURE;
+		SSLerr(SSL_F_SSL3_GET_CLIENT_HELLO, SSL_R_NO_RENEGOTIATION);
+		goto f_err;
+		}
+#endif  /* !OPENSSL_ENABLE_UNSAFE_LEGACY_SESSION_RENEGOTATION */
+
 	/* We do this so that we will respond with our native type.
 	 * If we are TLSv1 and we get SSLv3, we will respond with TLSv1,
 	 * This down switching should be handled by a different method.
Index: ssl/ssl.h
===================================================================
--- ssl/ssl.h.orig	2010-03-04 21:29:11.000000000 +0000
+++ ssl/ssl.h	2010-03-04 21:29:30.770978241 +0000
@@ -1943,6 +1943,7 @@
 #define SSL_R_NO_PRIVATE_KEY_ASSIGNED			 190
 #define SSL_R_NO_PROTOCOLS_AVAILABLE			 191
 #define SSL_R_NO_PUBLICKEY				 192
+#define SSL_R_NO_RENEGOTIATION				 319
 #define SSL_R_NO_SHARED_CIPHER				 193
 #define SSL_R_NO_VERIFY_CALLBACK			 194
 #define SSL_R_NULL_SSL_CTX				 195
Index: ssl/ssl_err.c
===================================================================
--- ssl/ssl_err.c.orig	2010-03-04 21:29:11.000000000 +0000
+++ ssl/ssl_err.c	2010-03-04 21:29:30.779264690 +0000
@@ -382,6 +382,7 @@
 {ERR_REASON(SSL_R_NO_PRIVATE_KEY_ASSIGNED),"no private key assigned"},
 {ERR_REASON(SSL_R_NO_PROTOCOLS_AVAILABLE),"no protocols available"},
 {ERR_REASON(SSL_R_NO_PUBLICKEY)          ,"no publickey"},
+{ERR_REASON(SSL_R_NO_RENEGOTIATION)      ,"no renegotiation"},
 {ERR_REASON(SSL_R_NO_SHARED_CIPHER)      ,"no shared cipher"},
 {ERR_REASON(SSL_R_NO_VERIFY_CALLBACK)    ,"no verify callback"},
 {ERR_REASON(SSL_R_NULL_SSL_CTX)          ,"null ssl ctx"},
Index: ssl/s3_lib.c
===================================================================
--- ssl/s3_lib.c.orig	2008-04-30 16:11:32.000000000 +0000
+++ ssl/s3_lib.c	2010-03-04 21:29:30.786474940 +0000
@@ -2592,6 +2592,9 @@
 	if (s->s3->flags & SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS)
 		return(0);
 
+	if (!(s->s3->flags & SSL3_FLAGS_ALLOW_UNSAFE_LEGACY_RENEGOTIATION))
+		return(0);
+
 	s->s3->renegotiate=1;
 	return(1);
 	}
Index: ssl/s3_pkt.c
===================================================================
--- ssl/s3_pkt.c.orig	2010-03-04 21:29:11.000000000 +0000
+++ ssl/s3_pkt.c	2010-03-04 21:29:30.794283597 +0000
@@ -978,6 +978,7 @@
 
 		if (SSL_is_init_finished(s) &&
 			!(s->s3->flags & SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS) &&
+			(s->s3->flags & SSL3_FLAGS_ALLOW_UNSAFE_LEGACY_RENEGOTIATION) &&
 			!s->s3->renegotiate)
 			{
 			ssl3_renegotiate(s);
@@ -1110,7 +1111,8 @@
 	if ((s->s3->handshake_fragment_len >= 4) &&	!s->in_handshake)
 		{
 		if (((s->state&SSL_ST_MASK) == SSL_ST_OK) &&
-			!(s->s3->flags & SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS))
+			!(s->s3->flags & SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS) &&
+			(s->s3->flags & SSL3_FLAGS_ALLOW_UNSAFE_LEGACY_RENEGOTIATION))
 			{
 #if 0 /* worked only because C operator preferences are not as expected (and
        * because this is not really needed for clients except for detecting
Index: ssl/ssl3.h
===================================================================
--- ssl/ssl3.h.orig	2007-10-12 00:00:30.000000000 +0000
+++ ssl/ssl3.h	2010-03-04 21:29:30.801286145 +0000
@@ -326,10 +326,11 @@
 #define SSL3_CT_NUMBER			7
 
 
-#define SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS	0x0001
-#define SSL3_FLAGS_DELAY_CLIENT_FINISHED	0x0002
-#define SSL3_FLAGS_POP_BUFFER			0x0004
-#define TLS1_FLAGS_TLS_PADDING_BUG		0x0008
+#define SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS		0x0001
+#define SSL3_FLAGS_DELAY_CLIENT_FINISHED		0x0002
+#define SSL3_FLAGS_POP_BUFFER				0x0004
+#define TLS1_FLAGS_TLS_PADDING_BUG			0x0008
+#define SSL3_FLAGS_ALLOW_UNSAFE_LEGACY_RENEGOTIATION	0x0010
 
 typedef struct ssl3_state_st
 	{
