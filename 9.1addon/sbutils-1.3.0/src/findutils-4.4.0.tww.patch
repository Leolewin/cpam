Index: find/parser.c
===================================================================
--- find/parser.c.orig	2008-12-26 22:32:11.544406386 +0000
+++ find/parser.c	2008-12-26 22:32:14.928545762 +0000
@@ -1385,8 +1385,8 @@
   if (collect_arg(argv, arg_ptr, &minutes))
     {
       struct time_val tval;
-      tval.xval = xv;
       struct timespec origin = options.cur_day_start;
+      tval.xval = xv;
       origin.tv_sec += DAYSECS;
       if (get_relative_timestamp(minutes, &tval, origin, 60,
 				 "arithmetic overflow while converting %s "
Index: lib/regextype.h
===================================================================
--- lib/regextype.h.orig	2008-12-26 22:32:11.552401984 +0000
+++ lib/regextype.h	2008-12-26 22:32:14.937967012 +0000
@@ -24,7 +24,7 @@
 enum {
   CONTEXT_FINDUTILS = 1u,
   CONTEXT_GENERIC   = 2u,
-  CONTEXT_ALL = CONTEXT_GENERIC|CONTEXT_FINDUTILS,
+  CONTEXT_ALL = CONTEXT_GENERIC|CONTEXT_FINDUTILS
 };
 
 
Index: find/defs.h
===================================================================
--- find/defs.h.orig	2008-12-26 22:32:11.538117615 +0000
+++ find/defs.h	2008-12-26 22:32:14.944284670 +0000
@@ -210,7 +210,7 @@
   {
     KIND_PLAIN=0,		/* Segment containing just plain text. */
     KIND_STOP=1,		/* \c -- stop printing and flush output. */
-    KIND_FORMAT,		/* Regular format */
+    KIND_FORMAT			/* Regular format */
   };
 
 struct segment
Index: tests/test-stdint.c
===================================================================
--- tests/test-stdint.c.orig	2008-12-26 22:32:11.512951934 +0000
+++ tests/test-stdint.c	2008-12-27 00:06:05.858051982 +0000
@@ -1,5 +1,5 @@
 /* Test of <stdint.h> substitute.
-   Copyright (C) 2006, 2007 Free Software Foundation, Inc.
+   Copyright (C) 2006-2008 Free Software Foundation, Inc.
 
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
@@ -84,18 +84,6 @@
 verify_same_types (UINT64_MAX, (uint64_t) 0 + 0);
 #endif
 
-#if INT8_MIN && INT8_MAX && INT16_MIN && INT16_MAX && INT32_MIN && INT32_MAX
-/* ok */
-#else
-err or;
-#endif
-
-#if UINT8_MAX && UINT16_MAX && UINT32_MAX
-/* ok */
-#else
-err or;
-#endif
-
 /* 7.18.1.2. Minimum-width integer types */
 /* 7.18.2.2. Limits of minimum-width integer types */
 
@@ -143,18 +131,6 @@
 verify_same_types (UINT_LEAST64_MAX, (uint_least64_t) 0 + 0);
 #endif
 
-#if INT_LEAST8_MIN && INT_LEAST8_MAX && INT_LEAST16_MIN && INT_LEAST16_MAX && INT_LEAST32_MIN && INT_LEAST32_MAX
-/* ok */
-#else
-err or;
-#endif
-
-#if UINT_LEAST8_MAX && UINT_LEAST16_MAX && UINT_LEAST32_MAX
-/* ok */
-#else
-err or;
-#endif
-
 /* 7.18.1.3. Fastest minimum-width integer types */
 /* 7.18.2.3. Limits of fastest minimum-width integer types */
 
@@ -246,11 +222,15 @@
 verify (TYPE_MAXIMUM (uintmax_t) == UINTMAX_MAX);
 verify_same_types (UINTMAX_MAX, (uintmax_t) 0 + 0);
 
+/* As of 2007, Sun C and HP-UX 10.20 cc don't support 'long long' constants in
+   the preprocessor.  */
+#if !(defined __SUNPRO_C || (defined __hpux && !defined __GNUC__))
 #if INTMAX_MIN && INTMAX_MAX && UINTMAX_MAX
 /* ok */
 #else
 err or;
 #endif
+#endif
 
 /* 7.18.3. Limits of other integer types */
 
Index: po/Makefile.in.in
===================================================================
--- po/Makefile.in.in.orig	2005-08-01 07:49:47.000000000 +0000
+++ po/Makefile.in.in	2009-03-04 01:19:55.378192778 +0000
@@ -24,6 +24,7 @@
 prefix = @prefix@
 exec_prefix = @exec_prefix@
 datadir = @datadir@
+datarootdir = @datarootdir@
 localedir = $(datadir)/locale
 gettextsrcdir = $(datadir)/gettext/po
 
