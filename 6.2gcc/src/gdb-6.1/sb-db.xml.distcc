<?xml version="1.0"?>
<programs>
  <program name="gdb" version="6.1" revision="3"
  systype="*-aix*|*-irix*|*-linux*|*-osf*|*-solaris*">
    <build-name>${SB_PROG_NAME}-${SB_PROG_VER}</build-name>

    <install-name>${SB_PROG_NAME}61</install-name>

    <sources>
      <source checksum="4ba97f5efba4190f2e214e32c72c3fa0"
        checksum-type="md5" size="12571495"
        path="src/gdb-6.1.tar.bz2"/>
      <patch checksum="8627b2dc3e7eaeadd8f732582d149501"
        checksum-type="md5" size="619806"
        path="src/gdb-6.1.patch"/>
    </sources>

    <dependencies>
      <depend program="gcc" add-path="prepend">v==3.3.2</depend>
      <depend program="ghostscript" var="GS"
        install-name="ghostscript70">v&gt;=7.07</depend>
      <depend program="transfig" var="TRANSFIG"
        install-name="transfig32">v&gt;=3.2.3d</depend>
      <depend program="gettext" var="GETTEXT"
        install-name="gettext014"
        add-path="prepend">v&gt;=0.14.1</depend>
      <depend program="ImageMagick"
        var="IMAGEMAGICK">v==6.0.3</depend>
      <depend program="texinfo" var="TEXINFO"
        add-path="prepend">v==4.6</depend>
    </dependencies>

    <script-header>
<![CDATA[
_docdir="${SB_INSTALL_PREFIX}/doc"

case "${SB_SYSTYPE}" in
*-aix5*)
  CC=xlc CFLAGS="-O2 -qmaxmem=-1 -qarch=com"
  LDFLAGS="-Wl,-brtl -Wl,-blibpath:/usr/lib"
  CC_LD_RT="-Wl,-blibpath:"

  # force setting of BSD-compatible NM as 'nm', selected by
  # top-level ./configure, is not sufficient
  export lt_cv_path_NM="/usr/ccs/bin/nm -B" ;;
*-aix*)
  CC=xlc CFLAGS="-O2 -qmaxmem=-1 -qarch=com"
  LDFLAGS="-Wl,-brtl"

  # force setting of BSD-compatible NM as 'nm', selected by
  # top-level ./configure, is not sufficient
  export lt_cv_path_NM="/usr/ccs/bin/nm -B" ;;
*-hpux*)
  CC=cc CFLAGS="-Ae +DAportable" ;;
*-irix6*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1429 -O2 \
-OPT:Olimit=0" ;;
*-osf*)
  CC=cc CFLAGS="-O2 -ieee -msym -readonly_strings" ;;
*-solaris2.[89])
  CFLAGS="-O2 -mcpu=v8" ;;
*-solaris2*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=generic" ;;
esac
]]>
    </script-header>

    <configure>
<![CDATA[
rm -f config.cache
CC="${CC:-gcc}" CFLAGS="${CFLAGS:--O2}" LDFLAGS="${LDFLAGS+${LDFLAGS}}" \
./configure --disable-shared --disable-nls --enable-gdbtk=no \
--enable-tui=no --prefix=${SB_INSTALL_PREFIX}

# rebuild info files
rm bfd/doc/*.info* 2>/dev/null || :
rm gdb/doc/*.info* 2>/dev/null || :
]]>
    </configure>
<build>

export DISTCC_HOSTS='ilad2219 wsdd2501 tt2015.tr.comm.mot.com' ;
(gmake  -j12  CC="distcc gcc" )

</build>
    <install>
<![CDATA[
gmake install install-info

${SB_PATH_GINSTALL} -m 755 -o root -g 0 -d ${_docdir}/texinfo
${SB_PATH_GINSTALL} -m 644 -o root -g 0 bfd/doc/*.texi* \
etc/configbuild.* etc/configdev.* etc/*.texi gdb/doc/*.texi* \
libiberty/*.texi mmalloc/*.texi ${_docdir}/texinfo

if [ "${TRANSFIG+set}" = "set" ]; then
  PATH=${PATH}:${SB_VAR_TRANSFIG}/bin:${SB_VAR_GS}/bin \
  ${SB_VAR_IMAGEMAGICK}/bin/convert ${_docdir}/texinfo/configbuild.fig \
  ${_docdir}/texinfo/configbuild.png
  PATH=${PATH}:${SB_VAR_TRANSFIG}/bin:${SB_VAR_GS}/bin \
  ${SB_VAR_IMAGEMAGICK}/bin/convert ${_docdir}/texinfo/configdev.fig \
  ${_docdir}/texinfo/configdev.png
fi
]]>
    </install>

    <notes>
      <change from="6.0" to="6.1">
        <item><para>Removed --with-mmalloc: Support for the mmalloc
memory manager has been removed, as it conflicted with the internal
gdb byte cache</para></item>
        <item><para>Changes in AMD64 configurations: The AMD64 target
now includes the %cs and %ss registers. As a result the AMD64 remote
protocol has changed; this affects the floating-point and SSE
registers. If you rely on those registers for your debugging, you
should upgrade gdbserver on the remote side.</para></item>
        <item><para>Revised SPARC target: The SPARC target has been
completely revised, incorporating the FreeBSD/sparc64 support that was
added for GDB 6.0. As a result support for LynxOS and SunOS 4 has been
dropped. Calling functions from within GDB on operating systems with a
non-executable stack (Solaris, OpenBSD) now works.</para></item>
        <item><para>New C++ demangler: GDB has a new C++ demangler
which does a better job on the mangled names generated by current
versions of g++. It also runs faster, so with this and other changes
gdb should now start faster on large C++ programs.</para></item>
        <item><para>DWARF 2 Location Expressions: GDB support for
location expressions has been extended to support function arguments
and frame bases. Older versions of GDB could crash when they
encountered these.</para></item>
        <item><para>C++ nested types and namespaces: GDB's support for
nested types and namespaces in C++ has been improved, especially if
you use the DWARF 2 debugging format. (This is the default for recent
versions of GCC on most platforms.) Specifically, if you have a class
"Inner" defined within a class or namespace "Outer", then GDB realizes
that the class's name is "Outer::Inner", not simply "Inner". This
should greatly reduce the frequency of complaints about not finding
RTTI symbols. In addition, if you are stopped at inside of a function
defined within a namespace, GDB modifies its name lookup
accordingly.</para></item>
        <item><para>New debugging protocols:</para>
        <unorderedlist>
          <item><para>M32R with SDI protocol
(<command>m32r-*-elf*</command>)</para></item>
        </unorderedlist></item>
        <item><para>"<command>set prompt-escape-char</command>"
command deleted: The command "set prompt-escape-char" has been
deleted. This command, and its very obscure effet on GDB's prompt, was
never documented, tested, nor mentioned in the NEWS
file.</para></item>
      </change>

      <change from="5.3" to="6.0">
        <item><para>Objective-C: Support for debugging the Objective-C
programming language has been integrated into GDB.</para></item>
        <item><para>New backtrace mechanism (includes DWARF 2 Call
Frame Information):</para>
        <unorderedlist>
          <item><para>DWARF 2's Call Frame Information makes available
compiler generated information that more exactly describes the
program's run-time stack. By using this information, GDB is able to
provide more robust stack backtraces.</para></item>
          <item><para>The i386, amd64 (nee, x86-64), Alpha, m68hc11,
ia64, and m32r targets have been updated to use a new backtrace
mechanism which includes DWARF 2 CFI support.</para></item>
        </unorderedlist></item>
        <item><para>Hosted file I/O: GDB's remote protocol has been
extended to include support for hosted file I/O (where the remote
target uses GDB's file system). See GDB's remote protocol
documentation for details.</para></item>
        <item><para>All targets using the new architecture framework:
All of GDB's targets have been updated to use the new internal
architecture framework. The way is now open for future GDB releases to
include cross-architecture native debugging support (i386 on amd64,
ppc32 on ppc64).</para></item>
        <item><para>GNU/Linux's Thread Local Storage (TLS): GDB now
includes support for for the GNU/Linux implementation of per-thread
variables.</para></item>
        <item><para>GNU/Linux's Native POSIX Thread Library (NPTL):
GDB's thread code has been updated to work with either the new
GNU/Linux NPTL thread library or the older "LinuxThreads"
library.</para></item>
        <item><para>Separate debug info: GDB, in conjunction with
BINUTILS, now supports a mechanism for automatically loading debug
information from a separate file. Instead of shipping full debug and
non-debug versions of system libraries, system integrators can now
instead ship just the stripped libraries and optional debug
files.</para></item>
        <item><para>DWARF 2 Location Expressions:</para>
        <unorderedlist>
          <item><para>DWARF 2 Location Expressions allow the compiler
to more completely describe the location of variables (even in
optimized code) to the debugger.</para></item>
          <item><para>GDB now includes preliminary support for
location expressions (support for DW_OP_piece is still
missing).</para></item>
        </unorderedlist></item>
        <item><para>Java: A number of long standing bugs that caused
GDB to die while starting a Java application have been fixed. GDB's
Java support is now considered "useable".</para></item>
        <item><para>GNU/Linux support for fork, vfork, and exec: The
"catch fork", "catch exec", "catch vfork", and "set follow-fork-mode"
commands are now implemented for GNU/Linux. They require a 2.5.x or
later kernel.</para></item>
        <item><para>GDB supports logging output to a file: There are
two new commands, "set logging" and "show logging", which can be used
to capture GDB's output to a file.</para></item>
        <item><para>The meaning of "detach" has changed for gdbserver:
The "detach" command will now resume the application, as documented.
To disconnect from gdbserver and leave it stopped, use the new
"disconnect" command.</para></item>
        <item><para>d10v, m68hc11 `regs' command deprecated: The `info
registers' command has been updated so that it displays the registers
using a format identical to the old `regs' command.</para></item>
        <item><para>Profiling support: A new command, "maint set
profile on/off", has been added. This command can be used to enable or
disable profiling while running GDB, to profile a session or a set of
commands. In addition there is a new configure switch,
"--enable-profiling", which will cause GDB to be compiled with
profiling data, for more informative profiling results.</para></item>
        <item><para>Default MI syntax changed to "mi2":</para>
        <unorderedlist>
          <item><para>The default MI (machine interface) syntax,
enabled by the command line option "-i=mi", has been changed to "mi2".
The previous MI syntax, "mi1", can be enabled by specifying the option
"-i=mi1".</para></item>
          <item><para>Support for the original "mi0" syntax (included
in GDB 5.0) has been removed</para></item>
          <item><para>Fix for gdb/192: removed extraneous space when
displaying frame level</para></item>
          <item><para>Fix for gdb/672: update changelist is now output
in mi list format</para></item>
          <item><para>Fix for gdb/702: a -var-assign that updates the
value now shows up in a subsequent -var-update</para></item>
        </unorderedlist></item>
        <item><para>MIPS $fp behavior changed: The convenience
variable $fp, for the MIPS, now consistently returns the address of
the current frame's base. Previously, depending on the context, $fp
could refer to either $sp or the current frame's base address. See
``8.10 Registers'' in the manual ``Debugging with GDB: The GNU
Source-Level Debugger''.</para></item>
      </change>

      <note type="usage">
        <para>This release of GDB cannot read the default core file
format for AIX 4.3. To switch to the old core file format, set:</para>
        <screen>
System Environments
  Change / Show Characteristics of Operating System
    Use pre-430 style CORE dump
        </screen>

        <para>to true in smit.</para>

        <para>This release of GDB contains bugs on HP-UX 11.x. The
recommended debugger for HP-UX is WDB, a fork of GDB for HP-UX in
development by HP. A resolution to this by merging the WDB changes
back into GDB is most likely not going to occur as patches to GDB
early on stalled in the pipeline. Therefore, WDB is the solution for
GDB on HP-UX.</para>
      </note>
    </notes>

    <changelog>
      <change date="2004 August 26" revision="3"
      author="Gary V. Vaughan" email="gary@thewrittenword.com">
        <item><para>Upgrade ImageMagick dependency to 6.0.3</para></item>
      </change>

      <change date="2004 June 30" revision="2"
      author="Albert Chin-A-Young" email="china@thewrittenword.com">
        <item><para>Don't build shared libraries to avoid runtime
problems locating them on AIX</para></item>
      </change>
    </changelog>
  </program>
</programs>
