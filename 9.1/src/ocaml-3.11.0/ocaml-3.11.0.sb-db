<?xml version="1.0"?>
<!DOCTYPE programs SYSTEM "sb-db.dtd">
<programs>
  <program name="ocaml" version="3.11.0" revision="3"
  systype="*-aix*|*-hpux11*|*-linux*|*-osf*|*-solaris*">
    <build-name>${SB_PROG_NAME}-${SB_PROG_VER}</build-name>

    <install-name>${SB_PROG_NAME}31</install-name>

    <sources>
      <source checksum="6ed1c3ed660a15408362242fa8fa4668"
        checksum-type="md5" size="2359311"
        path="src/ocaml-3.11.0.tar.bz2"/>
      <patch checksum="422683256613d748d0c70ed011b710d3"
        checksum-type="md5" size="506"
        path="src/ocaml-3.11.0.debian-PR429185.patch"/>
      <patch checksum="4e9669930a784ac0d5de1fdeb97e978f"
        checksum-type="md5" size="32210"
        path="src/ocaml-3.11.0.tww.patch"/>
      <patch checksum="7c011f6be81d23fb11b9231f83f1d593"
        checksum-type="md5" size="73526"
        path="src/ocaml-3.11.0.auto.patch"/>
      <patch checksum="0cd4ee70e9f9f31938045a33c04f5a7a"
        checksum-type="md5" size="3447"
        path="src/bug4644.patch"
        systype="hppa*-hpux*"/>
      <source checksum="bfb4ed960974159f4224014a979baf6d"
        checksum-type="md5" size="536530"
        path="src/ocaml-3.11-refman.html.tar.gz"
        noop="1" var="DOC_HTML"/>
      <source checksum="798c2702f20bd3199726441771538a07"
        checksum-type="md5" size="1946372"
        path="src/ocaml-3.11-refman.pdf"
        noop="1" var="DOC_PDF"/>
    </sources>

    <dependencies>
      <depend var="OCAMLP" install-name="ocaml31p"
        set-var-only="1"/>
      <depend var="OCAMLP_LIB" install-name="ocaml31p" append="lib"
        set-var-only="1"/>
      <depend program="gcc" install-name="gcc44" add-path="prepend"
        systype="*-hpux*">v&gt;=4.4.6</depend>
      <depend program="gcc" append="hppa1.1-hp-hpux11.00/bin"
        add-path="prepend"
        systype="hppa*-hpux11.00">v==4.4.6</depend>
      <depend program="gcc" append="hppa1.1-hp-hpux11.11/bin"
        add-path="prepend"
        systype="hppa*-hpux11.11">v==4.4.6</depend>
      <depend program="gcc" append="hppa2.0-hp-hpux11.23/bin"
        add-path="prepend"
        systype="hppa*-hpux11.23">v==4.4.6</depend>
      <depend program="gcc" append="ia64-hp-hpux11.23/bin"
        add-path="prepend"
        systype="ia64*-hpux11.23">v==4.4.6</depend>
      <depend program="gcc" append="hppa2.0-hp-hpux11.31/bin"
        add-path="prepend"
        systype="hppa*-hpux11.31">v==4.4.6</depend>
      <depend program="gcc" append="ia64-hp-hpux11.31/bin"
        add-path="prepend"
        systype="ia64*-hpux11.31">v==4.4.6</depend>
    </dependencies>

    <validate>
      <depend program="findlib">v==1.2.4</depend>
      <depend program="lablgtk">v==2.12.0</depend>
    </validate>

    <script-header>
<![CDATA[
_docdir="${SB_INSTALL_PREFIX}/doc"
]]>
    </script-header>

    <configure>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc_r CFLAGS="-D_ALL_SOURCE -O2 -qmaxmem=-1 -qarch=ppc" ;;
ia64*-hpux*)
  CFLAGS="-O2" ;;
*-hpux*)
  CFLAGS="-Os" ;;
x86_64*-linux*)
  ARGS="-x11lib /usr/X11R6/lib64" ;;
i?86*-linux*)
  CFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro" ;;
*-osf*)
  CC=cc CFLAGS="-msym -arch ev5 -O2 -readonly_strings" ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=pentium4" ;;
*-solaris2.8)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-xarch=v8plusa" ;;
*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-m32 -xarch=sparcvis" ;;
esac

${SHELL} ./configure -cc "${CC:-gcc} ${CFLAGS:--O2}" -no-curses \
-no-tk ${ARGS+${ARGS}} -bindir "${SB_INSTALL_PREFIX}/bin" \
-libdir "${SB_INSTALL_PREFIX_LIB}" \
-mandir "${SB_INSTALL_PREFIX}/man/man1" ${ARGS+${ARGS}}

${SB_PATH_CHMOD} 755 aix/ocamlcc aix/ocamlld
]]>
    </configure>

    <build>
<![CDATA[
# for ocamlcc, ocamlld
case "${SB_SYSTYPE}" in
*-aix*)
  export PATH="${SB_BUILD_PREFIX}/aix:$PATH" ;;
esac

gmake world

# native code-generator for AIX not supported
case "${SB_SYSTYPE}" in
*-aix*|ia64*-hpux*)
  : ;;
hppa*-hpux*)
  gmake opt ;;
*)
  gmake opt opt.opt ;;
esac
]]>
    </build>

    <install>
<![CDATA[
gmake install

# install AIX link script
case "${SB_SYSTYPE}" in
*-aix*)
  ${SB_PATH_INSTALL} -m 755 -o root -g 0 aix/ocamlcc aix/ocamlld \
  ${SB_INSTALL_PREFIX}/bin ;;
esac

# install documentation
${SB_PATH_INSTALL} -m 755 -o root -g 0 -d ${_docdir}/pdf
(cd ${_docdir}
 ${SB_PATH_TAR} zxf ${SB_SRC_DOC_HTML}
 mv htmlman html
 ${SB_PATH_CHOWN} -hR 0:0 html
 ${SB_PATH_FIND} html -type f -exec ${SB_PATH_CHMOD} 644 {} \;
 ${SB_PATH_FIND} html -type d -exec ${SB_PATH_CHMOD} 755 {} \;)
${SB_PATH_INSTALL} -m 644 -o root -g 0 ${SB_SRC_DOC_PDF} \
${_docdir}/pdf/ocaml.pdf

# create directory for 3rd-party packages and add the path to the
# ocaml package search path
${SB_PATH_INSTALL} -m 755 -o root -g 0 -d ${OCAMLP_LIB}/stublibs
cat >>${SB_INSTALL_PREFIX_LIB}/ld.conf <<_EOT_
${OCAMLP_LIB}/stublibs
${OCAMLP_LIB}
_EOT_
]]>
    </install>

    <uninstall>
      <remove-db-entry program="findlib">v==1.2.4</remove-db-entry>
      <remove-db-entry program="lablgtk">v==2.12.0</remove-db-entry>
    </uninstall>

    <notes>
      <change from="3.10.2" to="3.11.0">
        <items name="Language features">
          <item><para>Addition of lazy patterns: "lazy &lt;pat&gt;"
matches suspensions whose values, after forcing, match the pattern
&lt;pat&gt;.</para></item>
          <item><para>Introduction of private abbreviation types "type
t = private &lt;type-expr&gt;", for abstracting the actual manifest
type in type abbreviations.</para></item>
          <item><para>Subtyping is now allowed between a private
abbreviation and its definition, and between a polymorphic method and
its monomorphic instance.</para></item>
        </items>

        <items name="Compilers">
          <item><para>The file name for a compilation unit should
correspond to a valid identifier (Otherwise dynamic linking and other
things can fail, and a warning is emitted.)</para></item>
          <item><para>* Revised -output-obj: the output name must now
be provided; its extension must be one of .o/.obj, .so/.dll, or .c for
the bytecode compiler. The compilers can now produce a shared library
(with all the needed -ccopts/-ccobjs options) directly.</para></item>
          <item><para>-dtypes renamed to -annot, records (in .annot
files) which function calls are tail calls.</para></item>
          <item><para>All compiler error messages now include a file
name and location, for better interaction with Emacs' compilation
mode.</para></item>
          <item><para>Optimized compilation of "lazy e" when the
argument "e" is  already evaluated.</para></item>
          <item><para>Optimized compilation of equality tests with a
variant constant constructor.</para></item>
          <item><para>The -dllib options recorded in libraries are no
longer ignored when -use_runtime or -use_prims is used (unless
-no_auto_link is explicitly used).</para></item>
          <item><para>Check that at most one of -pack, -a, -shared,
-c, -output-obj is given on the command line.</para></item>
          <item><para>Optimized compilation of private types as
regular manifest types (e.g. abbreviation to float, float array or
record types with only  float fields).</para></item>
        </items>

        <items name="Native-code compiler">
          <item><para>New port: Mac OS X / Intel in 64-bit mode
(configure with -cc "gcc -m64").</para></item>
          <item><para>A new option "-shared" to produce a plugin that
can be dynamically loaded with the native version of
Dynlink.</para></item>
          <item><para>A new option "-nodynlink" to enable
optimizations valid only for code that is never dynlinked (no-op
except for AMD64).</para></item>
          <item><para>More aggressive unboxing of floats and boxed
integers.</para></item>
          <item><para>Can select which assembler and asm options to
use at configuration time.</para></item>
        </items>

        <items name="Run-time system">
          <item><para>New implementation of the page table describing
the heap (two-level array in 32 bits, sparse hashtable in 64 bits),
fixes issues with address space randomization on 64-bit OS
(PR#4448).</para></item>
          <item><para>New "generational" API for registering global
memory roots with the GC, enables faster scanning of global roots.
(The functions are caml_*_generational_global_root in
&lt;caml/memory.h&gt;.)</para></item>
          <item><para>New function "caml_raise_with_args" to raise an
exception with several arguments from C.</para></item>
          <item><para>Changes in implementation of dynamic linking of
C code: under Win32, use Alain Frisch's flexdll implementation of the
dlopen API; under MacOSX, use dlopen API instead of MacOSX bundle
API.</para></item>
          <item><para>Programs may now choose a first-fit allocation
policy instead of the default next-fit.  First-fit reduces
fragmentation but is slightly slower in some cases.</para></item>
        </items>

        <items name="Standard library">
          <item><para>Parsing library: new function "set_trace" to
programmatically turn on or off the printing of a trace during
parsing.</para></item>
          <item><para>Printexc library: new functions
"print_backtrace" and "get_backtrace" to obtain a stack backtrace of
the most recently raised exception. New function "record_backtrace" to
turn the exception backtrace mechanism on or off from within a
program.</para></item>
          <item><para>Scanf library: fine-tuning of meta format
implementation; fscanf behaviour revisited: only one input buffer is
allocated for any given input channel; the %n conversion does not
count a lookahead character as read.</para></item>
        </items>

        <items name="Other libraries">
          <item><para>Dynlink: on some platforms, the Dynlink library
is now available in native code. The boolean Dynlink.is_native allows
the program to know whether it has been compiled in bytecode or in
native code.</para></item>
          <item><para>Bigarrays: added "unsafe_get" and "unsafe_set"
(non-bound-checking versions of "get" and "set").</para></item>
          <item><para>Bigarrays: removed limitation "array dimension
&lt; 2^31".</para></item>
          <item><para>Labltk: added support for TK 8.5.</para></item>
          <item><para>Num: added conversions between big_int and
int32, nativeint, int64. More efficient implementation of Num.quo_num
and Num.mod_num.</para></item>
          <item><para>Threads: improved efficiency of mutex and
condition variable operations; improved interaction with Unix.fork
(PR#4577).</para></item>
          <item><para>Unix: added getsockopt_error returning type
Unix.error. Added support for TCP_NODELAY and IPV6_ONLY socket
options.</para></item>
          <item><para>Win32 Unix: "select" now supports all kinds of
file descriptors. Improved emulation of "lockf"
(PR#4609).</para></item>
        </items>

        <items name="Tools">
          <item><para>ocamldebug now supported under Windows (MSVC and
Mingw ports), but without the replay feature.  (Contributed by Dmitry
Bely and Sylvain Le Gall at OCamlCore with support from
Lexifi.)</para></item>
          <item><para>ocamldoc: new option
-no-module-constraint-filter to include functions hidden by signature
constraint in documentation.</para></item>
          <item><para>ocamlmklib and ocamldep.opt now available under
Windows ports.</para></item>
          <item><para>ocamlmklib no longer supports the -implib
option.</para></item>
          <item><para>ocamlnat: an experimental native toplevel (not
built by default).</para></item>
        </items>

        <items name="Camlp4">
          <item><para>* programs linked with camlp4lib.cma now also
need dynlink.cma.</para></item>
        </items>

        <items name="Bug fixes">
          <item><para>Major GC and heap compaction: fixed bug
involving lazy values and out-of-heap pointers.</para></item>
          <item><para>PR#3915: updated most man pages.</para></item>
          <item><para>PR#4261: type-checking of recursive
modules</para></item>
          <item><para>PR#4308: better stack backtraces for
"spontaneous" exceptions such as  Stack_overflow, Out_of_memory,
etc.</para></item>
          <item><para>PR#4338: Str.global_substitute,
Str.global_replace and the Str.*split* functions are now
tail-recursive.</para></item>
          <item><para>PR#4503: fixed bug in classify_float on
ARM.</para></item>
          <item><para>PR#4512: type-checking of recursive
modules</para></item>
          <item><para>PR#4517: crash in ocamllex-generated
lexers.</para></item>
          <item><para>PR#4542: problem with return value of
Unix.nice.</para></item>
          <item><para>PR#4557: type-checking of recursive
modules.</para></item>
          <item><para>PR#4562: strange %n semantics in
scanf.</para></item>
          <item><para>PR#4564: add note "stack is not executable" to
object files generated by ocamlopt (Linux/x86,
Linux/AMD64).</para></item>
          <item><para>PR#4566: bug in Ratio.approx_ratio_fix and
Num.approx_num_fix.</para></item>
          <item><para>PR#4582: clarified the documentation of
functions in the String module.</para></item>
          <item><para>PR#4583: stack overflow in "ocamlopt -g" during
closure conversion pass.</para></item>
          <item><para>PR#4585: ocamldoc and "val virtual"
declarations.</para></item>
          <item><para>PR#4587: ocamldoc and escaped @
characters.</para></item>
          <item><para>PR#4605: Buffer.add_substitute was sometime
wrong when target string had          backslashes.</para></item>
          <item><para>PR#4614: Inconsistent declaration of CamlCBCmd
in LablTk library.</para></item>
        </items>
      </change>

      <change from="3.10.1" to="3.10.2">
        <items name="Bug fixes">
          <item><para>PR#1217 (partial) Typo in ocamldep man
page</para></item>
          <item><para>PR#3952 (partial) ocamlopt: allocation problems
on ARM</para></item>
          <item><para>PR#4339 (continued) ocamlopt: problems on
HPPA</para></item>
          <item><para>PR#4455 str.mli not installed under
Windows</para></item>
          <item><para>PR#4473 crash when accessing float array with
polymorphic method</para></item>
          <item><para>PR#4480 runtime would not compile without gcc
extensions</para></item>
          <item><para>PR#4481 wrong typing of exceptions with object
arguments</para></item>
          <item><para>PR#4490 typo in error message</para></item>
          <item><para>Random crash on 32-bit when major_heap_increment
&gt;= 2^22</para></item>
          <item><para>Big performance bug in Weak
hashtables</para></item>
          <item><para>Small bugs in the make-package-macosx
script</para></item>
          <item><para>Bug in typing of polymorphic variants (reported
on caml-list)</para></item>
        </items>
      </change>

      <change from="3.10.0" to="3.10.1">
        <items name="Bug fixes">
          <item><para>PR#3830 small bugs in docs</para></item>
          <item><para>PR#4053 compilers: improved compilation time for
large variant types</para></item>
          <item><para>PR#4174 ocamlopt: fixed ocamlopt
-nopervasives</para></item>
          <item><para>PR#4199 otherlibs: documented a small problem in
Unix.utimes</para></item>
          <item><para>PR#4280 camlp4: parsing of identifier
(^)</para></item>
          <item><para>PR#4281 camlp4: parsing of type
constraint</para></item>
          <item><para>PR#4285 runtime: cannot compile under
AIX</para></item>
          <item><para>PR#4286 ocamlbuild: cannot compile under AIX and
SunOS</para></item>
          <item><para>PR#4288 compilers: including a functor
application with side effects</para></item>
          <item><para>PR#4295 camlp4 toplevel: synchronization after
an error</para></item>
          <item><para>PR#4300 ocamlopt: crash with backtrace and
illegal array access</para></item>
          <item><para>PR#4302 camlp4: list comprehension parsing
problem</para></item>
          <item><para>PR#4304 ocamlbuild: handle -I
correctly</para></item>
          <item><para>PR#4305 stdlib: alignment of
Arg.Symbol</para></item>
          <item><para>PR#4307 camlp4: assertion failure</para></item>
          <item><para>PR#4312 camlp4: accept "let _ : int =
1"</para></item>
          <item><para>PR#4313 ocamlbuild: -log and missing
directories</para></item>
          <item><para>PR#4315 camlp4: constraints in
classes</para></item>
          <item><para>PR#4316 compilers: crash with recursive modules
and Lazy</para></item>
          <item><para>PR#4318 ocamldoc: installation problem with
Cygwin (tentative fix)</para></item>
          <item><para>PR#4322 ocamlopt: stack overflow under
Windows</para></item>
          <item><para>PR#4325 compilers: wrong error message for
unused var</para></item>
          <item><para>PR#4326 otherlibs: marshal Big_int on
win64</para></item>
          <item><para>PR#4327 ocamlbuild: make emacs look for .annot
in _build directory</para></item>
          <item><para>PR#4328 camlp4: stack overflow with nil
nodes</para></item>
          <item><para>PR#4331 camlp4: guards on fun
expressions</para></item>
          <item><para>PR#4332 camlp4: parsing of negative 32/64 bit
numbers</para></item>
          <item><para>PR#4336 compilers: unsafe recursive
modules</para></item>
          <item><para>PR#4337 (note) camlp4: invalid character
escapes</para></item>
          <item><para>PR#4339 ocamlopt: problems on HP-UX (tentative
fix)</para></item>
          <item><para>PR#4340 camlp4: wrong pretty-printing of
optional arguments</para></item>
          <item><para>PR#4348 ocamlopt: crash on Mac
Intel</para></item>
          <item><para>PR#4349 camlp4: bug in private type
definitions</para></item>
          <item><para>PR#4350 compilers: type errors with records and
polymorphic variants</para></item>
          <item><para>PR#4352 compilers: terminal recursion under
Windows (tentative fix)</para></item>
          <item><para>PR#4354 ocamlcp: mismatch with ocaml on
polymorphic let</para></item>
          <item><para>PR#4358 ocamlopt: float constants wrong on
ARM</para></item>
          <item><para>PR#4360 ocamldoc: string inside
comment</para></item>
          <item><para>PR#4365 toplevel: wrong pretty-printing of
polymorphic variants</para></item>
          <item><para>PR#4373 otherlibs: leaks in
win32unix</para></item>
          <item><para>PR#4374 otherlibs: threads module not
initialized</para></item>
          <item><para>PR#4375 configure: fails to build on
bytecode-only architectures</para></item>
          <item><para>PR#4377 runtime: finalisation of infix
pointers</para></item>
          <item><para>PR#4378 ocamlbuild: typo in
plugin.ml</para></item>
          <item><para>PR#4379 ocamlbuild: problem with plugins under
Windows</para></item>
          <item><para>PR#4382 compilers: typing of polymorphic record
fields</para></item>
          <item><para>PR#4383 compilers: including module with private
type</para></item>
          <item><para>PR#4385 stdlib: Int32/Int64.format are
unsafe</para></item>
          <item><para>PR#4386 otherlibs: wrong signal numbers with
Unix.sigprocmask etc.</para></item>
          <item><para>PR#4387 ocamlbuild: build directory not used
properly</para></item>
          <item><para>PR#4392 ocamldep: optional argument of
class</para></item>
          <item><para>PR#4394 otherlibs: infinite loops in
Str</para></item>
          <item><para>PR#4397 otherlibs: wrong size for flag arrays in
win32unix</para></item>
          <item><para>PR#4402 ocamldebug: doesn't work with
-rectypes</para></item>
          <item><para>PR#4410 ocamlbuild: problem with plugin and
-build</para></item>
          <item><para>PR#4411 otherlibs: crash with Unix.access under
Windows</para></item>
          <item><para>PR#4412 stdlib: marshalling broken on 64 bit
architectures</para></item>
          <item><para>PR#4413 ocamlopt: crash on AMD64 with
out-of-bound access and reraise</para></item>
          <item><para>PR#4417 camlp4: pretty-printing of unary
minus</para></item>
          <item><para>PR#4419 camlp4: problem with constraint in type
class</para></item>
          <item><para>PR#4426 compilers: problem with optional
labels</para></item>
          <item><para>PR#4427 camlp4: wrong pretty-printing of lists
of functions</para></item>
          <item><para>PR#4433 ocamlopt: fails to build on MacOSX
10.5</para></item>
          <item><para>PR#4435 compilers: crash with
objects</para></item>
          <item><para>PR#4439 fails to build on MacOSX
10.5</para></item>
          <item><para>PR#4441 crash when build on sparc64
linux</para></item>
          <item><para>PR#4442 stdlib: crash with weak
pointers</para></item>
          <item><para>PR#4446 configure: fails to detect X11 on MacOSX
10.5</para></item>
          <item><para>PR#4448 runtime: huge page table on 64-bit
architectures</para></item>
          <item><para>PR#4450 compilers: stack overflow with recursive
modules</para></item>
          <item><para>PR#4470 compilers: type-checking of recursive
modules too restrictive</para></item>
          <item><para>PR#4472 configure: autodetection of libX11.so on
Fedora x86_64</para></item>
          <item><para>printf: removed (partially implemented)
positional specifications</para></item>
          <item><para>polymorphic &lt; and &lt;= comparisons: some C
compiler optimizations were causing incorrect results when arguments
are incomparable</para></item>
        </items>

        <items name="New features">
          <item><para>made configure script work on PlayStation
3</para></item>
          <item><para>ARM port: brought up-to-date for Debian 4.0
(Etch)</para></item>
          <item><para>many other small changes and bugfixes in camlp4,
ocamlbuild, labltk, emacs files</para></item>
        </items>
      </change>

      <change from="3.09.3" to="3.10.0">
        <items name="Language features">
          <item><para>Added virtual instance variables in classes "val
virtual v : t"</para></item>
          <item><para>* Changed the behaviour of instance variable
overriding; the new definition replaces the old one, rather than
creating a new variable.</para></item>
        </items>

        <items name="New tools">
          <item><para>ocamlbuild: compilation manager for OCaml
applications and libraries. See draft documentation at
http://gallium.inria.fr/~pouillar/</para></item>
          <item><para>* Camlp4: heavily revised implementation, new
API.</para></item>
        </items>

        <items name="New ports">
          <item><para>MacOS X PowerPC 64 bits.</para></item>
          <item><para>MS Windows 64 bits (x64) using the Microsoft
PSDK toolchain.</para></item>
          <item><para>MS Windows 32 bits using the Visual Studio 2005
toolchain.</para></item>
        </items>

        <items name="Compilers">
          <item><para>Faster type-checking of functor
applications.</para></item>
          <item><para>Referencing an interface compiled with -rectypes
from a module   not compiled with -rectypes is now an
error.</para></item>
          <item><para>Revised the "fragile matching"
warning.</para></item>
        </items>

        <items name="Native-code compiler">
          <item><para>Print a stack backtrace on an uncaught
exception. (Compile and link with ocamlopt -g; execute with
OCAMLRUNPARAM=b.) Supported on Intel/AMD in 32 and 64 bits, PPC in 32
and 64 bits.</para></item>
          <item><para>Stack overflow detection on MS Windows 32 bits
(courtesy O. Andrieu).</para></item>
          <item><para>Stack overflow detection on MacOS X PPC and
Intel.</para></item>
          <item><para>Intel/AMD 64 bits: generate position-independent
code by default.</para></item>
          <item><para>Fixed bug involving -for-pack and missing .cmx
files (PR#4124).</para></item>
          <item><para>Fixed bug causing duplication of literals
(PR#4152).</para></item>
        </items>

        <items name="Run-time system">
          <item><para>C/Caml interface functions take "char const *"
arguments instead of "char *" when appropriate.</para></item>
          <item><para>Faster string comparisons (fast case if strings
are ==).</para></item>
        </items>

        <items name="Standard library">
          <item><para>Refined typing of format strings (type
format6).</para></item>
          <item><para>Printf, Format: new function ifprintf that
consumes its arguments   and prints nothing (useful to print
conditionally).</para></item>
          <item><para>Scanf:   new function format_from_string to
convert a string to a format string;   new %r conversion to accomodate
user defined scanners.</para></item>
          <item><para>Filename: improved Win32 implementation of
Filename.quote.</para></item>
          <item><para>List: List.nth now tail-recursive.</para></item>
          <item><para>Sys: added Sys.is_directory.  Some functions
(e.g. Sys.command) that   could incorrectly raise Sys_io_blocked now
raise Sys_error as intended.</para></item>
          <item><para>String and Char: the function ``escaped'' now
escapes all the characters   especially handled by the compiler's
lexer (PR#4220).</para></item>
        </items>

        <items name="Other libraries">
          <item><para>Bigarray: mmap_file takes an optional argument
specifying the start position of the data in the mapped
file.</para></item>
          <item><para>Dynlink: now defines only two modules, Dynlink
and Dynlinkaux (internal),   reducing risks of name conflicts with
user modules.</para></item>
          <item><para>Labltk under Win32: now uses Tcl/Tk 8.4 instead
of 8.3 by default.</para></item>
          <item><para>VM threads: improved performance of I/O
operations (less polling).</para></item>
          <item><para>Unix: new function Unix.isatty.</para></item>
          <item><para>Unix emulation under Win32: fixed incorrect
error reporting in several functions (PR#4097); better handling of
channels opened on sockets (PR#4098); fixed GC bug in Unix.system
(PR#4112).</para></item>
        </items>

        <items name="Documentation generator (OCamldoc)">
          <item><para>correctly handle '?' in value names
(PR#4215)</para></item>
          <item><para>new option -hide-warnings not to print ocamldoc
warnings</para></item>
        </items>

        <item><para>Lexer generator (ocamllex): improved error
reporting.</para></item>
        <item><para>License: fixed a typo in the "special exception"
to the LGPL.</para></item>
      </change>

      <change from="3.09.2" to="3.09.3">
        <items name="Bug fixes">
          <item><para>ocamldoc: -using modtype constraint to filter
module elements displayed   in doc PR#4016</para></item>
          <item><para>ocamldoc: error in merging of top dependencies
of modules PR#4007</para></item>
          <item><para>ocamldoc: -dot-colors has no effect
PR#3981</para></item>
          <item><para>ocamdloc: missing crossref in text from intro
files PR#4066</para></item>
          <item><para>compilers: segfault with recursive modules
PR#4008</para></item>
          <item><para>compilers: infinite loop when compiling objects
PR#4018</para></item>
          <item><para>compilers: bad error message when signature
mismatch PR#4001</para></item>
          <item><para>compilers: infinite loop with -rectypes
PR#3999</para></item>
          <item><para>compilers: contravariance bug in private
rows</para></item>
          <item><para>compilers: unsafe cast with polymorphic
exception PR#4002</para></item>
          <item><para>native compiler: bad assembly code generated for
AMD64 PR#4067</para></item>
          <item><para>native compiler: stack alignment problems on
MacOSX/i386 PR#4036</para></item>
          <item><para>stdlib: crash in marshalling
PR#4030</para></item>
          <item><para>stdlib: crash when closing a channel twice
PR#4039</para></item>
          <item><para>stdlib: memory leak in Sys.readdir
PR#4093</para></item>
          <item><para>C interface: better definition of CAMLreturn
PR#4068</para></item>
          <item><para>otherlibs/unix: crash in gethostbyname
PR#3043</para></item>
          <item><para>tools: subtle problem with unset in makefile
PR#4048</para></item>
          <item><para>camlp4: install pa_o_fast.o
PR#3812</para></item>
          <item><para>camlp4: install more modules
PR#3689</para></item>
        </items>

        <items name="New features">
          <item><para>ocamldoc: name resolution in cross-referencing
{!name}: if name is not found, then it is searched in the parent
module/class, and in the parent of the parent, and so on until it is
found.</para></item>
          <item><para>ocamldoc: new option -short-functors to use a
short form to display functors in html generator
PR#4017</para></item>
          <item><para>ocamlprof: added "-version" option</para></item>
        </items>
      </change>

      <change from="3.09.1" to="3.09.2">
        <items name="Bug fixes">
          <item><para>Makefile: problem with "make world.opt"
PR#3954</para></item>
          <item><para>compilers: problem compiling several modules
with one command line PR#3979</para></item>
          <item><para>compilers,ocamldoc: error message that Emacs
cannot parse</para></item>
          <item><para>compilers: crash when printing type error
PR#3968</para></item>
          <item><para>compilers: -dtypes wrong for monomorphic type
variables PR#3894</para></item>
          <item><para>compilers: wrong warning on optional arguments
PR#3980</para></item>
          <item><para>compilers: crash when wrong use of type
constructor in let rec PR#3976</para></item>
          <item><para>compilers: better wording of "statement never
returns" warning PR#3889</para></item>
          <item><para>runtime: inefficiency of signal handling
PR#3990</para></item>
          <item><para>runtime: crashes with I/O in multithread
programs PR#3906</para></item>
          <item><para>camlp4: empty file name in error messages
PR#3886</para></item>
          <item><para>camlp4: stack overflow PR#3948</para></item>
          <item><para>otherlibs/labltk: ocamlbrowser ignores its
command line options PR#3961</para></item>
          <item><para>otherlibs/unix: Unix.times wrong under Mac OS X
PR#3960</para></item>
          <item><para>otherlibs/unix: wrong doc for execvp and execvpe
PR#3973</para></item>
          <item><para>otherlibs/win32unix: random crash in Unix.stat
PR#3998</para></item>
          <item><para>stdlib: update_mod not found under Windows
PR#3847</para></item>
          <item><para>stdlib: Filename.dirname/basename wrong on Win32
PR#3933</para></item>
          <item><para>stdlib: incomplete documentation of
Pervasives.abs PR#3967</para></item>
          <item><para>stdlib: Printf bugs PR#3902,
PR#3955</para></item>
          <item><para>tools/checkstack.c: missing
include</para></item>
          <item><para>yacc: crash when given argument "-"
PR#3956</para></item>
        </items>

        <items name="New features">
          <item><para>ported to MacOS X on Intel PR#3985</para></item>
          <item><para>configure: added support for GNU Hurd
PR#3991</para></item>
        </items>
      </change>

      <change from="3.09.0" to="3.09.1">
        <items name="Bug fixes">
          <item><para>compilers: raise not_found with -principal
PR#3855</para></item>
          <item><para>compilers: assert failure in typeclass.cml
PR#3856</para></item>
          <item><para>compilers: assert failure in typing/ctype.ml
PR#3909</para></item>
          <item><para>compilers: fatal error exception Ctype.Unify
PR#3918</para></item>
          <item><para>compilers: spurious warning Y in objects
PR#3868</para></item>
          <item><para>compilers: spurious warning Z on loop index
PR#3907</para></item>
          <item><para>compilers: error message that emacs cannot
parse</para></item>
          <item><para>ocamlopt: problems with -for-pack/-pack PR#3825,
PR#3826, PR#3919</para></item>
          <item><para>ocamlopt: can't produce shared libraries on
x86_64 PR#3869, PR#3924</para></item>
          <item><para>ocamlopt: float alignment problem on SPARC
PR#3944</para></item>
          <item><para>ocamlopt: can't compile on MIPS
PR#3936</para></item>
          <item><para>runtime: missing dependence for
ld.conf</para></item>
          <item><para>runtime: missing dependence for .depend.nt
PR#3880</para></item>
          <item><para>runtime: memory leak in
caml_register_named_value PR#3940</para></item>
          <item><para>runtime: crash in Marshal.to_buffer
PR#3879</para></item>
          <item><para>stdlib: Sys.time giving wrong results on Mac OS
X PR#3850</para></item>
          <item><para>stdlib: Weak.get_copy causing random crashes in
rare cases</para></item>
          <item><para>stdlib, debugger, labltk: use TMPDIR if set
PR#3895</para></item>
          <item><para>stdlib: scanf bug on int32 and nativeint
PR#3932</para></item>
          <item><para>camlp4: mkcamlp4 option parsing problem
PR#3941</para></item>
          <item><para>camlp4: bug in pretty-printing of
lazy/assert/new</para></item>
          <item><para>camlp4: update the unmaintained makefile for
_loc name</para></item>
          <item><para>ocamldoc: several fixes see
ocamldoc/Changes.txt</para></item>
          <item><para>otherlibs/str: bug in long sequences of
alternatives PR#3783</para></item>
          <item><para>otherlibs/systhreads: deadlock in Windows
PR#3910</para></item>
          <item><para>tools: update dumpobj to handle new event format
PR#3873</para></item>
          <item><para>toplevel: activate warning Y in toplevel
PR#3832</para></item>
        </items>

        <items name="New features">
          <item><para>otherlibs/labltk: browser uses menu bars instead
of menu buttons</para></item>
        </items>
      </change>

      <change from="3.08.4" to="3.09.0">
        <items name="Language features">
          <item><para>Introduction of private row types, for
abstracting the row in object and variant types.</para></item>
        </items>

        <items name="Type checking">
          <item><para>Polymorphic variants with at most one
constructor [&lt; `A of t] are no longer systematically promoted to
the exact type [`A of t]. This was more confusing than useful, and
created problems with private row types.</para></item>
        </items>

        <items name="Both compilers">
          <item><para>Added warnings 'Y' and 'Z' for local variables
that are bound but never used.</para></item>
          <item><para>Added warning for some uses non-returning
functions (e.g. raise), when they are passed extra arguments, or
followed by extra statements.</para></item>
          <item><para>Pattern matching: more prudent compilation in
case of guards; fixed PR#3780.</para></item>
          <item><para>Compilation of classes: reduction in size of
generated code.</para></item>
          <item><para>Compilation of "module rec" definitions: fixed a
bad interaction with structure coercion (to a more restrictive
signature).</para></item>
        </items>

        <items name="Native-code compiler (ocamlopt)">
          <item><para>* Revised implementation of the -pack option
(packing of several compilation units into one).  The .cmx files that
are to be packed with "ocamlopt -pack -o P.cmx" must be compiled with
"ocamlopt -for-pack P". In exchange for this additional constraint,
ocamlopt -pack is now available on all platforms (no need for
binutils).</para></item>
          <item><para>* Fixed wrong evaluation order for arguments to
certain inlined functions.</para></item>
          <item><para>Modified code generation for "let rec ... and
..." to reduce compilation time (which was quadratic in the number of
mutually-recursive functions).</para></item>
          <item><para>x86 port: support tail-calls for functions with
up to 21 arguments.</para></item>
          <item><para>AMD64 port, Linux: recover from system stack
overflow.</para></item>
          <item><para>Sparc port: more portable handling of
out-of-bound conditions on systems other than Solaris.</para></item>
        </items>

        <items name="Standard library">
          <item><para>Pervasives: faster implementation of close_in,
close_out. set_binary_mode_{out,in} now working correctly under
Cygwin.</para></item>
          <item><para>Printf: better handling of partial applications
of the printf functions.</para></item>
          <item><para>Scanf: new function sscanf_format to read a
format from a string. The type of the resulting format is dynamically
checked and should be the type of the template format which is the
second argument.</para></item>
          <item><para>Scanf: no more spurious lookahead attempt when
the end of file condition is set and a correct token has already been
read and could be returned.</para></item>
        </items>

        <items name="Other libraries">
          <item><para>System threads library: added Thread.sigmask;
fixed race condition in signal handling.</para></item>
          <item><para>Bigarray library: fixed bug in
Array3.of_array.</para></item>
          <item><para>Unix library: use canonical signal numbers in
results of Unix.wait*; hardened Unix.establish_server against EINTR
errors.</para></item>
        </items>

        <items name="Run-time system">
          <item><para>Support platforms where sizeof(void *) = 8 and
sizeof(long) = 4.</para></item>
          <item><para>Improved and cleaned up implementation of signal
handling.</para></item>
        </items>

        <items name="Replay debugger">
          <item><para>Improved handling of locations in source
code.</para></item>
        </items>

        <items name="OCamldoc">
          <item><para>extensible {foo } syntax</para></item>
          <item><para>user can give .txt files on the command line,
containing ocamldoc formatted text, to be able to include bigger texts
out of source files</para></item>
          <item><para>-o option is now used by the html generator to
indicate the prefix of generated index files (to avoid conflict when a
Index module exists on case-insensitive file systems).</para></item>
        </items>

        <items name="Miscellaneous">
          <item><para>Configuration information is installed in
`ocamlc -where`/Makefile.config and can be used by client Makefiles or
shell scripts.</para></item>
        </items>
      </change>

      <note type="configuration">
        <para>The native code-generator is not supported for AIX. Or
on HP-UX/IA64. Therefore, programs with the "<command>.opt</command>"
extension are unavailable on these platform.</para>
      </note>

      <note type="usage">
        <para>The default ocaml module search path (defined in
"<command>${SB_INSTALL_PREFIX_LIB}/ld.conf</command>):</para>
        <screen>
${SB_INSTALL_PREFIX_LIB}/stublibs
${SB_INSTALL_PREFIX_LIB}
${SB_INSTALL_BASE}/ocaml31p/lib/stublibs
${SB_INSTALL_BASE}/ocaml31p/lib
        </screen>

        <para>The following 3rd-party modules are provided: dl 1.0.2,
findlib 1.0.4, lablgtk 1.2.7, lablgtk2-20050701</para>
      </note>
    </notes>

    <changelog>
      <change date="2012 January 20" revision="3"
      author="Peter O'Gorman" email="pogma@thewrittenword.com">
        <item><para>Update gcc dependency from 4.2.4 to
4.4.6</para></item>
      </change>

      <change date="2010 November 1" revision="2"
      author="Peter O'Gorman" email="pogma@thewrittenword.com">
        <item><para>Add support for RHEL 6</para></item>
      </change>
    </changelog>
  </program>
</programs>
