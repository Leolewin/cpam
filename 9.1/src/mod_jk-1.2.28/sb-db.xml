<?xml version="1.0"?>
<programs>
<!DOCTYPE programs SYSTEM "sb-db.dtd">
  <program name="mod_jk" version="1.2.28" revision="2"
  systype="*-aix*|*-hpux11*|*-irix*|*-linux*|*-solaris*">
    <build-name>tomcat-connectors-${SB_PROG_VER}-src</build-name>

    <install-name>modjk1228</install-name>

    <sources>
      <source checksum="db3990a95d0a9a874e798f305c91931c"
        checksum-type="md5" size="1541956"
        path="src/tomcat-connectors-1.2.28-src.tar.gz"/>
      <patch checksum="d86e8920cbf3769c90169103a775806c"
        checksum-type="md5" size="13360"
        path="src/tomcat-connectors-1.2.28-src.tww.patch"/>
      <patch checksum="a5e13f67f3eed56f164ed455e1e3d283"
        checksum-type="md5" size="1777401"
        path="src/tomcat-connectors-1.2.28-src.auto.patch"/>
    </sources>

    <dependencies>
      <depend program="perl" add-path="prepend">v==5.12.2</depend>
    </dependencies>

    <script-header>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc CFLAGS="-O2 -qro -qroconst -qmaxmem=-1 -qarch=ppc" ;;
*-hpux11.[01]*)
  CC=cc CFLAGS="+O2 -z +Onofltacc +Olit=all +DAportable \
+Oentrysched +Odataprefetch +Onolimit"
  _os_type="hp-ux" ;;
*-hpux*)
  CC=cc CFLAGS="+O2 -z +Onofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"
  _os_type="hp-ux" ;;
*-irix*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1429 \
-use_readonly_const -G0 -rdata_shared -DEBUG:optimize_space=ON \
-O2 -OPT:Olimit=0"
  _os_type="irix" ;;
i?86*-linux*)
  CFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"
  _os_type="linux" ;;
*-linux*)
  _os_type="linux" ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=pentium4"
  _os_type="solaris" ;;
*-solaris2.8)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 -xarch=v8plusa"
  _os_type="solaris" ;;
*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-m32 -xarch=sparcvis"
  _os_type="solaris" ;;
esac
]]>
    </script-header>

    <build>
<![CDATA[
gmake -C native
]]>
    </build>

    <module name="default">
      <validate>
        <depend program="mod_jk" module="2.2.21">v==1.2.28</depend>
        <depend program="mod_jk"
          module="2.2.21-worker">v==1.2.28</depend>
      </validate>

      <script-header>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc CFLAGS="-O2 -qro -qroconst -qmaxmem=-1 -qarch=ppc" ;;
*-hpux11.[01]*)
  CC=cc CFLAGS="+O2 -z +Onofltacc +Olit=all +DAportable \
+Oentrysched +Odataprefetch +Onolimit"
  _os_type="hp-ux" ;;
*-hpux*)
  CC=cc CFLAGS="+O2 -z +Onofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"
  _os_type="hp-ux" ;;
*-irix*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1429 \
-use_readonly_const -G0 -rdata_shared -DEBUG:optimize_space=ON \
-O2 -OPT:Olimit=0"
  _os_type="irix" ;;
i?86*-linux*)
  CFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"
  _os_type="linux" ;;
*-linux*)
  _os_type="linux" ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=pentium4"
  _os_type="solaris" ;;
*-solaris2.8)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 -xarch=v8plusa"
  _os_type="solaris" ;;
*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-m32 -xarch=sparcvis"
  _os_type="solaris" ;;
esac
]]>
      </script-header>

      <build>
<![CDATA[
gmake -C native
]]>
      </build>

      <uninstall>
<![CDATA[
rm -rf ${SB_INSTALL_PREFIX}
]]>
      </uninstall>
    </module>

    <module name="2.2.21">
      <dependencies replace="0">
        <depend program="httpd" var="HTTPD">v==2.2.21</depend>
      </dependencies>

      <script-header>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc CFLAGS="-O2 -qro -qroconst -qmaxmem=-1 -qarch=ppc" ;;
*-hpux11.[01]*)
  CC=cc CFLAGS="+O2 -z +Onofltacc +Olit=all +DAportable \
+Oentrysched +Odataprefetch +Onolimit"
  _os_type="hp-ux" ;;
*-hpux*)
  CC=cc CFLAGS="+O2 -z +Onofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"
  _os_type="hp-ux" ;;
*-irix*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1429 \
-use_readonly_const -G0 -rdata_shared -DEBUG:optimize_space=ON \
-O2 -OPT:Olimit=0"
  _os_type="irix" ;;
i?86*-linux*)
  CFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"
  _os_type="linux" ;;
*-linux*)
  _os_type="linux" ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=pentium4"
  _os_type="solaris" ;;
*-solaris2.8)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 -xarch=v8plusa"
  _os_type="solaris" ;;
*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-m32 -xarch=sparcvis"
  _os_type="solaris" ;;
esac
]]>
      </script-header>

      <configure>
<![CDATA[
(cd native
 ${SHELL} ./configure CC="${CC:-gcc}" CFLAGS="${CFLAGS:--O2}" \
 --with-apxs="${SB_VAR_HTTPD}/bin/apxs" \
 --prefix=${SB_INSTALL_PREFIX})
]]>
      </configure>

      <build>
<![CDATA[
gmake -C native
]]>
      </build>

      <install>
<![CDATA[
${SB_PATH_INSTALL} -m 755 -o root -g 0 -d \
${SB_INSTALL_PREFIX}/modules/${SB_MODULE_NAME}

(cd native/apache-2.0
 ${SB_VAR_HTTPD}/bin/apxs \
 -S LIBEXECDIR=${SB_INSTALL_PREFIX}/modules/${SB_MODULE_NAME} -i mod_jk.la)
]]>
      </install>
    </module>

    <module name="2.2.21-worker">
      <dependencies replace="0">
        <depend program="httpd" var="HTTPD"
          module="worker">v==2.2.21</depend>
      </dependencies>

      <script-header>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc CFLAGS="-O2 -qro -qroconst -qmaxmem=-1 -qarch=ppc" ;;
*-hpux11.[01]*)
  CC=cc CFLAGS="+O2 -z +Onofltacc +Olit=all +DAportable \
+Oentrysched +Odataprefetch +Onolimit"
  _os_type="hp-ux" ;;
*-hpux*)
  CC=cc CFLAGS="+O2 -z +Onofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"
  _os_type="hp-ux" ;;
*-irix*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1429 \
-use_readonly_const -G0 -rdata_shared -DEBUG:optimize_space=ON \
-O2 -OPT:Olimit=0"
  _os_type="irix" ;;
i?86*-linux*)
  CFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"
  _os_type="linux" ;;
*-linux*)
  _os_type="linux" ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=pentium4"
  _os_type="solaris" ;;
*-solaris2.8)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 -xarch=v8plusa"
  _os_type="solaris" ;;
*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-m32 -xarch=sparcvis"
  _os_type="solaris" ;;
esac
]]>
      </script-header>

      <configure>
<![CDATA[
(cd native
 ${SHELL} ./configure CC="${CC:-gcc}" CFLAGS="${CFLAGS:--O2}" \
 --with-apxs="${SB_VAR_HTTPD}/bin/apxs.worker" \
 --prefix=${SB_INSTALL_PREFIX})
]]>
      </configure>

      <build>
<![CDATA[
gmake -C native
]]>
      </build>

      <install>
<![CDATA[
${SB_PATH_INSTALL} -m 755 -o root -g 0 -d \
${SB_INSTALL_PREFIX}/modules/${SB_MODULE_NAME}

(cd native/apache-2.0
 ${SB_VAR_HTTPD}/bin/apxs.worker \
 -S LIBEXECDIR=${SB_INSTALL_PREFIX}/modules/${SB_MODULE_NAME} -i mod_jk.la)
]]>
      </install>
    </module>

    <licenses>
      <license path="apache-2.0.license"/>
    </licenses>

    <notes>
      <change from="1.2.24" to="1.2.25">
        <item><para>The Apache Tomcat team is proud to announce the
immediate availability of Tomcat Connectors 1.2.28. This is a stable
release concentrating mainly on some bug fixes.</para></item>
        <item><para>The most important new features in this version
are:</para></item>
        <items name="Better Error Detection for Load Balancer Workers">
          <item><para>Local and global error states have been
improved. You can fine tune the behaviour with the new
"error_escalation_time" attribute (see the timeouts
documentation).</para></item>
        </items>

        <items name="Dynamic Address and Port Change Using the Status Worker">
          <item><para>The status worker now allows you to change the
address and the port of an AJP13 worker on the fly. You can e.g.
provision dummy workers with a port equal to "0", which will be
automatically put into stopped mode during startup. Later, when you
want to actually use thse workers, you set their address and port to
the final values.</para></item>
          <item><para>Note that already existing connections will go
on using the old address and port. This will be improved in future
versions.</para></item>
        </items>

        <items name="New Data in Status Worker Display">
          <item><para>The status worker display now also contains the
timestamp of the last worker errors.</para></item>
        </items>

        <items name="Improved Proxy Flexibility">
          <item><para>You can now overwrite more request metadata
before the request gets send to the backend. This is helpful in case
there are other reverse proxies in front of your web server. A new
documentation page explains this in detail.</para></item>
        </items>

        <items name="Improved IIS Support">
          <item><para>IIS support has been improved especially when
using mutltiple application pools. Furthermore you can now configure
the ISAPI plugin to update the uriworkermap.properies file on a
regular interval using the watchdog thread.</para></item>
        </items>

        <items name="JNI Worker Deprecation">
          <item><para>Workers of type jni are broken since a long
time. Since there is no more use for them, they have been deprecated
now, and will be removed in a future release.</para></item>
        </items>
      </change>

      <change from="1.2.24" to="1.2.25">
        <item><para>The Apache Tomcat team is proud to announce the
immediate availability of Tomcat Connectors 1.2.27. This is a stable
release adding lots of new features and some bug fixes.</para></item>
        <item><para>The most important new features in this version
are:</para></item>
        <items name="Watchdog Thread for Periodic Tasks">
          <item><para>The connector has to run some periodic tasks
independant of request processing. Examples are probing or closing
down idle backend connections, adjusting load numbers and recovering
workers from error state.</para></item>
          <item><para>Before version 1.2.27 these tasks were done
inside the request processing loop. When a new request came in and the
task was due, the thread handling the request first executed the
internal task and then handled the request. If there were no requests
coming in, the tasks would not run. If any of the tasks took
unexpectedly long, the response time of the request waiting for the
finishing of the task went up.</para></item>
          <item><para>Starting with this release you can configure a
separate watchdog thread inside the web server to run all those tasks
independantly of request processing. This new feature is avaliable for
the connector when used with Apache httpd 2.x or with Microsoft IIS.
To keep the behaviour of the new version consistent with previous
releases, this feature is turned off by default. You can activate the
watchdog thread via JkWatchdogInterval for Apache or watchdog_interval
for IIS.</para></item>
        </items>

        <items name="Connection Probing">
          <item><para>In previous releases connection probing
(checking whether connections still work) could only be done
immediately after a new connection was established and directly before
sending each request. Since we now have the watchdog thread available,
we also added a periodic probing option, which you can activate with
the worker attribute ping_mode. This will also be useful as a
protection against the infamous firewall idle connection
drop.</para></item>
          <item><para>The older attributes connect_timeout and
prepost_timeout still exist and work the same way they did in previous
releases. Since there are now three different probing options, we
recommend to migrate your configuration to the newer attributes
ping_mode, ping_timeout and connection_ping_interval.</para></item>
        </items>

        <items name="Mount Extensions">
          <item><para>Usually one defines workers and mounts for the
connector. A worker defines a backend we want to talk to and the
configuration parameters of the communication, connection pools etc.
The mounts define which URIs we want to forward to which worker (so we
also call a mount an URI map rule). In version 1.2.27 you can
overwrite certain worker parameter per mount.</para></item>
          <item><para>One easy to understand example is reply
timeouts. Until this release you had to specify a reply timeout for
the whole worker. But reply times depend a lot on the type of request.
So normally you want to define a general reply timeout and for some
special URLs you need to relax the reply timeout, because you know
those URLs take much longer to process (like e.g. reporting or other
compute intensive tasks).</para></item>
          <item><para>Another possible case is the activation status.
You might use a load balancer worker to forward requests to certain
webapps in a farm of Tomcat nodes. If you wanted to update some webapp
on one node, you previously had to stop forwarding requests for all
webapps on this Tomcat node. What was not possible until now, was
stopping forwarding requests restricted to the webapp and the node you
wanted to update.</para></item>
          <item><para>Starting with this release, you can add
so-called rule extensions to your uriworkermap file to influence
worker parameters per mount. This will work for all Apache versions
and for IIS. Remember, that the uriworkermap file automatically gets
reloaded after changes without web server restart.</para></item>
        </items>

        <items name="Improved IIS support">
          <item><para>We improved IIS support im various ways. It is
now possible to use multiple IIS 6 application pools with the ISAPI
redirector.</para></item>
          <item><para>Furthermore some improvements were added as
compile time features. The most notable one is chunked encoding
support, which was a major refactoring and is therefore still
considered experimental. You can download binaries with and without
chunked encoding support. In future versions, chunked encoding will
likely be availabe in all builds.</para></item>
          <item><para>Another new feature is an elegant way of
configuring error page redirects. All new features are documented on
the documentation page about configuring IIS.</para></item>
        </items>

        <items name="Enhanced Status Worker">
          <item><para>The status worker now can also manage and show
statistics for AJP workers that are not part of a load balancer. Other
improvements are the new dump action, the integration of the new
configuration attributes, showing average request and transfer rates
since the last statistics reset and the ability to display only a
single member of a load balancer.</para></item>
          <item><para>Unfortunately we had to change some request
parameters used for the update action of the status
worker.</para></item>
        </items>

        <items name="Further enhancements are:">
          <item><para>Configurable session stickyness indicator:
cookie name and URL path parameter name can be freely chosen instead
of the servlet spec compliant JSESSIONID and
;jsessionid.</para></item>
          <item><para>Automatically determining the size of the shared
memory segment needed to accommodate all workers.</para></item>
          <item><para>New connection establishment timeout
socket_connect_timeout.</para></item>
          <item><para>New timeout connection_acquire_timeout for
acquiring a free connection from the pool.</para></item>
          <item><para>Improved retry handling by adjusting the meaning
of the attribute retries for AJP workers and for load balancers and by
adding the new retry_interval.</para></item>
          <item><para>Allowing the web server to provide error pages
instead of Tomcat.</para></item>
        </items>
      </change>

      <change from="1.2.24" to="1.2.25">
        <item><para>The Apache Tomcat team is proud to announce the
immediate availability of Tomcat Connectors 1.2.26. This is a stable
release adding few new features and some bug fixes.</para></item>
      </change>

      <change from="1.2.24" to="1.2.25">
        <item><para>The Apache Tomcat team is proud to announce the
immediate availability of Tomcat Connectors 1.2.25. This is a stable
release adding new features and a few bug fixes.</para></item>
      </change>

      <change from="1.2.23" to="1.2.24">
        <item><para>This release has been withdrawn.</para></item>
      </change>

      <change from="1.2.22" to="1.2.23">
        <item><para>The Apache Tomcat team is proud to announce the
immediate availability of Tomcat Connectors 1.2.23. This is a stable
release adding new features and a few bug fixes to version
1.2.23.</para></item>
        <item><para>It fixes an Important vulnerability.</para></item>
      </change>

      <change from="1.2.21" to="1.2.22">
        <item><para>The Apache Tomcat team is proud to announce the
immediate availability of Tomcat Connectors 1.2.22. This is a stable
release adding new features and a few bug fixes to version
1.2.22.</para></item>
      </change>

      <change from="1.2.20" to="1.2.21">
        <item><para>The Apache Tomcat team is proud to announce the
immediate availability of Tomcat Connectors 1.2.21. This is a stable
release adding new features and a few bug fixes to version
1.2.20.</para></item>
        <item><para>It fixes a Critical vulnerability introduced in
version 1.2.19</para></item>
      </change>

      <change from="1.2.19" to="1.2.20">
        <item><para>The Apache Tomcat team is proud to announce the
immediate availability of Tomcat Connectors 1.2.20. This is a stable
release adding new features and a few bug fixes to version 1.2.19.
Furthermore the documentation has been reorganised.</para></item>
      </change>

      <change from="1.2.18" to="1.2.19">
        <item><para>The Apache Tomcat team is proud to announce the
immediate availability of Tomcat Connectors 1.2.19. This is a stable
release adding some features and a few bug fixes to version 1.2.18.
Furthermore the non-functional code trees for isapi and domino have
been removed.</para></item>
      </change>

      <note type="installation">
        <para>The Apache module, <command>mod_jk.so</command>, is
installed to the following directories depending on the Apache
version:</para>
        <screen>
${SB_INSTALL_PREFIX}/modules/2.2.21           # 2.2.21
        </screen>

        <para>The postinstall script automatically updates the Apache
configuration file to load the mod_perl module. The postinstall script
will search for an installed version of Apache httpd 2.2.21. It will
update the Apache configuration file for the first version of Apache
found on the system, in the abovementioned order.</para>
        <para>The postinstall script adds the following entry to the
httpd configuration file:</para>
        <screen>
LoadModule jk_module ${SB_INSTALL_PREFIX}/modules/[ver]/mod_jk.so
        </screen>
      </note>
    </notes>

    <changelog>
      <change date="2012 February 1" revision="2"
      author="Peter O'Gorman" email="pogma@thewrittenword.com">
        <item><para>Update perl dependency from 5.8.8 to
5.12.2</para></item>
        <item><para>Update httpd from 2.2.14 to 2.2.21</para></item>
        <item><para>Add support for AIX 7.1</para></item>
      </change>
    </changelog>
  </program>
</programs>
