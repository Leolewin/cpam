<?xml version="1.0"?>
<programs>
<!DOCTYPE programs SYSTEM "sb-db.dtd">
  <program name="clucene" version="2.3.3.4" revision="1">
    <install-name>lib${SB_PROG_NAME}23</install-name>

    <dependencies>
      <depend program="cmake" install-name="cmake28"
        add-path="prepend" type="build">v&gt;=2.8.5</depend>
      <depend program="zlib" var="LIBZ"
        install-name="libz12">v&gt;=1.2.5</depend>
    </dependencies>

    <script-header>
<![CDATA[
_datadir="${SB_INSTALL_PREFIX}/share"
_docdir="${SB_INSTALL_PREFIX}/doc"

_gccsubdir="gcc44"
]]>
    </script-header>

    <module name="default">
      <build-name>clucene-core-2.3.3.4</build-name>

      <sources>
        <source checksum="48d647fbd8ef8889e5a7f422c1bfda94"
          checksum-type="md5" size="2241498"
          path="src/clucene-core-2.3.3.4.tar.gz"/>
        <patch checksum="d7f60da0b2a26541f69e61ae8b48aecf"
          checksum-type="md5" size="17592"
          path="src/clucene-core-2.3.3.4.tww.patch"/>
      </sources>

      <dependencies replace="0">
        <depend program="gcc" install-name="gcc44" add-path="prepend"
          systype="*-solaris*">v&gt;=4.4.6</depend>
        <depend var="GCC_RT" install-name="gcc44r"
          systype="*-solaris*"/>
      </dependencies>

      <validate>
        <depend program="clucene" module="gcc44"
          systype="!*-solaris*">v==2.3.3.4</depend>
      </validate>

      <script-header>
<![CDATA[
_datadir="${SB_INSTALL_PREFIX}/share"
_docdir="${SB_INSTALL_PREFIX}/doc"

_gccsubdir="gcc44"
]]>
      </script-header>

      <configure>
<![CDATA[
case "${SB_SYSTYPE}" in
*-solaris*)
  _libsuffix="/${_gccsubdir}" ;;
esac

case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc_r CFLAGS="-O2 -qro -qroconst -qmaxmem=-1 -qarch=ppc"
  CXX=xlC_r CXXFLAGS="-O2 -qro -qroconst -qnotempinc \
-qnotemplateregistry -qmaxmem=-1 -qarch=ppc"
  LDFLAGS="-Wl,-brtl -Wl,-blibpath:/usr/lib"
  CC_LD_RT="-Wl,-blibpath:" ;;
ia64*-hpux11.23)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit -mt"
  CXX=aCC CXXFLAGS="-AA -z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit -mt -ext"
  CC_LD_RT="-Wl,+b," ;;
ia64*-hpux*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit -mt"
  CXX=aCC CXXFLAGS="-AA -z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit -mt"
  CC_LD_RT="-Wl,+b," ;;
*-hpux11.00)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +DAportable \
+Oentrysched +Odataprefetch +Onolimit -mt"
  CXX=aCC CXXFLAGS="-AA -z +O2 +Ofltacc +Olit=all +DAportable \
+Oentrysched +Odataprefetch +Onolimit -mt"
  CC_LD_RT="-Wl,+s,+b," ;;
*-hpux11.11)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +DAportable \
+Oentrysched +Odataprefetch +Onolimit -mt"
  CXX=aCC CXXFLAGS="-AA -z +O2 +Ofltacc +Olit=all +DAportable \
+Oentrysched +Odataprefetch +Onolimit +hpxstd98 -mt"
  CC_LD_RT="-Wl,+s,+b," ;;
*-hpux11.23)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit -mt"
  CXX=aCC CXXFLAGS="-AA -z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit -mt -ext"
  CC_LD_RT="-Wl,+s,+b," ;;
*-hpux*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit -mt"
  CXX=aCC CXXFLAGS="-AA -z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit -mt"
  CC_LD_RT="-Wl,+s,+b," ;;
*-irix*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1009,1429 \
-use_readonly_const -G0 -rdata_shared -DEBUG:optimize_space=ON \
-O2 -OPT:Olimit=0"
  CXX=CC CXXFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1429 \
-use_readonly_const -G0 -rdata_shared -DEBUG:optimize_space=ON \
-ptused -FE:template_in_elf_section -O2 -OPT:Olimit=0"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-linux*)
  CFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"
  CXXFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"
  CC_LD_RT="-Wl,-rpath," ;;
*-linux*)
  CC_LD_RT="-Wl,-rpath," ;;
*-osf*)
  CC=cc CFLAGS="-O2 -arch ev5 -msym -readonly_strings"
  CXX=cxx CXXFLAGS="-O2 -arch ev5 -model ansi -msym \
-readonly_strings -timplicit_local -D__USE_STD_IOSTREAM"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-solaris*)
  CFLAGS="-O2 -mtune=pentium4 -march=pentium4"
  CXXFLAGS="-O2 -mtune=pentium4 -march=pentium4"
  CC_LD_RT="-R" ;;
*-solaris*)
  CFLAGS="-O2 -mcpu=ultrasparc -mvis"
  CXXFLAGS="-O2 -mcpu=ultrasparc -mvis"
  CC_LD_RT="-R" ;;
esac

case "${SB_SYSTYPE}" in
*-linux*) ;;
*)
  ARGS="${ARGS+${ARGS}} -DUSE_GNU_VISIBILITY=OFF" ;;
esac

mkdir -p builddir
cd builddir
CC="${CC:-gcc}" CFLAGS="${CFLAGS:--O2}" \
CXX="${CXX:-g++}" CXXFLAGS="${CXXFLAGS:--O2}" \
LDFLAGS="${SB_VAR_GCC_RT+-L${SB_VAR_GCC_RT_LIB} \
${CC_LD_RT}${SB_VAR_GCC_RT_LIB}} ${LDFLAGS+${LDFLAGS}}" \
cmake .. ${ARGS+${ARGS}} \
${_libsuffix+-DLIB_SUFFIX=${_libsuffix}} \
-DCMAKE_VERBOSE_MAKEFILE=ON \
-DCMAKE_BUILD_TYPE:STRING="Release" \
-DCMAKE_CXX_FLAGS_RELEASE:STRING="${CXXFLAGS:--O2}" \
-DCMAKE_C_FLAGS_RELEASE:STRING="${CFLAGS:--O2}" \
-DCMAKE_INSTALL_PREFIX="${SB_INSTALL_PREFIX}" \
-DCMAKE_LIBRARY_PATH="${SB_INSTALL_PREFIX_LIB}${_libsuffix+${_libsuffix}}\
${SB_VAR_LIBZ+;${SB_VAR_LIBZ_LIB}}" \
-DCMAKE_INSTALL_RPATH="${SB_INSTALL_PREFIX_LIB}${_libsuffix+${_libsuffix}}\
${SB_VAR_LIBZ+;${SB_VAR_LIBZ_LIB}}" \
-DCMAKE_INCLUDE_PATH="${SB_INSTALL_PREFIX}/include\
${SB_VAR_LIBZ+;${SB_VAR_LIBZ_INC}}"

${SB_PATH_SED} -i -e "\
s!-L\(\${libdir}\)!-L\1 ${CC_LD_RT}\1!;" \
src/core/libclucene-core.pc
]]>
      </configure>

      <build>
<![CDATA[
gmake -C builddir
]]>
      </build>

      <test auto-include="0">
<![CDATA[
(cd builddir
 gmake cl_test
 ./bin/cl_test)
]]>
      </test>

      <install>
<![CDATA[
(cd builddir
 gmake install

 # Relink libclucene-core
 case "${SB_SYSTYPE}" in #(
 hppa*-hpux*)
   ${SB_PATH_FIND} src/core -path "*/CMakeRelink.dir/*" \
     -type f -exec rm '{}' \;
   gmake clucene-core/preinstall
   cmake -D CMAKE_INSTALL_COMPONENT="runtime" -P cmake_install.cmake ;;
 esac)
]]>
      </install>
    </module>

    <module name="gcc44"
    systype="!*-solaris*">
      <build-name>clucene-core-2.3.3.4</build-name>

      <sources>
        <source checksum="48d647fbd8ef8889e5a7f422c1bfda94"
          checksum-type="md5" size="2241498"
          path="src/clucene-core-2.3.3.4.tar.gz"/>
        <patch checksum="d7f60da0b2a26541f69e61ae8b48aecf"
          checksum-type="md5" size="17592"
          path="src/clucene-core-2.3.3.4.tww.patch"/>
      </sources>

      <dependencies replace="0">
        <depend program="gcc" install-name="gcc44"
          add-path="prepend">v&gt;=4.4.6</depend>
        <depend var="GCC_RT" install-name="gcc44r"/>
      </dependencies>

      <script-header>
<![CDATA[
_datadir="${SB_INSTALL_PREFIX}/share"
_docdir="${SB_INSTALL_PREFIX}/doc"

_gccsubdir="gcc44"
]]>
      </script-header>

      <configure>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  CFLAGS="-O2 -mcpu=powerpc"
  CXXFLAGS="-O2 -mcpu=powerpc"
  LDFLAGS="-Wl,-brtl -Wl,-blibpath:/usr/lib"
  CC_LD_RT="-Wl,-blibpath:" ;;
ia64*-hpux*)
  CC_LD_RT="-Wl,+b," ;;
*-hpux11.00)
  CC_LD_RT="-Wl,+s,+b,"

  # libstdc++ is not built with wchar_t support on hpux11.00, so we
  # can not build the unicode version there.
  ARGS="${ARGS+${ARGS} }-DENABLE_ASCII_MODE:BOOL=ON" ;;
*-hpux*)
  CC_LD_RT="-Wl,+s,+b," ;;
*-irix*)
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-linux*)
  CFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"
  CXXFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"
  CC_LD_RT="-Wl,-rpath," ;;
*-linux*)
  CC_LD_RT="-Wl,-rpath," ;;
*-osf*)
  CFLAGS="-O2 -mieee"
  CXXFLAGS="-O2 -mieee"
  CC_LD_RT="-Wl,-rpath," ;;
esac

case "${SB_SYSTYPE}" in
*-linux*) ;;
*)
  ARGS="${ARGS+${ARGS}} -DUSE_GNU_VISIBILITY=OFF" ;;
esac

_libsuffix="/${_gccsubdir}"

mkdir -p builddir
cd builddir
CC="${CC:-gcc}" CFLAGS="${CFLAGS:--O2}" \
CXX="${CXX:-g++}" CXXFLAGS="${CXXFLAGS:--O2}" \
LDFLAGS="${SB_VAR_GCC_RT+-L${SB_VAR_GCC_RT_LIB} \
${CC_LD_RT}${SB_VAR_GCC_RT_LIB}} ${LDFLAGS+${LDFLAGS}}" \
cmake .. ${ARGS+${ARGS}} \
${_libsuffix+-DLIB_SUFFIX=${_libsuffix}} \
-DCMAKE_VERBOSE_MAKEFILE=ON \
-DCMAKE_BUILD_TYPE:STRING="Release" \
-DCMAKE_CXX_FLAGS_RELEASE:STRING="${CXXFLAGS:--O2}" \
-DCMAKE_C_FLAGS_RELEASE:STRING="${CFLAGS:--O2}" \
-DCMAKE_INSTALL_PREFIX="${SB_INSTALL_PREFIX}" \
-DCMAKE_LIBRARY_PATH="${SB_INSTALL_PREFIX_LIB}/${_gccsubdir}\
${SB_VAR_LIBZ+;${SB_VAR_LIBZ_LIB}}" \
-DCMAKE_INSTALL_RPATH="${SB_INSTALL_PREFIX_LIB}/${_gccsubdir}\
${SB_VAR_LIBZ+;${SB_VAR_LIBZ_LIB}}" \
-DCMAKE_INCLUDE_PATH="${SB_INSTALL_PREFIX}/include\
${SB_VAR_LIBZ+;${SB_VAR_LIBZ_INC}}" \
-DLUCENE_SYS_INCLUDES="${SB_INSTALL_PREFIX}/include/${_gccsubdir}"
]]>
      </configure>

      <build>
<![CDATA[
gmake -C builddir
]]>
      </build>

      <test auto-include="0">
<![CDATA[
(cd builddir
 gmake cl_test
 ./bin/cl_test)
]]>
      </test>

      <install>
<![CDATA[
(cd builddir
 # Attempting to avoid installing everything again.
 # This installs the shared libraries
 gmake clucene-shared/preinstall
 gmake clucene-core/preinstall
 cmake -D CMAKE_INSTALL_COMPONENT="runtime" -P cmake_install.cmake
 # This installs the pkgconfig file and a cmake config file.
 cmake -D CMAKE_INSTALL_COMPONENT="Unspecified" -P cmake_install.cmake
 # Install the system/compiler specific headers
 cmake -D CMAKE_INSTALL_COMPONENT="sysheaders" -P cmake_install.cmake

 # Relink libclucene-core
 case "${SB_SYSTYPE}" in #(
 hppa*-hpux*)
   ${SB_PATH_FIND} src/core -path "*/CMakeRelink.dir/*" \
     -type f -exec rm '{}' \;
   gmake clucene-core/preinstall
   cmake -D CMAKE_INSTALL_COMPONENT="runtime" -P cmake_install.cmake ;;
 esac)
]]>
      </install>

      <uninstall>
<![CDATA[
rm -rf ${SB_INSTALL_PREFIX}/include/${_gccsubdir} \
${SB_INSTALL_PREFIX_LIB}/${_gccsubdir}
]]>
      </uninstall>
    </module>

    <licenses>
      <license>
        <para>The CLucene code is split into two sections for
licensing reasons. The 'Core' is strictly dual licensed Apache 2 and
LGPL. The CLucene Contributions code could not be licensed under
Apache because of the subcomponents it uses.</para>
        <unorderedlist>
          <item><para>CLUCENE CORE</para>
          <para>The CLucene Core Library uses a dual license
strategy for the source code. These licenses are the GNU Lesser
General Public License (LGPL) and the Apache License (Version 2.0).
Users can choose the license they wish to distribute their software
under. This means that you do not need to abide by *both* licenses,
but rather than you can choose the license which most suits your
needs.</para>
          <para>For details of these licenses see APACHE.license and
LGPL.license in the root of the source distribution.</para>
          <para>Some components of CLucene Core use other licenses.
See the CLUCENE CORE SUBCOMPONENTS section for details. We understand
that these licenses are compatible with LGPL and/or Apache v2, but
please consult with a lawyer to be certain of this.</para>
          <para>To rephrase the licensing and to make it perfectly
clear: CLucene is distributed under the GNU Lesser General Public
License (LGPL) *or* the Apache License, Version 2.0</para>
          <para>However, we are an open source project, and we
encourage users to participate fully in the free software community by
contributing their code back to the project. Dual licensing of the
CLucene source code provides open and free access to the technology
both for the GPL community and for other developers or companies that
cannot use the GPL license.</para>
          <para>You can freely modify, extend, and improve the CLucene
source code. The only question is whether or not you must provide the
source code and contribute modifications to the community. The GNU and
Apache licenses allow different ranges of flexibility in this regard,
but in the end, regardless of the license used, we highly recommend
that you submit any bugs, incompatibilities or added features.</para>
          <para>Note that this same license does *not* apply to the
CLucene Contributions package. You should read the COPYING file in
that directory or package for more information.</para></item>
          <item><para>CLUCENE CORE SUBCOMPONENTS: </para>
          <para>CLucene includes a number of subcomponents with
separate copyright notices and license terms. Your use of the source
code for the these subcomponents is subject to the terms and
conditions of the following licenses.</para>
          <para>For the  src\CLucene\util\MD5Digester.cpp
component:</para>
          <screen>
/*
 * This is work is derived from material Copyright RSA Data Security, Inc.
 *
 * The RSA copyright statement and Licence for that original material is
 * included below. This is followed by the Apache copyright statement and
 * licence for the modifications made to that material.
 */
/* Copyright (C) 1991-2, RSA Data Security, Inc. Created 1991. All
   rights reserved.

   License to copy and use this software is granted provided that it
   is identified as the "RSA Data Security, Inc. MD5 Message-Digest
   Algorithm" in all material mentioning or referencing this software
   or this function.

   License is also granted to make and use derivative works provided
   that such works are identified as "derived from the RSA Data
   Security, Inc. MD5 Message-Digest Algorithm" in all material
   mentioning or referencing the derived work.

   RSA Data Security, Inc. makes no representations concerning either
   the merchantability of this software or the suitability of this
   software for any particular purpose. It is provided "as is"
   without express or implied warranty of any kind.

   These notices must be retained in any copies of any part of this
   documentation and/or software.
 */
          </screen>
          <para>the cmake/MacroCheckGccVisibility.cmake and
MacroEnsureVersion.cmake components:</para>
          <screen>
#
# Copyright (c) 2006, Alexander Neundorf &lt;neundorf@kde.org&gt;
# Copyright (c) 2006, Laurent Montel, &lt;montel@kde.org&gt;
#
# Redistribution and use is allowed according to the terms of the BSD license.
# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
          </screen>
          <para>the src/core/util/Compress.cpp component:</para>
          <screen>
/* zlib.h -- interface of the 'zlib' general purpose compression library
 version 1.2.3, July 18th, 2005

 Copyright (C) 1995-2005 Jean-loup Gailly and Mark Adler

 This software is provided 'as-is', without any express or implied
 warranty.  In no event will the authors be held liable for any damages
 arising from the use of this software.

 Permission is granted to anyone to use this software for any purpose,
 including commercial applications, and to alter it and redistribute it
 freely, subject to the following restrictions:

 1. The origin of this software must not be misrepresented; you must not
    claim that you wrote the original software. If you use this software
    in a product, an acknowledgment in the product documentation would be
    appreciated but is not required.
 2. Altered source versions must be plainly marked as such, and must not be
    misrepresented as being the original software.
 3. This notice may not be removed or altered from any source distribution.

 Jean-loup Gailly jloup@gzip.org
 Mark Adler madler@alumni.caltech.edu

*/
          </screen></item>
          <item><para>CLUCENE CONTRIBUTIONS CODE:</para>
          <para>PorterStemmer code: couldn't find license. This
component is deprecated and will be removed very soon.</para>
          <para>Snowball code: needs to be researched.</para></item>
        </unorderedlist>
      </license>

      <license path="lgpl-2.1.license"/>

      <license path="apache-2.0.license"/>
    </licenses>
  </program>
</programs>
