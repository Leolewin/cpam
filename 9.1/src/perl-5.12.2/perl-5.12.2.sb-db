<?xml version="1.0"?>
<!DOCTYPE programs SYSTEM "sb-db.dtd">
<programs>
  <program name="perl" version="5.12.2" revision="2">
    <build-name>${SB_PROG_NAME}-${SB_PROG_VER}</build-name>

    <install-name>${SB_PROG_NAME}5122</install-name>

    <sources>
      <source checksum="af2df531d46b77fdf0d97eecb03eddb2"
        checksum-type="md5" size="15143778"
        path="src/perl-5.12.2.tar.gz"/>
      <patch checksum="e27f973815a639e9025ed5b9e229e0c1"
        checksum-type="md5" size="1666"
        path="src/perl-5.12.2.CVE-2011-1487.patch"/>
      <patch checksum="bdeb4e1aeb35c23d9825cc1fa8beebc7"
        checksum-type="md5" size="26164"
        path="src/perl-5.12.2.tww.patch"/>
      <patch checksum="5ec572b30a5886fc69dbb53febd88679"
        checksum-type="md5" size="11047"
        path="src/perl-5.12.2.incpaths.patch"/>
    </sources>

    <dependencies>
      <depend var="GCC_RT" install-name="gcc44r"/>
      <depend var="PERLP" install-name="perl5122p"
        set-var-only="1"/>
      <depend program="bzip2" var="BZIP2"
        install-name="bzip210">v&gt;=1.0.6</depend>
      <depend program="gcc" install-name="gcc44"
        add-path="prepend">v&gt;=4.4.6</depend>
      <depend program="zlib" var="LIBZ"
        install-name="libz12">v&gt;=1.2.5</depend>
      <depend program="gdbm" var="LIBGDBM"
        type="build">v==1.8.2</depend>
    </dependencies>

    <validate>
      <depend program="Apache-Session"
        module="5.12.2">v==1.89</depend>
      <depend program="Algorithm-Dependency"
        module="5.12.2">v==1.110</depend>
      <depend program="Algorithm-Diff"
        module="5.12.2">v==1.1902</depend>
      <depend program="AppConfig" module="5.12.2">v==1.66</depend>
      <depend program="Archive-Tar" module="5.12.2">v==1.78</depend>
      <depend program="Archive-Zip" module="5.12.2">v==1.30</depend>
      <depend program="Array-Compare"
        module="5.12.2">v==2.01</depend>
      <depend program="Array-Unique" module="5.12.2">v==0.08</depend>
      <depend program="Authen-SASL" module="5.12.2">v==2.15</depend>
      <depend program="Bit-Vector" module="5.12.2">v==7.1</depend>
      <depend program="CGI-Session" module="5.12.2">v==4.48</depend>
      <depend program="CGI-Simple" module="5.12.2">v==1.113</depend>
      <depend program="CGI.pm" module="5.12.2">v==3.55</depend>
      <depend program="CPAN-Meta"
        module="5.12.2">v==2.112621</depend>
      <depend program="CPAN-Meta-YAML"
        module="5.12.2">v==0.004</depend>
      <depend program="CSS-Squish" module="5.12.2">v==0.10</depend>
      <depend program="CSS-Tiny" module="5.12.2">v==1.19</depend>
      <depend program="Cache-Cache" module="5.12.2">v==1.06</depend>
      <depend program="Cache-Simple-TimedExpiry"
        module="5.12.2">v==0.27</depend>
      <depend program="Calendar-Simple"
        module="5.12.2">v==1.20</depend>
      <depend program="Carp-Assert" module="5.12.2">v==0.20</depend>
      <depend program="Carp-Clan" module="5.12.2">v==6.04</depend>
      <depend program="Chart" module="5.12.2">v==2.4.1</depend>
      <depend program="Class-Accessor"
        module="5.12.2">v==0.34</depend>
      <depend program="Class-Accessor-Chained"
        module="5.12.2">v==0.01</depend>
      <depend program="Class-Container"
        module="5.12.2">v==0.12</depend>
      <depend program="Class-DBI" module="5.12.2">v==3.0.17</depend>
      <depend program="Class-Data-Inheritable"
        module="5.12.2">v==0.08</depend>
      <depend program="Class-ErrorHandler"
        module="5.12.2">v==0.01</depend>
      <depend program="Class-Fields"
        module="5.12.2">v==0.204</depend>
      <depend program="Class-ISA" module="5.12.2">v==0.36</depend>
      <depend program="Class-Inspector"
        module="5.12.2">v==1.25</depend>
      <depend program="Class-Load" module="5.12.2">v==0.17</depend>
      <depend program="Class-Loader" module="5.12.2">v==2.03</depend>
      <depend program="Class-ReturnValue"
        module="5.12.2">v==0.55</depend>
      <depend program="Class-Singleton"
        module="5.12.2">v==1.4</depend>
      <depend program="Class-Trigger"
        module="5.12.2">v==0.14</depend>
      <depend program="Class-WhiteHole"
        module="5.12.2">v==0.04</depend>
      <depend program="Clone" module="5.12.2">v==0.31</depend>
      <depend program="Config-Tiny" module="5.12.2">v==2.14</depend>
      <depend program="Convert-ASCII-Armour"
        module="5.12.2">v==1.4</depend>
      <depend program="Convert-ASN1" module="5.12.2">v==0.22</depend>
      <depend program="Convert-PEM" module="5.12.2">v==0.08</depend>
      <depend program="Crypt-Blowfish"
        module="5.12.2">v==2.12</depend>
      <depend program="Crypt-CBC" module="5.12.2">v==2.30</depend>
      <depend program="Crypt-DES" module="5.12.2">v==2.05</depend>
      <depend program="Crypt-DES_EDE3"
        module="5.12.2">v==0.01</depend>
      <depend program="Crypt-DH" module="5.12.2">v==0.06</depend>
      <depend program="Crypt-DSA" module="5.12.2">v==1.17</depend>
      <depend program="Crypt-OpenSSL-Bignum"
        module="5.12.2">v==0.04</depend>
      <depend program="Crypt-OpenSSL-RSA"
        module="5.12.2">v==0.28</depend>
      <depend program="Crypt-OpenSSL-Random"
        module="5.12.2">v==0.04</depend>
      <depend program="Crypt-Primes" module="5.12.2">v==0.50</depend>
      <depend program="Crypt-RC4" module="5.12.2">v==2.02</depend>
      <depend program="Crypt-RSA" module="5.12.2">v==1.99</depend>
      <depend program="Crypt-Random" module="5.12.2">v==1.25</depend>
      <depend program="Crypt-SSLeay" module="5.12.2">v==0.58</depend>
      <depend program="DBD-CSV" module="5.12.2">v==0.33</depend>
      <depend program="DBI" module="5.12.2">v==1.616</depend>
      <depend program="DBIx-ContextualFetch" module="5.12.2"
        systype="!*-osf*">v==1.03</depend>
      <depend program="DBIx-SearchBuilder" module="5.12.2"
        systype="!*-osf*">v==1.61</depend>
      <depend program="DIME-Tools" module="5.12.2">v==0.03</depend>
      <depend program="Data-Buffer" module="5.12.2">v==0.04</depend>
      <depend program="Data-Dumper" module="5.12.2">v==2.131</depend>
      <depend program="Data-ICal" module="5.12.2">v==0.18</depend>
      <depend program="Data-OptList"
        module="5.12.2">v==0.107</depend>
      <depend program="Data-OptList"
        module="5.12.2">v==0.107</depend>
      <depend program="Data-ShowTable"
        module="5.12.2">v==3.3</depend>
      <depend program="Data-Table" module="5.12.2">v==1.54</depend>
      <depend program="Data-UUID" module="5.12.2">v==1.217</depend>
      <depend program="Date-Calc" module="5.12.2">v==6.3</depend>
      <depend program="Date-Manip" module="5.12.2">v==6.25</depend>
      <depend program="Date-Simple" module="5.12.2">v==3.03</depend>
      <depend program="DateTime" module="5.12.2">v==0.70</depend>
      <depend program="DateTime-Format-Mail"
        module="5.12.2">v==0.3001</depend>
      <depend program="DateTime-Format-W3CDTF"
        module="5.12.2">v==0.06</depend>
      <depend program="DateTime-Locale"
        module="5.12.2">v==0.45</depend>
      <depend program="DateTime-TimeZone"
        module="5.12.2">v==1.37</depend>
      <depend program="Devel-CoreStack"
        module="5.12.2">v==1.3</depend>
      <depend program="Devel-Cover" module="5.12.2">v==0.79</depend>
      <depend program="Devel-Cycle" module="5.12.2">v==1.11</depend>
      <depend program="Devel-GlobalDestruction"
        module="5.12.2">v==0.04</depend>
      <depend program="Devel-StackTrace"
        module="5.12.2">v==1.27</depend>
      <depend program="Devel-Symdump"
        module="5.12.2">v==2.08</depend>
      <depend program="Devel-ptkdb"
        module="5.12.2">v==1.1091</depend>
      <depend program="Digest-BubbleBabble"
        module="5.12.2">v==0.02</depend>
      <depend program="Digest-HMAC" module="5.12.2">v==1.03</depend>
      <depend program="Digest-MD2" module="5.12.2">v==2.03</depend>
      <depend program="Digest-Nilsimsa"
        module="5.12.2">v==0.06</depend>
      <depend program="Digest-Perl-MD5"
        module="5.12.2">v==1.8</depend>
      <depend program="Digest-SHA" module="5.12.2">v==5.62</depend>
      <depend program="Digest-SHA" module="5.12.2">v==5.62</depend>
      <depend program="Digest-SHA-PurePerl"
        module="5.12.2">v==5.62</depend>
      <depend program="Digest-SHA1" module="5.12.2">v==2.13</depend>
      <depend program="Digest-SHA2" module="5.12.2">v==1.1.1</depend>
      <depend program="Dist-CheckConflicts"
        module="5.12.2">v==0.02</depend>
      <depend program="Email-Address"
        module="5.12.2">v==1.892</depend>
      <depend program="Email-Date-Format"
        module="5.12.2">v==1.002</depend>
      <depend program="Email-MIME" module="5.12.2">v==1.910</depend>
      <depend program="Email-MIME-ContentType"
        module="5.12.2">v==1.015</depend>
      <depend program="Email-MIME-Encodings"
        module="5.12.2">v==1.313</depend>
      <depend program="Email-MessageID"
        module="5.12.2">v==1.402</depend>
      <depend program="Email-Send" module="5.12.2">v==2.198</depend>
      <depend program="Email-Simple"
        module="5.12.2">v==2.100</depend>
      <depend program="Encode" module="5.12.2">v==2.44</depend>
      <depend program="Encode-Locale"
        module="5.12.2">v==1.02</depend>
      <depend program="Error" module="5.12.2">v==0.17016</depend>
      <depend program="Eval-Closure" module="5.12.2">v==0.06</depend>
      <depend program="Exception-Class"
        module="5.12.2">v==1.32</depend>
      <depend program="Expect" module="5.12.2"
        systype="!*-aix*">v==1.21</depend>
      <depend program="ExtUtils-CBuilder"
        module="5.12.2">v==0.280202</depend>
      <depend program="ExtUtils-Depends"
        module="5.12.2">v==0.304</depend>
      <depend program="ExtUtils-MakeMaker"
        module="5.12.2">v==6.59</depend>
      <depend program="ExtUtils-Manifest"
        module="5.12.2">v==1.60</depend>
      <depend program="ExtUtils-ParseXS"
        module="5.12.2">v==3.04</depend>
      <depend program="ExtUtils-PkgConfig"
        module="5.12.2">v==1.12</depend>
      <depend program="ExtUtils-XSpp"
        module="5.12.2">v==0.1602</depend>
      <depend program="FCGI" module="5.12.2">v==0.73</depend>
      <depend program="File-Copy-Recursive"
        module="5.12.2">v==0.38</depend>
      <depend program="File-Find-Rule"
        module="5.12.2">v==0.32</depend>
      <depend program="File-Flat" module="5.12.2">v==1.04</depend>
      <depend program="File-HomeDir" module="5.12.2">v==0.98</depend>
      <depend program="File-Listing" module="5.12.2">v==6.02</depend>
      <depend program="File-Remote" module="5.12.2">v==1.17</depend>
      <depend program="File-Remove" module="5.12.2">v==1.50</depend>
      <depend program="File-Scan" module="5.12.2">v==1.43</depend>
      <depend program="File-ShareDir"
        module="5.12.2">v==1.03</depend>
      <depend program="File-ShareDir"
        module="5.12.2">v==1.03</depend>
      <depend program="File-Slurp"
        module="5.12.2">v==9999.19</depend>
      <depend program="File-Tail" module="5.12.2">v==0.99.3</depend>
      <depend program="File-Tail-App"
        module="5.12.2">v==0.0.3</depend>
      <depend program="File-Temp" module="5.12.2">v==0.22</depend>
      <depend program="File-Tempdir" module="5.12.2">v==0.02</depend>
      <depend program="File-Which" module="5.12.2">v==1.09</depend>
      <depend program="File-chmod" module="5.12.2">v==0.32</depend>
      <depend program="Filter" module="5.12.2">v==1.37</depend>
      <depend program="Font-AFM" module="5.12.2">v==1.20</depend>
      <depend program="FreezeThaw" module="5.12.2">v==0.43</depend>
      <depend program="Geography-Countries"
        module="5.12.2">v==2009041301</depend>
      <depend program="Graph" module="5.12.2">v==0.94</depend>
      <depend program="Graph-ReadWrite"
        module="5.12.2">v==2.00</depend>
      <depend program="HTML-DynamicTemplate"
        module="5.12.2">v==0.94</depend>
      <depend program="HTML-FillInForm"
        module="5.12.2">v==2.1</depend>
      <depend program="HTML-Form" module="5.12.2">v==6.00</depend>
      <depend program="HTML-Format" module="5.12.2">v==2.04</depend>
      <depend program="HTML-FormatText-WithLinks"
        module="5.12.2">v==0.14</depend>
      <depend program="HTML-Mason" module="5.12.2">v==1.45</depend>
      <depend program="HTML-Parser" module="5.12.2">v==3.68</depend>
      <depend program="HTML-RewriteAttributes"
        module="5.12.2">v==0.04</depend>
      <depend program="HTML-RewriteAttributes"
        module="5.12.2">v==0.04</depend>
      <depend program="HTML-Scrubber"
        module="5.12.2">v==0.09</depend>
      <depend program="HTML-Table" module="5.12.2">v==2.08a</depend>
      <depend program="HTML-Tagset" module="5.12.2">v==3.20</depend>
      <depend program="HTML-Template" module="5.12.2">v==2.9</depend>
      <depend program="HTML-Tree" module="5.12.2">v==4.2</depend>
      <depend program="HTTP-Cookies" module="5.12.2">v==6.00</depend>
      <depend program="HTTP-DAV" module="5.12.2">v==0.44</depend>
      <depend program="HTTP-Daemon" module="5.12.2">v==6.00</depend>
      <depend program="HTTP-Date" module="5.12.2">v==6.00</depend>
      <depend program="HTTP-Message" module="5.12.2">v==6.02</depend>
      <depend program="HTTP-Negotiate"
        module="5.12.2">v==6.00</depend>
      <depend program="HTTP-Server-Simple"
        module="5.12.2">v==0.44</depend>
      <depend program="HTTP-Server-Simple-Mason"
        module="5.12.2">v==0.14</depend>
      <depend program="Heap" module="5.12.2">v==0.80</depend>
      <depend program="Hook-LexWrap" module="5.12.2">v==0.24</depend>
      <depend program="IO-Compress" module="5.12.2">v==2.043</depend>
      <depend program="IO-Socket-SSL"
        module="5.12.2">v==1.44</depend>
      <depend program="IO-String" module="5.12.2">v==1.08</depend>
      <depend program="IO-Tty" module="5.12.2">v==1.10</depend>
      <depend program="IO-Zlib" module="5.12.2">v==1.10</depend>
      <depend program="IO-stringy" module="5.12.2">v==2.110</depend>
      <depend program="IPC-Run" module="5.12.2">v==0.90</depend>
      <depend program="IPC-Run3" module="5.12.2">v==0.044</depend>
      <depend program="IPC-ShareLite" module="5.12.2"
        systype="*-irix*|*-linux*|*-osf*|*-solaris*">v==0.17</depend>
      <depend program="Ima-DBI" module="5.12.2">v==0.35</depend>
      <depend program="Image-ExifTool"
        module="5.12.2">v==8.60</depend>
      <depend program="Image-Size" module="5.12.2">v==3.230</depend>
      <depend program="JSON-PP" module="5.12.2">v==2.27200</depend>
      <depend program="JSON-PP-Compat5006"
        module="5.12.2">v==1.09</depend>
      <depend program="Jcode" module="5.12.2">v==2.07</depend>
      <depend program="LWP-MediaTypes"
        module="5.12.2">v==6.01</depend>
      <depend program="List-Compare" module="5.12.2">v==0.37</depend>
      <depend program="List-MoreUtils"
        module="5.12.2">v==0.33</depend>
      <depend program="Locale-Maketext"
        module="5.12.2">v==1.19</depend>
      <depend program="Locale-Maketext-Fuzzy"
        module="5.12.2">v==0.11</depend>
      <depend program="Locale-Maketext-Lexicon"
        module="5.12.2">v==0.91</depend>
      <depend program="Log-Any" module="5.12.2">v==0.14</depend>
      <depend program="Log-Dispatch" module="5.12.2">v==2.29</depend>
      <depend program="MIME-Base64" module="5.12.2">v==3.13</depend>
      <depend program="MIME-Lite" module="5.12.2">v==3.027</depend>
      <depend program="MIME-Lite-TT-HTML"
        module="5.12.2">v==0.04</depend>
      <depend program="MIME-Types" module="5.12.2">v==1.32</depend>
      <depend program="MIME-tools" module="5.12.2">v==5.502</depend>
      <depend program="MLDBM" module="5.12.2">v==2.04</depend>
      <depend program="MRO-Compat" module="5.12.2">v==0.11</depend>
      <depend program="Mail-Audit" module="5.12.2">v==2.225</depend>
      <depend program="Mail-Box" module="5.12.2">v==2.101</depend>
      <depend program="Mail-Box-Parser-C"
        module="5.12.2">v==3.006</depend>
      <depend program="Mail-IMAPClient"
        module="5.12.2">v==3.29</depend>
      <depend program="Mail-Transport-Dbx"
        module="5.12.2">v==0.07</depend>
      <depend program="MailTools" module="5.12.2">v==2.08</depend>
      <depend program="Math-Bezier" module="5.12.2">v==0.01</depend>
      <depend program="Math-BigInt" module="5.12.2">v==1.997</depend>
      <depend program="Math-BigRat"
        module="5.12.2">v==0.2602</depend>
      <depend program="Math-Calc-Units"
        module="5.12.2">v==1.07</depend>
      <depend program="Math-FixedPrecision"
        module="5.12.2">v==0.21</depend>
      <depend program="Math-Round" module="5.12.2">v==0.06</depend>
      <depend program="Module-Build"
        module="5.12.2">v==0.3800</depend>
      <depend program="Module-Implementation"
        module="5.12.2">v==0.06</depend>
      <depend program="Module-Metadata"
        module="5.12.2">v==1.000007</depend>
      <depend program="Module-Pluggable"
        module="5.12.2">v==3.9</depend>
      <depend program="Module-Runtime"
        module="5.12.2">v==0.013</depend>
      <depend program="Module-Signature"
        module="5.12.2">v==0.68</depend>
      <depend program="Module-Versions-Report"
        module="5.12.2">v==1.06</depend>
      <depend program="Moose" module="5.12.2">v==2.0205</depend>
      <depend program="Net-DNS" module="5.12.2">v==0.66</depend>
      <depend program="Net-DNS-Resolver-Programmable"
        module="5.12.2">v==0.003</depend>
      <depend program="Net-Daemon" module="5.12.2">v==0.48</depend>
      <depend program="Net-Daemon-SSL"
        module="5.12.2">v==1.0</depend>
      <depend program="Net-HTTP" module="5.12.2">v==6.01</depend>
      <depend program="Net-IP" module="5.12.2">v==1.25</depend>
      <depend program="Net-Ident" module="5.12.2">v==1.23</depend>
      <depend program="Net-Jabber" module="5.12.2">v==2.0</depend>
      <depend program="Net-SFTP" module="5.12.2"
        systype="*-aix*|*-hpux*|*-linux*|*-solaris*">v==0.10</depend>
      <depend program="Net-SFTP-Foreign"
        module="5.12.2">v==1.67</depend>
      <depend program="Net-SSH-Perl" module="5.12.2"
        systype="*-aix*|*-hpux*|*-linux*|*-solaris*">v==1.34</depend>
      <depend program="Net-SSLeay" module="5.12.2">v==1.36</depend>
      <depend program="Net-Server" module="5.12.2">v==0.99</depend>
      <depend program="Net-Telnet" module="5.12.2">v==3.03</depend>
      <depend program="Net-XMPP" module="5.12.2">v==1.02</depend>
      <depend program="NetAddr-IP" module="5.12.2">v==4.044</depend>
      <depend program="Number-Compare"
        module="5.12.2">v==0.02</depend>
      <depend program="OLE-Storage_Lite"
        module="5.12.2">v==0.19</depend>
      <depend program="Object-Realize-Later"
        module="5.12.2">v==0.18</depend>
      <depend program="PAR-Dist" module="5.12.2">v==0.47</depend>
      <depend program="PPI" module="5.12.2">v==1.215</depend>
      <depend program="PPI-HTML" module="5.12.2">v==1.08</depend>
      <depend program="Package-Constants"
        module="5.12.2">v==0.02</depend>
      <depend program="Package-DeprecationManager"
        module="5.12.2">v==0.11</depend>
      <depend program="Package-Stash"
        module="5.12.2">v==0.32</depend>
      <depend program="Package-Stash-XS"
        module="5.12.2">v==0.25</depend>
      <depend program="PadWalker" module="5.12.2">v==1.92</depend>
      <depend program="Params-Util" module="5.12.2">v==1.04</depend>
      <depend program="Params-Validate"
        module="5.12.2">v==1.00</depend>
      <depend program="Parse-CPAN-Meta"
        module="5.12.2">v==1.4401</depend>
      <depend program="Parse-RecDescent"
        module="5.12.2">v==1.965001</depend>
      <depend program="PatchReader" module="5.12.2">v==0.9.6</depend>
      <depend program="PathTools" module="5.12.2">v==3.33</depend>
      <depend program="Perl-OSType" module="5.12.2">v==1.002</depend>
      <depend program="Perl-Tidy"
        module="5.12.2">v==20101217</depend>
      <depend program="PlRPC" module="5.12.2">v==0.2020</depend>
      <depend program="Pod-Coverage" module="5.12.2">v==0.20</depend>
      <depend program="Pod-POM" module="5.12.2">v==0.27</depend>
      <depend program="Pod-Readme" module="5.12.2">v==0.11</depend>
      <depend program="Pod-Simple" module="5.12.2">v==3.19</depend>
      <depend program="Pod-Tests" module="5.12.2">v==1.19</depend>
      <depend program="Probe-Perl" module="5.12.2">v==0.01</depend>
      <depend program="Proc-Background"
        module="5.12.2">v==1.10</depend>
      <depend program="Proc-Daemon" module="5.12.2">v==0.02</depend>
      <depend program="Proc-ProcessTable" module="5.12.2"
        systype="*-hpux*|*-irix*|*-linux*|*-solaris*">v==0.45</depend>
      <depend program="Quota" module="5.12.2"
        systype="!hppa*-hpux11.31">v==1.6.6</depend>
      <depend program="RPC-XML" module="5.12.2">v==0.76</depend>
      <depend program="Regexp-Common"
        module="5.12.2">v==2011041701</depend>
      <depend program="Return-Value"
        module="5.12.2">v==1.666001</depend>
      <depend program="SNMP_Session" module="5.12.2">v==0.93</depend>
      <depend program="SOAP-Lite" module="5.12.2">v==0.714</depend>
      <depend program="SQL-Statement"
        module="5.12.2">v==1.33</depend>
      <depend program="Scalar-List-Utils"
        module="5.12.2">v==1.23</depend>
      <depend program="Schedule-Cron"
        module="5.12.2">v==0.98</depend>
      <depend program="Shell-Source" module="5.12.2">v==0.01</depend>
      <depend program="Sort-Naturally"
        module="5.12.2">v==1.02</depend>
      <depend program="Sort-Versions" module="5.12.2">v==1.5</depend>
      <depend program="Spiffy" module="5.12.2">v==0.30</depend>
      <depend program="Spreadsheet-ParseExcel"
        module="5.12.2">v==0.59</depend>
      <depend program="Spreadsheet-WriteExcel"
        module="5.12.2">v==2.37</depend>
      <depend program="Storable" module="5.12.2">v==2.30</depend>
      <depend program="String-CRC32" module="5.12.2">v==1.4</depend>
      <depend program="String-Ediff" module="5.12.2">v==0.09</depend>
      <depend program="Sub-Exporter"
        module="5.12.2">v==0.982</depend>
      <depend program="Sub-Install" module="5.12.2">v==0.925</depend>
      <depend program="Sub-Name" module="5.12.2">v==0.05</depend>
      <depend program="Sub-Uplevel" module="5.12.2">v==0.22</depend>
      <depend program="Sys-Syslog" module="5.12.2">v==0.29</depend>
      <depend program="Syslog" module="5.12.2">v==0.97</depend>
      <depend program="Task-Weaken" module="5.12.2">v==1.04</depend>
      <depend program="Template-Toolkit"
        module="5.12.2">v==2.22</depend>
      <depend program="TermReadKey" module="5.12.2">v==2.30</depend>
      <depend program="Test-Base" module="5.12.2">v==0.60</depend>
      <depend program="Test-Class" module="5.12.2">v==0.24</depend>
      <depend program="Test-ClassAPI"
        module="5.12.2">v==1.06</depend>
      <depend program="Test-Deep" module="5.12.2">v==0.108</depend>
      <depend program="Test-Differences"
        module="5.12.2">v==0.61</depend>
      <depend program="Test-Exception"
        module="5.12.2">v==0.31</depend>
      <depend program="Test-Fatal" module="5.12.2">v==0.006</depend>
      <depend program="Test-Harness" module="5.12.2">v==3.23</depend>
      <depend program="Test-Inline" module="5.12.2">v==2.212</depend>
      <depend program="Test-Inter" module="5.12.2">v==1.03</depend>
      <depend program="Test-LongString"
        module="5.12.2">v==0.15</depend>
      <depend program="Test-Manifest"
        module="5.12.2">v==1.23</depend>
      <depend program="Test-Memory-Cycle"
        module="5.12.2">v==1.04</depend>
      <depend program="Test-MockModule"
        module="5.12.2">v==0.05</depend>
      <depend program="Test-MockObject"
        module="5.12.2">v==1.20110612</depend>
      <depend program="Test-NoWarnings"
        module="5.12.2">v==1.03</depend>
      <depend program="Test-Number-Delta"
        module="5.12.2">v==1.03</depend>
      <depend program="Test-Object" module="5.12.2">v==0.07</depend>
      <depend program="Test-Output" module="5.12.2">v==1.01</depend>
      <depend program="Test-Pod" module="5.12.2">v==1.45</depend>
      <depend program="Test-Pod-Coverage"
        module="5.12.2">v==1.08</depend>
      <depend program="Test-Requires"
        module="5.12.2">v==0.06</depend>
      <depend program="Test-Script" module="5.12.2">v==1.07</depend>
      <depend program="Test-Simple" module="5.12.2">v==0.98</depend>
      <depend program="Test-SubCalls"
        module="5.12.2">v==1.09</depend>
      <depend program="Test-Tester" module="5.12.2">v==0.107</depend>
      <depend program="Test-Warn" module="5.12.2">v==0.23</depend>
      <depend program="Text-Autoformat"
        module="5.12.2">v==1.669002</depend>
      <depend program="Text-CSV_XS" module="5.12.2">v==0.85</depend>
      <depend program="Text-Diff" module="5.12.2">v==1.41</depend>
      <depend program="Text-Glob" module="5.12.2">v==0.09</depend>
      <depend program="Text-Quoted" module="5.12.2">v==2.06</depend>
      <depend program="Text-Reform" module="5.12.2">v==1.20</depend>
      <depend program="Text-Template"
        module="5.12.2">v==1.45</depend>
      <depend program="Text-WikiFormat"
        module="5.12.2">v==0.79</depend>
      <depend program="Text-Wrapper" module="5.12.2">v==1.02</depend>
      <depend program="Text-vFile-asData"
        module="5.12.2">v==0.07</depend>
      <depend program="Tie-EncryptedHash"
        module="5.12.2">v==1.24</depend>
      <depend program="Tie-IxHash" module="5.12.2">v==1.22</depend>
      <depend program="Time-modules"
        module="5.12.2">v==2011.0517</depend>
      <depend program="TimeDate" module="5.12.2">v==1.20</depend>
      <depend program="Tk" module="5.12.2">v==804.029</depend>
      <depend program="Tk-FileDialog" module="5.12.2">v==1.3</depend>
      <depend program="Tree-DAG_Node"
        module="5.12.2">v==1.06</depend>
      <depend program="Tree-Simple" module="5.12.2">v==1.18</depend>
      <depend program="Try-Tiny" module="5.12.2">v==0.11</depend>
      <depend program="UNIVERSAL-can"
        module="5.12.2">v==1.20110617</depend>
      <depend program="UNIVERSAL-isa"
        module="5.12.2">v==1.20110614</depend>
      <depend program="UNIVERSAL-moniker"
        module="5.12.2">v==0.08</depend>
      <depend program="UNIVERSAL-require"
        module="5.12.2">v==0.13</depend>
      <depend program="URI" module="5.12.2">v==1.59</depend>
      <depend program="Unicode-Map8" module="5.12.2">v==0.13</depend>
      <depend program="Unicode-String"
        module="5.12.2">v==2.09</depend>
      <depend program="Unix-Syslog" module="5.12.2">v==1.1</depend>
      <depend program="User-Identity"
        module="5.12.2">v==0.93</depend>
      <depend program="Version-Requirements"
        module="5.12.2">v==0.101020</depend>
      <depend program="WWW-Mechanize"
        module="5.12.2">v==1.70</depend>
      <depend program="WWW-RobotRules"
        module="5.12.2">v==6.01</depend>
      <depend program="Want" module="5.12.2">v==0.18</depend>
      <depend program="X11-GUITest" module="5.12.2">v==0.25</depend>
      <depend program="X11-Protocol" module="5.12.2">v==0.56</depend>
      <depend program="XML-Checker" module="5.12.2">v==0.13</depend>
      <depend program="XML-DOM" module="5.12.2">v==1.44</depend>
      <depend program="XML-Filter-BufferText"
        module="5.12.2">v==1.01</depend>
      <depend program="XML-NamespaceSupport"
        module="5.12.2">v==1.11</depend>
      <depend program="XML-Parser" module="5.12.2">v==2.41</depend>
      <depend program="XML-RSS" module="5.12.2">v==1.49</depend>
      <depend program="XML-RegExp" module="5.12.2">v==0.03</depend>
      <depend program="XML-SAX" module="5.12.2">v==0.99</depend>
      <depend program="XML-SAX-Base" module="5.12.2">v==1.08</depend>
      <depend program="XML-SAX-Writer"
        module="5.12.2">v==0.53</depend>
      <depend program="XML-Simple" module="5.12.2">v==2.18</depend>
      <depend program="XML-SimpleObject"
        module="5.12.2">v==0.53</depend>
      <depend program="XML-Stream" module="5.12.2">v==1.23</depend>
      <depend program="XML-TreeBuilder"
        module="5.12.2">v==4.1</depend>
      <depend program="XML-Twig" module="5.12.2">v==3.38</depend>
      <depend program="XML-Validator-Schema"
        module="5.12.2">v==1.10</depend>
      <depend program="XML-Writer" module="5.12.2">v==0.612</depend>
      <depend program="XML-XPath" module="5.12.2">v==1.13</depend>
      <depend program="YAML" module="5.12.2">v==0.73</depend>
      <depend program="YAML-Syck" module="5.12.2">v==1.17</depend>
      <depend program="bignum" module="5.12.2">v==0.29</depend>
      <depend program="interface" module="5.12.2">v==0.03</depend>
      <depend program="libnet" module="5.12.2">v==1.22</depend>
      <depend program="libwww-perl" module="5.12.2">v==6.02</depend>
      <depend program="libxml-perl" module="5.12.2">v==0.08</depend>
      <depend program="perl-ldap" module="5.12.2">v==0.43</depend>
      <depend program="podlators" module="5.12.2">v==2.2.2</depend>
      <depend program="prefork" module="5.12.2">v==1.04</depend>
      <depend program="version" module="5.12.2">v==0.94</depend>
    </validate>

    <script-header>
<![CDATA[
_sysconfdir="${SB_INSTALL_PREFIX}/etc"

case "${SB_SYSTYPE}" in
*-aix*)
  _arch=aix-thread-multi ;;
*-osf*)
  _arch=alpha-dec_osf-thread-multi ;;
ia64*-hpux*)
  _arch=IA64-hpux-thread-multi ;;
*-hpux11.[01]*)
  _arch=PA-RISC1.1-thread-multi ;;
*-hpux*)
  _arch=PA-RISC2.0-thread-multi ;;
*-irix*)
  _arch=IP30-irix-thread-multi ;;
i386*-solaris*)
  _arch=i86pc-solaris-thread-multi ;;
*-solaris*)
  _arch=sun4-solaris-thread-multi ;;
x86_64*-linux*)
  _arch=x86_64-linux-thread-multi ;;
*-linux*)
  _arch=i686-linux-thread-multi ;;
esac

export BUILD_BZIP2=0
export BZIP2_INCLUDE=${SB_VAR_BZIP2_INC}
export BZIP2_LIB=${SB_VAR_BZIP2_LIB}
]]>
    </script-header>

    <configure>
<![CDATA[
# Remove old configuration
rm -f config.sh Policy.sh
rm -f cpan/Compress-Raw-Zlib/config.in
cat > cpan/Compress-Raw-Zlib/config.in <<_EOT_
BUILD_ZLIB   = False
INCLUDE      = ${SB_VAR_LIBZ_INC}
LIB          = ${SB_VAR_LIBZ_LIB}
OLD_ZLIB     = True 
GZIP_OS_CODE = AUTO_DETECT
_EOT_

case "${SB_SYSTYPE}" in
*-aix*)
  ./Configure -Dcc=gcc -Dprefix=${SB_INSTALL_PREFIX} \
  -Dgccruntimelib="${SB_VAR_GCC_RT_LIB}" \
  -Dlocincpth=" " \
  -Dloclibpth=" " \
  -Dsiteetc="${_sysconfdir}" \
  -Dsitearch="${SB_VAR_PERLP}/lib/5.12.2/${_arch}" \
  -Dsitebin="${SB_VAR_PERLP}/bin" \
  -Dsitelib="${SB_VAR_PERLP}/lib/5.12.2" \
  -Dsiteprefix="${SB_VAR_PERLP}" \
  -Dvendorarch="${SB_VAR_PERLP}/vendor/lib/5.12.2/${_arch}" \
  -Dvendorbin="${SB_VAR_PERLP}/vendor/bin" \
  -Dvendorlib="${SB_VAR_PERLP}/vendor/lib/5.12.2" \
  -Dvendorprefix="${SB_VAR_PERLP}/vendor" \
  -Dccflags="-DDEBUGGING" \
  -Doptimize="-O2" \
  -Dldflags="-L${SB_VAR_GCC_RT}/lib \
-Wl,-blibpath:${SB_VAR_GCC_RT}/lib:/usr/lib" \
  -Di_db="undef" \
  -Dcf_email="support@thewrittenword.com" \
  -Dcf_by='The Written Word, Inc.' \
  -Dpager="/usr/bin/more" \
  -Dinstallusrbinperl="undef" \
  -Duseshrplib="true" \
  -Duseithreads="define" \
  -Dthreads="define" \
  -Di_gdbm="define" \
  -Ddlsrc="dl_dlopen.xs" \
  -Dmake="gmake" \
  -des
  ;;
x86_64*-linux*)
  ./Configure -Dcc=gcc -Dprefix=${SB_INSTALL_PREFIX} \
  -Dgccruntimelib="${SB_VAR_GCC_RT_LIB}" \
  -Dlibpth="/lib64 /usr/lib64" \
  -Ulocincpth= \
  -Uloclibpth= \
  -Dsitearch="${SB_VAR_PERLP}/lib/5.12.2/${_arch}" \
  -Dsitebin="${SB_VAR_PERLP}/bin" \
  -Dsiteetc="${_sysconfdir}" \
  -Dsitelib="${SB_VAR_PERLP}/lib/5.12.2" \
  -Dsiteprefix="${SB_VAR_PERLP}" \
  -Dvendorarch="${SB_VAR_PERLP}/vendor/lib/5.12.2/${_arch}" \
  -Dvendorbin="${SB_VAR_PERLP}/vendor/bin" \
  -Dvendorlib="${SB_VAR_PERLP}/vendor/lib/5.12.2" \
  -Dvendorprefix="${SB_VAR_PERLP}/vendor" \
  -Dcpprun="gcc -E" \
  -Dcppstdin="gcc -E" \
  -Dccflags="-fno-strict-aliasing -DDEBUGGING" \
  -Doptimize="-O2" \
  -Dldflags="-L${SB_VAR_GCC_RT}/lib \
-Wl,-rpath,${SB_VAR_GCC_RT}/lib" \
  -Dlibs="-lnsl -ldl -lm -lcrypt -lutil -lpthread -lc" \
  -Di_db="undef" \
  -Dcf_email='support@thewrittenword.com' \
  -Dcf_by='The Written Word, Inc.' \
  -Dpager="/bin/more" \
  -Dinstallusrbinperl="undef" \
  -Duseshrplib="true" \
  -Duseithreads="define" \
  -Dthreads="define" \
  -Di_gdbm="define" \
  -Dmake="gmake" \
  -des
  ;;
i?86*-linuxe4)
  ./Configure -Dcc=gcc -Dprefix=${SB_INSTALL_PREFIX} \
  -Dgccruntimelib="${SB_VAR_GCC_RT_LIB}" \
  -Dlibpth="/lib /usr/lib" \
  -Ulocincpth= \
  -Uloclibpth= \
  -Dsitearch="${SB_VAR_PERLP}/lib/5.12.2/${_arch}" \
  -Dsitebin="${SB_VAR_PERLP}/bin" \
  -Dsiteetc="${_sysconfdir}" \
  -Dsitelib="${SB_VAR_PERLP}/lib/5.12.2" \
  -Dsiteprefix="${SB_VAR_PERLP}" \
  -Dvendorarch="${SB_VAR_PERLP}/vendor/lib/5.12.2/${_arch}" \
  -Dvendorbin="${SB_VAR_PERLP}/vendor/bin" \
  -Dvendorlib="${SB_VAR_PERLP}/vendor/lib/5.12.2" \
  -Dvendorprefix="${SB_VAR_PERLP}/vendor" \
  -Dcpprun="gcc -E" \
  -Dcppstdin="gcc -E" \
  -Dccflags="-fno-strict-aliasing -DDEBUGGING" \
  -Doptimize="-O2 -mtune=pentiumpro -march=pentiumpro" \
  -Dldflags="-L${SB_VAR_GCC_RT}/lib \
-Wl,-rpath,${SB_VAR_GCC_RT}/lib" \
  -Dlibs="-lnsl -ldl -lm -lcrypt -lutil -lpthread -lc" \
  -Di_db="undef" \
  -Dcf_email='support@thewrittenword.com' \
  -Dcf_by='The Written Word, Inc.' \
  -Dpager="/bin/more" \
  -Dinstallusrbinperl="undef" \
  -Duseshrplib="true" \
  -Duseithreads="define" \
  -Dthreads="define" \
  -Di_gdbm="define" \
  -Dmake="gmake" \
  -des
  ;;
*-linux*)
  case "${SB_SYSTYPE}" in
  *-linuxe[56])
    _optimize="-O2 -mtune=pentiumpro -march=pentiumpro" ;;
  *)
    _optimize="-O2" ;;
  esac

  ./Configure -Dcc=gcc -Dprefix=${SB_INSTALL_PREFIX} \
  -Dgccruntimelib="${SB_VAR_GCC_RT_LIB}" \
  -Dlibpth="/lib /usr/lib" \
  -Ulocincpth= \
  -Uloclibpth= \
  -Dsitearch="${SB_VAR_PERLP}/lib/5.12.2/${_arch}" \
  -Dsitebin="${SB_VAR_PERLP}/bin" \
  -Dsiteetc="${_sysconfdir}" \
  -Dsitelib="${SB_VAR_PERLP}/lib/5.12.2" \
  -Dsiteprefix="${SB_VAR_PERLP}" \
  -Dvendorarch="${SB_VAR_PERLP}/vendor/lib/5.12.2/${_arch}" \
  -Dvendorbin="${SB_VAR_PERLP}/vendor/bin" \
  -Dvendorlib="${SB_VAR_PERLP}/vendor/lib/5.12.2" \
  -Dvendorprefix="${SB_VAR_PERLP}/vendor" \
  -Dcpprun="gcc -E" \
  -Dcppstdin="gcc -E" \
  -Dccflags="-fno-strict-aliasing -DDEBUGGING" \
  -Doptimize="${_optimize}" \
  -Dldflags="-L${SB_VAR_GCC_RT}/lib \
-Wl,-rpath,${SB_VAR_GCC_RT}/lib" \
  -Dlibs="-lnsl -ldl -lm -lcrypt -lutil -lpthread -lc" \
  -Di_db="undef" \
  -Dcf_email='support@thewrittenword.com' \
  -Dcf_by='The Written Word, Inc.' \
  -Dpager="/bin/more" \
  -Dinstallusrbinperl="undef" \
  -Duseshrplib="true" \
  -Duseithreads="define" \
  -Dthreads="define" \
  -Di_gdbm="define" \
  -Dmake="gmake" \
  -des
  ;;
*-osf*)
  # /usr/shlib/libdb.so contains Berkeley DB 1.85 so make sure we
  # do not link in by hard-coding libs and i_db
  ./Configure -Dcc=gcc -Dprefix=${SB_INSTALL_PREFIX} \
  -Dgccruntimelib="${SB_VAR_GCC_RT_LIB}" \
  -Dlocincpth=" " \
  -Dloclibpth=" " \
  -Dsitearch="${SB_VAR_PERLP}/lib/5.12.2/${_arch}" \
  -Dsitebin="${SB_VAR_PERLP}/bin" \
  -Dsiteetc="${_sysconfdir}" \
  -Dsitelib="${SB_VAR_PERLP}/lib/5.12.2" \
  -Dsiteprefix="${SB_VAR_PERLP}" \
  -Dvendorarch="${SB_VAR_PERLP}/vendor/lib/5.12.2/${_arch}" \
  -Dvendorbin="${SB_VAR_PERLP}/vendor/bin" \
  -Dvendorlib="${SB_VAR_PERLP}/vendor/lib/5.12.2" \
  -Dvendorprefix="${SB_VAR_PERLP}/vendor" \
  -Dccflags="-DDEBUGGING" \
  -Doptimize='-O2' \
  -Dldflags="-L${SB_VAR_GCC_RT_LIB} \
-Wl,-rpath,${SB_VAR_GCC_RT_LIB}" \
  -Dlibs="-ldbm -lm -liconv -lpthread" \
  -Di_db="undef" \
  -Dcf_email='support@thewrittenword.com' \
  -Dcf_by='The Written Word, Inc.' \
  -Dpager="/usr/bin/more" \
  -Dinstallusrbinperl="undef" \
  -Duseshrplib="true" \
  -Duseithreads="define" \
  -Dthreads="define" \
  -Di_gdbm="define" \
  -Dmake="gmake" \
  -des
  ;;
ia64*-hpux*)
  ./Configure -Dcc=gcc -Dprefix=${SB_INSTALL_PREFIX} \
  -Dgccruntimelib="${SB_VAR_GCC_RT_LIB}" \
  -Dlocincpth=" " \
  -Dloclibpth=" " \
  -Dsitearch="${SB_VAR_PERLP}/lib/5.12.2/${_arch}" \
  -Dsitebin="${SB_VAR_PERLP}/bin" \
  -Dsiteetc="${_sysconfdir}" \
  -Dsitelib="${SB_VAR_PERLP}/lib/5.12.2" \
  -Dsiteprefix="${SB_VAR_PERLP}" \
  -Dvendorarch="${SB_VAR_PERLP}/vendor/lib/5.12.2/${_arch}" \
  -Dvendorbin="${SB_VAR_PERLP}/vendor/bin" \
  -Dvendorlib="${SB_VAR_PERLP}/vendor/lib/5.12.2" \
  -Dvendorprefix="${SB_VAR_PERLP}/vendor" \
  -Dcf_email='support@thewrittenword.com' \
  -Dcf_by='The Written Word, Inc.' \
  -Dccflags="-DDEBUGGING" \
  -Doptimize='-O2' \
  -Dldflags="-Wl,+nodefaultrpath -L${SB_VAR_GCC_RT_LIB} \
-Wl,+b,${SB_VAR_GCC_RT_LIB}" \
  -Aprepend:libswanted='cl $empty' \
  -Dpager="/usr/bin/more" \
  -Dinstallusrbinperl="undef" \
  -Duseshrplib="true" \
  -Duseithreads="define" \
  -Dthreads="define" \
  -Di_gdbm="define" \
  -Ddlsrc="dl_dlopen.xs" \
  -Dmake="gmake" \
  -des

  ${SB_PATH_SED} -i -e "\
/^shrpenv/ {
s!\(\+b[^\"][^\"]*\)!\1:${SB_VAR_GCC_RT_LIB}!
}" config.sh
  ;;
*-hpux11.[01]*)
  ./Configure -Dcc=gcc -Dprefix=${SB_INSTALL_PREFIX} \
  -Dgccruntimelib="${SB_VAR_GCC_RT_LIB}" \
  -Dlocincpth=" " \
  -Dloclibpth=" " \
  -Dsitearch="${SB_VAR_PERLP}/lib/5.12.2/${_arch}" \
  -Dsitebin="${SB_VAR_PERLP}/bin" \
  -Dsiteetc="${_sysconfdir}" \
  -Dsitelib="${SB_VAR_PERLP}/lib/5.12.2" \
  -Dsiteprefix="${SB_VAR_PERLP}" \
  -Dvendorarch="${SB_VAR_PERLP}/vendor/lib/5.12.2/${_arch}" \
  -Dvendorbin="${SB_VAR_PERLP}/vendor/bin" \
  -Dvendorlib="${SB_VAR_PERLP}/vendor/lib/5.12.2" \
  -Dvendorprefix="${SB_VAR_PERLP}/vendor" \
  -Dcf_email='support@thewrittenword.com' \
  -Dcf_by='The Written Word, Inc.' \
  -Dccflags="-march=1.1 -DDEBUGGING -fPIC" \
  -Doptimize='-O2' \
  -Dldflags="-L${SB_VAR_GCC_RT_LIB} \
-Wl,+s,+b,${SB_VAR_GCC_RT_LIB}" \
  -Aprepend:libswanted='cl $empty' \
  -Dpager="/usr/bin/more" \
  -Dinstallusrbinperl="undef" \
  -Duseshrplib="true" \
  -Duseithreads="define" \
  -Dthreads="define" \
  -Di_gdbm="define" \
  -Ddlsrc="dl_dlopen.xs" \
  -Dmake="gmake" \
  -des

  ${SB_PATH_SED} -i -e "\
s!PA-RISC2.0!PA-RISC1.1!g" config.sh
  ;;
*-hpux11*)
  ./Configure -Dcc=gcc -Dprefix=${SB_INSTALL_PREFIX} \
  -Dgccruntimelib="${SB_VAR_GCC_RT_LIB}" \
  -Dlocincpth=" " \
  -Dloclibpth=" " \
  -Dsitearch="${SB_VAR_PERLP}/lib/5.12.2/${_arch}" \
  -Dsitebin="${SB_VAR_PERLP}/bin" \
  -Dsiteetc="${_sysconfdir}" \
  -Dsitelib="${SB_VAR_PERLP}/lib/5.12.2" \
  -Dsiteprefix="${SB_VAR_PERLP}" \
  -Dvendorarch="${SB_VAR_PERLP}/vendor/lib/5.12.2/${_arch}" \
  -Dvendorbin="${SB_VAR_PERLP}/vendor/bin" \
  -Dvendorlib="${SB_VAR_PERLP}/vendor/lib/5.12.2" \
  -Dvendorprefix="${SB_VAR_PERLP}/vendor" \
  -Dcf_email='support@thewrittenword.com' \
  -Dcf_by='The Written Word, Inc.' \
  -Dccflags="-DDEBUGGING -fPIC" \
  -Doptimize='-O2' \
  -Dldflags="-L${SB_VAR_GCC_RT_LIB} \
-Wl,+s,+b,${SB_VAR_GCC_RT_LIB}" \
  -Aprepend:libswanted='cl $empty' \
  -Dpager="/usr/bin/more" \
  -Dinstallusrbinperl="undef" \
  -Duseshrplib="true" \
  -Duseithreads="define" \
  -Dthreads="define" \
  -Di_gdbm="define" \
  -Ddlsrc="dl_dlopen.xs" \
  -Dmake="gmake" \
  -des
  ;;
*-irix*)
  # /usr/lib32/libdb.so contains Berkeley DB 1.85 on 6.5 so
  # make sure we do not link in by hard-coding libs and i_db
  ./Configure -Dcc=gcc -Dprefix=${SB_INSTALL_PREFIX} \
  -Dgccruntimelib="${SB_VAR_GCC_RT_LIB}" \
  -Dlibpth="/usr/lib32 /lib32 /lib /usr/lib" \
  -Dlocincpth=" " \
  -Dloclibpth=" " \
  -Dsitearch="${SB_VAR_PERLP}/lib/5.12.2/${_arch}" \
  -Dsitebin="${SB_VAR_PERLP}/bin" \
  -Dsiteetc="${_sysconfdir}" \
  -Dsitelib="${SB_VAR_PERLP}/lib/5.12.2" \
  -Dsiteprefix="${SB_VAR_PERLP}" \
  -Dvendorarch="${SB_VAR_PERLP}/vendor/lib/5.12.2/${_arch}" \
  -Dvendorbin="${SB_VAR_PERLP}/vendor/bin" \
  -Dvendorlib="${SB_VAR_PERLP}/vendor/lib/5.12.2" \
  -Dvendorprefix="${SB_VAR_PERLP}/vendor" \
  -Dman1dir="${SB_INSTALL_PREFIX}/man/man1" \
  -Dman3dir="${SB_INSTALL_PREFIX}/man/man3" \
  -Dccflags="-DDEBUGGING" \
  -Doptimize="-O2" \
  -Dldflags="-L${SB_VAR_GCC_RT_LIB} \
-Wl,-rpath,${SB_VAR_GCC_RT_LIB}" \
  -Dlibs="-lm -lc -lpthread" \
  -Di_db="undef" \
  -Dcf_email='support@thewrittenword.com' \
  -Dcf_by='The Written Word, Inc.' \
  -Dpager="/usr/bin/more" \
  -Dinstallusrbinperl="undef" \
  -Duseshrplib="true" \
  -Duseithreads="define" \
  -Dthreads="define" \
  -Dpager="/usr/bin/more" \
  -Di_gdbm="define" \
  -Dmake="gmake" \
  -des

  ${SB_PATH_SED} -i -e "\
s!^installusrbinperl='define'!installusrbinperl='undef'!" config.sh
  ;;
i386*-solaris*)
  ./Configure -Dcc=gcc -Dprefix=${SB_INSTALL_PREFIX} \
  -Dgccruntimelib="${SB_VAR_GCC_RT_LIB}" \
  -Dlibpth="/lib /usr/lib /usr/ccs/lib" \
  -Dlocincpth=" " \
  -Dloclibpth=" " \
  -Dsitearch="${SB_VAR_PERLP}/lib/5.12.2/${_arch}" \
  -Dsitebin="${SB_VAR_PERLP}/bin" \
  -Dsiteetc="${_sysconfdir}" \
  -Dsitelib="${SB_VAR_PERLP}/lib/5.12.2" \
  -Dsiteprefix="${SB_VAR_PERLP}" \
  -Dvendorarch="${SB_VAR_PERLP}/vendor/lib/5.12.2/${_arch}" \
  -Dvendorbin="${SB_VAR_PERLP}/vendor/bin" \
  -Dvendorlib="${SB_VAR_PERLP}/vendor/lib/5.12.2" \
  -Dvendorprefix="${SB_VAR_PERLP}/vendor" \
  -Dcf_email="support@thewrittenword.com" \
  -Dcf_by='The Written Word, Inc.' \
  -Dccflags="-DDEBUGGING" \
  -Doptimize="-O2 -mtune=pentium4 -march=pentium4" \
  -Dldflags="-L${SB_VAR_GCC_RT}/lib \
-Wl,-R,${SB_VAR_GCC_RT}/lib" \
  -Aprepend:libswanted='thread $empty' \
  -Dpager="/usr/bin/more" \
  -Dinstallusrbinperl="undef" \
  -Duseshrplib="true" \
  -Duseithreads="define" \
  -Dthreads="define" \
  -Di_gdbm="define" \
  -Dmake="gmake" \
  -des
  ;;
*-solaris*)
  ./Configure -Dcc=gcc -Dprefix=${SB_INSTALL_PREFIX} \
  -Dgccruntimelib="${SB_VAR_GCC_RT_LIB}" \
  -Dlibpth="/lib /usr/lib /usr/ccs/lib" \
  -Dlocincpth=" " \
  -Dloclibpth=" " \
  -Dsitearch="${SB_VAR_PERLP}/lib/5.12.2/${_arch}" \
  -Dsitebin="${SB_VAR_PERLP}/bin" \
  -Dsiteetc="${_sysconfdir}" \
  -Dsitelib="${SB_VAR_PERLP}/lib/5.12.2" \
  -Dsiteprefix="${SB_VAR_PERLP}" \
  -Dvendorarch="${SB_VAR_PERLP}/vendor/lib/5.12.2/${_arch}" \
  -Dvendorbin="${SB_VAR_PERLP}/vendor/bin" \
  -Dvendorlib="${SB_VAR_PERLP}/vendor/lib/5.12.2" \
  -Dvendorprefix="${SB_VAR_PERLP}/vendor" \
  -Dcf_email="support@thewrittenword.com" \
  -Dcf_by='The Written Word, Inc.' \
  -Dccflags="-DDEBUGGING" \
  -Doptimize="-O2 -mcpu=ultrasparc -mvis" \
  -Dldflags="-L${SB_VAR_GCC_RT}/lib \
-Wl,-R,${SB_VAR_GCC_RT}/lib" \
  -Aprepend:libswanted='thread $empty' \
  -Dpager="/usr/bin/more" \
  -Dinstallusrbinperl="undef" \
  -Duseshrplib="true" \
  -Duseithreads="define" \
  -Dthreads="define" \
  -Di_gdbm="define" \
  -Dmake="gmake" \
  -des
  ;;
esac

gmake depend

${SB_PATH_SED} -i -e "\
s!@GDBM_INC@!${SB_VAR_LIBGDBM_INC}!; \
s!@GDBM_LIB@!${SB_VAR_LIBGDBM_LIB}!;" ext/GDBM_File/Makefile.PL
]]>
    </configure>

    <test>
<![CDATA[
# This test hangs on hppa*-hp-hpux11.00 when run as part of the
# testsuite, but passes normally when run individually.
case "${SB_SYSTYPE}" in
hppa*-hpux11.00)
  rm -f ext/DynaLoader/t/DynaLoader.t
  :> ext/DynaLoader/t/DynaLoader.t ;;
esac

gmake test

: Ignore failures
]]>
    </test>

    <install>
<![CDATA[
gmake install

# Fix hard-coded shared library path
case "${SB_SYSTYPE}" in
*-aix*)
  rm -f perl ${SB_INSTALL_PREFIX}/bin/perl ${SB_INSTALL_PREFIX}/bin/perl5.12.2
  gmake LLIBPERL="-L${SB_INSTALL_PREFIX}/lib/5.12.2/${_arch}/CORE \
-Wl,-blibpath:${SB_INSTALL_PREFIX}/lib/5.12.2/${_arch}/CORE:\
${SB_VAR_GCC_RT_LIB}:/usr/lib \
-lperl" perl

  ${SB_PATH_INSTALL} -m 755 -o root -g 0 perl ${SB_INSTALL_PREFIX}/bin/perl
  ln ${SB_INSTALL_PREFIX}/bin/perl ${SB_INSTALL_PREFIX}/bin/perl5.12.2
  ;;
*-hpux*)
  rm -f perl ${SB_INSTALL_PREFIX}/bin/perl ${SB_INSTALL_PREFIX}/bin/perl5.12.2
  gmake LLIBPERL="-L${SB_INSTALL_PREFIX}/lib/5.12.2/${_arch}/CORE \
-Wl,+s,+b,${SB_INSTALL_PREFIX}/lib/5.12.2/${_arch}/CORE -lperl" perl

  ${SB_PATH_INSTALL} -m 755 -o root -g 0 perl ${SB_INSTALL_PREFIX}/bin/perl
  ln ${SB_INSTALL_PREFIX}/bin/perl ${SB_INSTALL_PREFIX}/bin/perl5.12.2
  ;;
esac

${SB_PATH_INSTALL} -m 755 -o root -g 0 -d \
${SB_VAR_PERLP}/vendor/lib/5.12.2/${_arch}

(cd /usr/include
 for _include in syslog.h sys/ioctl.h sys/socket.h sys/time.h \
wait.h sys/wait.h; do
  [ ! -f ${_include} ] && continue

  ${SB_INSTALL_PREFIX}/bin/h2ph ${_include}
 done)

# default include.paths configuration file
${SB_PATH_INSTALL} -m 755 -o root -g 0 -d ${_sysconfdir} \
${_sysconfdir}/include.paths.d
${SB_PATH_INSTALL} -m 644 -o root -g 0 /dev/null \
${_sysconfdir}/include.paths
]]>
    </install>

    <uninstall>
<![CDATA[
rm -rf ${SB_VAR_PERLP} ${SB_INSTALL_PREFIX}
]]>
    </uninstall>

    <notes>
      <change from="5.10.0" to="5.12.2">
        <items name="Incompatible Changes">
          <item><para>Switch statement changes</para>
          <para>The handling of complex expressions by the
"given"/"when" switch statement has been enhanced. There are two new
cases where "when" now interprets its argument as a boolean, instead
of an expression to be used in a smart match:</para>
          <unorderedlist>
            <item><para>flip-flop operators</para>
            <para>The ".." and "..." flip-flop operators are now
evaluated in boolean context, following their usual semantics; see
"Range Operators" in perlop.</para>
            <para>Note that, as in perl 5.10.0, "when (1..10)"
will not work to test whether a given value is an integer between 1
and 10; you should use "when ([1..10])" instead (note the array
reference).</para>
            <para>However, contrary to 5.10.0, evaluating the
flip-flop operators in boolean context ensures it can now be useful in
a "when()", notably for implementing bistable conditions, like
in:</para>
            <screen>
when (/^=begin/ .. /^=end/) {
  # do something
}
            </screen></item>
            <item><para>defined-or operator</para>
            <para>A compound expression involving the defined-or
operator, as in "when (expr1 // expr2)", will be treated as boolean if
the first expression is boolean. (This just extends the existing rule
that applies to the regular or operator, as in "when (expr1 ||
expr2)".)</para></item>
          </unorderedlist></item>
          <item><para>The next section details more changes brought to
the semantics to the smart match operator, that naturally also modify
the behaviour of the switch statements where smart matching is
implicitly used.</para></item>
          <item><para>Smart match changes:</para>
          <unorderedlist>
            <item><para>Changes to type-based dispatch</para>
            <para>The smart match operator "~~" is no longer
commutative. The behaviour of a smart match now depends primarily on
the type of its right hand argument. Moreover, its semantics have been
adjusted for greater consistency or usefulness in several cases. While
the general backwards compatibility is maintained, several changes
must be noted:</para>
            <unorderedlist>
              <item><para>Code references with an empty prototype
are no longer treated specially. They are passed an argument like the
other code references (even if they choose to ignore
it).</para></item>
              <item><para>"%hash ~~ sub {}" and "@array ~~ sub {}"
now test that the subroutine returns a true value for each key of the
hash (or element of the array), instead of passing the whole hash or
array as a reference to the subroutine.</para></item>
              <item><para>Due to the commutativity breakage, code
references are no longer treated specially when appearing on the left
of the "~~" operator, but like any vulgar scalar.</para></item>
              <item><para>"undef ~~ %hash" is always false (since
"undef" can't be a key in a hash). No implicit conversion to "" is
done (as was the case in perl 5.10.0).</para></item>
              <item><para>"$scalar ~~ @array" now always
distributes the smart match across the elements of the array. It's
true if one element in @array verifies "$scalar ~~ $element". This is
a generalization of the old behaviour that tested whether the array
contained the scalar.</para></item>
            </unorderedlist></item>
          </unorderedlist></item>
          <item><para>The full dispatch table for the smart match
operator is given in "Smart matching in detail" in
perlsyn.</para></item>
          <item><para>Smart match and overloading</para>
          <para>According to the rule of dispatch based on the
rightmost argument type, when an object overloading "~~" appears on
the right side of the operator, the overload routine will always be
called (with a 3rd argument set to a true value, see overload.)
However, when the object will appear on the left, the overload routine
will be called only when the rightmost argument is a simple scalar.
This way distributivity of smart match across arrays is not broken, as
well as the other behaviours with complex types (coderefs, hashes,
regexes). Thus, writers of overloading routines for smart match mostly
need to worry only with comparing against a scalar, and possibly with
stringification overloading; the other common cases will be
automatically handled consistently.</para>
          <para>"~~" will now refuse to work on objects that do not
overload it (in order to avoid relying on the object's underlying
structure). (However, if the object overloads the stringification or
the numification operators, and if overload fallback is active, it
will be used instead, as usual.)</para></item>
          <item><para>Other incompatible changes:</para>
          <unorderedlist>
            <item><para>The semantics of "use feature :5.10*" have
changed slightly. See "Modules and Pragmata" for more
information.</para></item>
            <item><para>It is now a run-time error to use the smart
match operator "~~" with an object that has no overload defined for
it. (This way "~~" will not break encapsulation by matching against
the object's internal representation as a reference.)</para></item>
            <item><para>The version control system used for the
development of the perl interpreter has been switched from Perforce to
git. This is mainly an internal issue that only affects people
actively working on the perl core; but it may have minor external
visibility, for example in some of details of the output of "perl -V".
See perlrepository for more information.</para></item>
            <item><para>internal structure of the "ext/" directory
in the perl source has been reorganised. In general, a module
"Foo::Bar" whose source was stored under ext/Foo/Bar/ is now located
under ext/Foo-Bar/. Also, some modules have been moved from lib/ to
ext/. This is purely a source tarball change, and should make no
difference to the compilation or installation of perl, unless you have
a very customised build process that explicitly relies on this
structure, or which hard-codes the "nonxs_ext" Configure parameter.
Specifically, this change does not by default alter the location of
any files in the final installation.</para></item>
            <item><para>As part of the "Test::Harness" 2.x to 3.x
upgrade, the experimental "Test::Harness::Straps" module has been
removed. See "Updated Modules" for more details.</para></item>
            <item><para>As part of the "ExtUtils::MakeMaker"
upgrade, the "ExtUtils::MakeMaker::bytes" and
"ExtUtils::MakeMaker::vmsish" modules have been removed from this
distribution.</para></item>
            <item><para>"Module::CoreList" no longer contains the
%:patchlevel hash.</para></item>
            <item><para>This one is actually a change introduced in
5.10.0, but it was missed from that release's perldelta, so it is
mentioned here instead.</para>
            <para>A bugfix related to the handling of the "/m"
modifier and "qr" resulted in a change of behaviour between 5.8.x and
5.10.0:</para>
            <screen>
# matches in 5.8.x, doesn't match in 5.10.0
$re = qr/^bar/; "foo\nbar" =~ /$re/m;
            </screen></item>
          </unorderedlist></item>
        </items>

        <items name="Core Enhancements">
          <item><para>Unicode Character Database 5.1.0 The copy of the
Unicode Character Database included in Perl 5.12.2 has been updated to
5.1.0 from 5.0.0. See <ulink url="http://www.unicode.org/versions/Unicode5.1.0/#NotableChanges">http://www.unicode.org/versions/Unicode5.1.0/#NotableChanges</ulink>
for the notable changes.</para></item>
          <item><para>A proper interface for pluggable Method
Resolution Orders As of Perl 5.12.2 there is a new interface for
plugging and using method resolution orders other than the default
(linear depth first search). The C3 method resolution order added in
5.10.0 has been re-implemented as a plugin, without changing its
Perl-space interface. See perlmroapi for more
information.</para></item>
          <item><para>The "overloading" pragma - This pragma allows
you to lexically disable or enable overloading for some or all
operations.</para></item>
          <item><para>Parallel tests: The core distribution can now run
its regression tests in parallel on Unix-like platforms. Instead of
running "make test", set "TEST_JOBS" in your environment to the number
of tests to run in parallel, and run "make test_harness". On a
Bourne-like shell, this can be done as <command>TEST_JOBS=3 make
test_harness  # Run 3 tests in parallel</command></para>
          <para>An environment variable is used, rather than parallel
make itself, because TAP::Harness needs to be able to schedule
individual non-conflicting test scripts itself, and there is no
standard interface to "make" utilities to interact with their job
schedulers.</para>
          <para>Note that currently some test scripts may fail when
run in parallel (most notably "ext/IO/t/io_dir.t"). If necessary run
just the failing scripts again sequentially and see if the failures go
away.</para></item>
          <item><para>DTrace support: Some support for DTrace has been
added. See "DTrace support" in INSTALL.</para></item>
          <item><para>Support for "configure_requires" in CPAN module
metadata: Both "CPAN" and "CPANPLUS" now support the
"configure_requires" keyword in the "META.yml" metadata file included
in most recent CPAN distributions. This allows distribution authors to
specify configuration prerequisites that must be installed before
running Makefile.PL or Build.PL.</para>
          <para>See the documentation for "ExtUtils::MakeMaker" or
"Module::Build" for more on how to specify "configure_requires" when
creating a distribution for CPAN.</para></item>
        </items>

        <items name="Modules and Pragmata">
          <item><para>New Modules and Pragmata</para>
          <unorderedlist>
            <item><para>"autodie": This is a new lexically-scoped
alternative for the "Fatal" module. The bundled version is 2.06_01.
Note that in this release, using a string eval when "autodie" is in
effect can cause the autodie behaviour to leak into the surrounding
scope. See "BUGS" in autodie for more details.</para></item>
            <item><para>"Compress::Raw::Bzip2": This has been added
to the core (version 2.020).</para></item>
            <item><para>"parent": This pragma establishes an ISA
relationship with base classes at compile time. It provides the key
feature of "base" without the feature creep.</para></item>
            <item><para>"Parse::CPAN::Meta": This has been added to
the core (version 1.39).</para></item>
          </unorderedlist></item>
          <item><para>Pragmata Changes</para>
          <unorderedlist>
            <item><para>"attributes": Upgraded from version 0.08 to
0.09.</para></item>
            <item><para>"attrs": Upgraded from version 1.02 to
1.03.</para></item>
            <item><para>"base": Upgraded from version 2.13 to 2.14.
See parent for a replacement.</para></item>
            <item><para>"bigint": Upgraded from version 0.22 to
0.23.</para></item>
            <item><para>"bignum": Upgraded from version 0.22 to
0.23.</para></item>
            <item><para>"bigrat": Upgraded from version 0.22 to
0.23.</para></item>
            <item><para>"charnames": Upgraded from version 1.06 to
1.07.</para>
            <para>The Unicode NameAliases.txt database file has
been added. This has the effect of adding some extra "\N" character
names that formerly wouldn't have been recognised; for example,
"\N{LATIN CAPITAL LETTER GHA}".</para></item>
            <item><para>"constant": Upgraded from version 1.13 to
1.17.</para></item>
            <item><para>"feature": The meaning of the ":5.10" and
":5.10.X" feature bundles has changed slightly. The last component, if
any (i.e. "X") is simply ignored. This is predicated on the assumption
that new features will not, in general, be added to maintenance
releases. So ":5.10" and ":5.10.X" have identical effect. This is a
change to the behaviour documented for 5.10.0.</para></item>
            <item><para>"fields": Upgraded from version 2.13 to 2.14
(this was just a version bump; there were no functional
changes).</para></item>
            <item><para>"lib": Upgraded from version 0.5565 to
0.62.</para></item>
            <item><para>"open": Upgraded from version 1.06 to
1.07.</para></item>
            <item><para>"overload": Upgraded from version 1.06 to
1.07.</para></item>
            <item><para>"overloading": See "The "overloading"
pragma" above.</para></item>
            <item><para>"version": Upgraded from version 0.74 to
0.77.</para></item>
          </unorderedlist></item>
          <item><para>Updated Modules</para>
          <unorderedlist>
            <item><para>"Archive::Extract": Upgraded from version
0.24 to 0.34.</para></item>
            <item><para>"Archive::Tar": Upgraded from version 1.38
to 1.52.</para></item>
            <item><para>"Attribute::Handlers": Upgraded from version
0.79 to 0.85.</para></item>
            <item><para>"AutoLoader": Upgraded from version 5.63 to
5.68.</para></item>
            <item><para>"AutoSplit": Upgraded from version 1.05 to
1.06.</para></item>
            <item><para>"B" Upgraded from version 1.17 to
1.22.</para></item>
            <item><para>"B::Debug": Upgraded from version 1.05 to
1.11.</para></item>
            <item><para>"B::Deparse": Upgraded from version 0.83 to
0.89.</para></item>
            <item><para>"B::Lint": Upgraded from version 1.09 to
1.11.</para></item>
            <item><para>"B::Xref": Upgraded from version 1.01 to
1.02.</para></item>
            <item><para>"Benchmark": Upgraded from version 1.10 to
1.11.</para></item>
            <item><para>"Carp": Upgraded from version 1.08 to
1.11.</para></item>
            <item><para>"CGI": Upgraded from version 3.29 to 3.43.
(also includes the "default_value for popup_menu()" fix from
3.45).</para></item>
            <item><para>"Compress::Zlib": Upgraded from version
2.008 to 2.020.</para></item>
            <item><para>"CPAN": Upgraded from version 1.9205 to
1.9402. "CPAN::FTP" has a local fix to stop it being too verbose on
download failure.</para></item>
            <item><para>"CPANPLUS": Upgraded from version 0.84 to
0.88.</para></item>
            <item><para>"CPANPLUS::Dist::Build": Upgraded from
version 0.06_02 to 0.36.</para></item>
            <item><para>"Cwd": Upgraded from version 3.25_01 to
3.30.</para></item>
            <item><para>"Data::Dumper": Upgraded from version
2.121_14 to 2.124.</para></item>
            <item><para>"DB": Upgraded from version 1.01 to
1.02.</para></item>
            <item><para>"DB_File": Upgraded from version 1.816_1 to
1.820.</para></item>
            <item><para>"Devel::PPPort": Upgraded from version 3.13
to 3.19.</para></item>
            <item><para>"Digest::MD5": Upgraded from version 2.36_01
to 2.39.</para></item>
            <item><para>"Digest::SHA": Upgraded from version 5.45 to
5.47.</para></item>
            <item><para>"DirHandle": Upgraded from version 1.01 to
1.03.</para></item>
            <item><para>"Dumpvalue": Upgraded from version 1.12 to
1.13.</para></item>
            <item><para>"DynaLoader": Upgraded from version 1.08 to
1.10.</para></item>
            <item><para>"Encode": Upgraded from version 2.23 to
2.35.</para></item>
            <item><para>"Errno": Upgraded from version 1.10 to
1.11.</para></item>
            <item><para>"Exporter": Upgraded from version 5.62 to
5.63.</para></item>
            <item><para>"ExtUtils::CBuilder": Upgraded from version
0.21 to 0.2602.</para></item>
            <item><para>"ExtUtils::Command": Upgraded from version
1.13 to 1.16.</para></item>
            <item><para>"ExtUtils::Constant": Upgraded from 0.20 to
0.22. (Note that neither of these versions are available on
CPAN.)</para></item>
            <item><para>"ExtUtils::Embed": Upgraded from version
1.27 to 1.28.</para></item>
            <item><para>"ExtUtils::Install": Upgraded from version
1.44 to 1.54.</para></item>
            <item><para>"ExtUtils::MakeMaker": Upgraded from version
6.42 to 6.55_02. Note that "ExtUtils::MakeMaker::bytes" and
"ExtUtils::MakeMaker::vmsish" have been removed from this
distribution.</para></item>
            <item><para>"ExtUtils::Manifest": Upgraded from version
1.51_01 to 1.56.</para></item>
            <item><para>"ExtUtils::ParseXS": Upgraded from version
2.18_02 to 2.2002.</para></item>
            <item><para>"Fatal": Upgraded from version 1.05 to
2.06_01. See also the new pragma "autodie".</para></item>
            <item><para>"File::Basename": Upgraded from version 2.76
to 2.77.</para></item>
            <item><para>"File::Compare": Upgraded from version
1.1005 to 1.1006.</para></item>
            <item><para>"File::Copy": Upgraded from version 2.11 to
2.14.</para></item>
            <item><para>"File::Fetch": Upgraded from version 0.14 to
0.20.</para></item>
            <item><para>"File::Find": Upgraded from version 1.12 to
1.14.</para></item>
            <item><para>"File::Path": Upgraded from version 2.04 to
2.07_03.</para></item>
            <item><para>"File::Spec": Upgraded from version 3.2501
to 3.30.</para></item>
            <item><para>"File::stat": Upgraded from version 1.00 to
1.01.</para></item>
            <item><para>"File::Temp": Upgraded from version 0.18 to
0.22.</para></item>
            <item><para>"FileCache": Upgraded from version 1.07 to
1.08.</para></item>
            <item><para>"FileHandle": Upgraded from version 2.01 to
2.02.</para></item>
            <item><para>"Filter::Simple": Upgraded from version 0.82
to 0.84.</para></item>
            <item><para>"Filter::Util::Call": Upgraded from version
1.07 to 1.08.</para></item>
            <item><para>"FindBin": Upgraded from version 1.49 to
1.50.</para></item>
            <item><para>"GDBM_File": Upgraded from version 1.08 to
1.09.</para></item>
            <item><para>"Getopt::Long": Upgraded from version 2.37
to 2.38.</para></item>
            <item><para>"Hash::Util::FieldHash": Upgraded from
version 1.03 to 1.04. This fixes a memory leak.</para></item>
            <item><para>"I18N::Collate": Upgraded from version 1.00
to 1.01.</para></item>
            <item><para>"IO": Upgraded from version 1.23_01 to 1.25.
This makes non-blocking mode work on Windows in "IO::Socket::INET"
[CPAN #43573].</para></item>
            <item><para>"IO::Compress::*": Upgraded from version
2.008 to 2.020.</para></item>
            <item><para>"IO::Dir": Upgraded from version 1.06 to
1.07.</para></item>
            <item><para>"IO::Handle": Upgraded from version 1.27 to
1.28.</para></item>
            <item><para>"IO::Socket": Upgraded from version 1.30_01
to 1.31.</para></item>
            <item><para>"IO::Zlib": Upgraded from version 1.07 to
1.09.</para></item>
            <item><para>"IPC::Cmd": Upgraded from version 0.40_1 to
0.46.</para></item>
            <item><para>"IPC::Open3": Upgraded from version 1.02 to
1.04.</para></item>
            <item><para>"IPC::SysV": Upgraded from version 1.05 to
2.01.</para></item>
            <item><para>"lib": Upgraded from version 0.5565 to
0.62.</para></item>
            <item><para>"List::Util": Upgraded from version 1.19 to
1.21.</para></item>
            <item><para>"Locale::MakeText": Upgraded from version
1.12 to 1.13.</para></item>
            <item><para>"Log::Message": Upgraded from version 0.01
to 0.02.</para></item>
            <item><para>"Math::BigFloat": Upgraded from version 1.59
to 1.60.</para></item>
            <item><para>"Math::BigInt": Upgraded from version 1.88
to 1.89.</para></item>
            <item><para>"Math::BigInt::FastCalc": Upgraded from
version 0.16 to 0.19.</para></item>
            <item><para>"Math::BigRat": Upgraded from version 0.21
to 0.22.</para></item>
            <item><para>"Math::Complex": Upgraded from version 1.37
to 1.56.</para></item>
            <item><para>"Math::Trig": Upgraded from version 1.04 to
1.20.</para></item>
            <item><para>"Memoize": Upgraded from version 1.01_02 to
1.01_03 (just a minor documentation change).</para></item>
            <item><para>"Module::Build": Upgraded from version
0.2808_01 to 0.34_02.</para></item>
            <item><para>"Module::CoreList": Upgraded from version
2.13 to 2.18. This release no longer contains the
%Module::CoreList::patchlevel hash.</para></item>
            <item><para>"Module::Load": Upgraded from version 0.12
to 0.16.</para></item>
            <item><para>"Module::Load::Conditional": Upgraded from
version 0.22 to 0.30.</para></item>
            <item><para>"Module::Loaded": Upgraded from version 0.01
to 0.02.</para></item>
            <item><para>"Module::Pluggable": Upgraded from version
3.6 to 3.9.</para></item>
            <item><para>"NDBM_File": Upgraded from version 1.07 to
1.08.</para></item>
            <item><para>"Net::Ping": Upgraded from version 2.33 to
2.36.</para></item>
            <item><para>"NEXT": Upgraded from version 0.60_01 to
0.64.</para></item>
            <item><para>"Object::Accessor": Upgraded from version
0.32 to 0.34.</para></item>
            <item><para>"OS2::REXX": Upgraded from version 1.03 to
1.04.</para></item>
            <item><para>"Package::Constants": Upgraded from version
0.01 to 0.02.</para></item>
            <item><para>"PerlIO": Upgraded from version 1.04 to
1.06.</para></item>
            <item><para>"PerlIO::via": Upgraded from version 0.04 to
0.07.</para></item>
            <item><para>"Pod::Man": Upgraded from version 2.16 to
2.22.</para></item>
            <item><para>"Pod::Parser": Upgraded from version 1.35 to
1.37.</para></item>
            <item><para>"Pod::Simple": Upgraded from version 3.05 to
3.07.</para></item>
            <item><para>"Pod::Text": Upgraded from version 3.08 to
3.13.</para></item>
            <item><para>"POSIX": Upgraded from version 1.13 to
1.17.</para></item>
            <item><para>"Safe": Upgraded from 2.12 to
2.18.</para></item>
            <item><para>"Scalar::Util": Upgraded from version 1.19
to 1.21.</para></item>
            <item><para>"SelectSaver": Upgraded from 1.01 to
1.02.</para></item>
            <item><para>"SelfLoader": Upgraded from 1.11 to
1.17.</para></item>
            <item><para>"Socket": Upgraded from 1.80 to
1.82.</para></item>
            <item><para>"Storable": Upgraded from 2.18 to
2.20.</para></item>
            <item><para>"Switch": Upgraded from version 2.13 to
2.14. Please see "Deprecations".</para></item>
            <item><para>"Symbol": Upgraded from version 1.06 to
1.07.</para></item>
            <item><para>"Sys::Syslog": Upgraded from version 0.22 to
0.27.</para></item>
            <item><para>"Term::ANSIColor": Upgraded from version
1.12 to 2.00.</para></item>
            <item><para>"Term::ReadLine": Upgraded from version 1.03
to 1.04.</para></item>
            <item><para>"Term::UI": Upgraded from version 0.18 to
0.20.</para></item>
            <item><para>"Test::Harness": Upgraded from version 2.64
to 3.17. Note that one side-effect of the 2.x to 3.x upgrade is that
the experimental "Test::Harness::Straps" module (and its supporting
"Assert", "Iterator", "Point" and "Results" modules) have been
removed. If you still need this, then they are available in the
(unmaintained) "Test-Harness-Straps" distribution on
CPAN.</para></item>
            <item><para>"Test::Simple": Upgraded from version 0.72
to 0.92.</para></item>
            <item><para>"Text::ParseWords": Upgraded from version
3.26 to 3.27.</para></item>
            <item><para>"Text::Tabs": Upgraded from version
2007.1117 to 2009.0305.</para></item>
            <item><para>"Text::Wrap": Upgraded from version
2006.1117 to 2009.0305.</para></item>
            <item><para>"Thread::Queue": Upgraded from version 2.00
to 2.11.</para></item>
            <item><para>"Thread::Semaphore": Upgraded from version
2.01 to 2.09.</para></item>
            <item><para>"threads": Upgraded from version 1.67 to
1.72.</para></item>
            <item><para>"threads::shared": Upgraded from version
1.14 to 1.29.</para></item>
            <item><para>"Tie::RefHash": Upgraded from version 1.37
to 1.38.</para></item>
            <item><para>"Tie::StdHandle": This has documentation
changes, and has been assigned a version for the first time: version
4.2.</para></item>
            <item><para>"Time::HiRes": Upgraded from version 1.9711
to 1.9719.</para></item>
            <item><para>"Time::Local": Upgraded from version 1.18 to
1.1901.</para></item>
            <item><para>"Time::Piece": Upgraded from version 1.12 to
1.15.</para></item>
            <item><para>"Unicode::Normalize": Upgraded from version
1.02 to 1.03.</para></item>
            <item><para>"Unicode::UCD": Upgraded from version 0.25
to 0.27. "charinfo()" now works on Unified CJK code points added to
later versions of Unicode. "casefold()" has new fields returned to
provide both a simpler interface and previously missing information.
The old fields are retained for backwards compatibility. Information
about Turkic-specific code points is now returned. The documentation
has been corrected and expanded.</para></item>
            <item><para>"UNIVERSAL": Upgraded from version 1.04 to
1.05.</para></item>
            <item><para>"Win32": Upgraded from version 0.34 to
0.39.</para></item>
            <item><para>"Win32API::File": Upgraded from version
0.1001_01 to 0.1101.</para></item>
            <item><para>"XSLoader": Upgraded from version 0.08 to
0.10.</para></item>
          </unorderedlist></item>
        </items>

        <items name="Utility Changes">
          <item><para>h2ph: Now looks in "include-fixed" too, which is
a recent addition to gcc's search path.</para></item>
          <item><para>h2xs: No longer incorrectly treats enum values
like macros (Daniel Burr). Now handles C++ style constants ("//")
properly in enums. (A patch from Rainer Weikusat was used; Daniel Burr
also proposed a similar fix).</para></item>
          <item><para>perl5db.pl: "LVALUE" subroutines now work under
the debugger. The debugger now correctly handles proxy constant
subroutines, and subroutine stubs.</para></item>
          <item><para>perlthanks: Perl 5.12.2 adds a new utility
perlthanks, which is a variant of perlbug, but for sending
non-bug-reports to the authors and maintainers of Perl. Getting
nothing but bug reports can become a bit demoralising: we'll see if
this changes things.</para></item>
        </items>

        <items name="New Documentation">
          <item><para>perlhaiku: This contains instructions on how to
build perl for the Haiku platform.</para></item>
          <item><para>perlmroapi: This describes the new interface for
pluggable Method Resolution Orders.</para></item>
          <item><para>perlperf: This document, provides an
introduction to the use of performance and optimization techniques
which can be used with particular reference to perl
programs.</para></item>
          <item><para>perlrepository: This describes how to access the
perl source using the *git* version control system.</para></item>
          <item><para>perlthanks: This describes the new perlthanks
utility.</para></item>
        </items>

        <items name="Changes to Existing Documentation">
          <item><para>The various large "Changes*" files (which listed
every change made to perl over the last 18 years) have been removed,
and replaced by a small file, also called "Changes", which just
explains how that same information may be extracted from the git
version control system.</para></item>
          <item><para>The file Porting/patching.pod has been deleted,
as it mainly described interacting with the old Perforce-based
repository, which is now obsolete. Information still relevant has been
moved to perlrepository.</para></item>
          <item><para>perlapi, perlintern, perlmodlib and perltoc are
now all generated at build time, rather than being shipped as part of
the release.</para></item>
        </items>

        <items name="Performance Enhancements">
          <item><para>A new internal cache means that "isa()" will
often be faster.</para></item>
          <item><para>Under "use locale", the locale-relevant
information is now cached on read-only values, such as the list
returned by "keys %hash". This makes operations such as "sort keys
%hash" in the scope of "use locale" much faster.</para></item>
          <item><para>Empty "DESTROY" methods are no longer
called.</para></item>
        </items>

        <items name="Installation and Configuration Improvements">
          <item><para>ext/ reorganisation</para>
          <para>The layout of directories in ext has been revised.
Specifically, all extensions are now flat, and at the top level, with
"/" in pathnames replaced by "-", so that ext/Data/Dumper/ is now
ext/Data-Dumper/, etc. The names of the extensions as specified to
Configure, and as reported by %Config::Config under the keys
"dynamic_ext", "known_extensions", "nonxs_ext" and "static_ext" have
not changed, and still use "/". Hence this change will not have any
affect once perl is installed. However, "Attribute::Handlers", "Safe"
and "mro" have now become extensions in their own right, so if you run
Configure with options to specify an exact list of extensions to
build, you will need to change it to account for this.</para>
          <para>For 5.10.2, it is planned that many dual-life
modules will have been moved from lib to ext; again this will have no
effect on an installed perl, but will matter if you invoke Configure
with a pre-canned list of extensions to build.</para></item>
          <item><para>Configuration improvements</para>
          <para>If "vendorlib" and "vendorarch" are the same, then
they are only added to @INC once.</para>
          <para>$Config{usedevel} and the C-level "PERL_USE_DEVEL"
are now defined if perl is built with "-Dusedevel".</para>
          <para>Configure will enable use of "-fstack-protector", to
provide protection against stack-smashing attacks, if the compiler
supports it.</para>
          <para>Configure will now determine the correct prototypes
for re-entrant functions, and for "gconvert", if you are using a C++
compiler rather than a C compiler.</para>
          <para>On Unix, if you build from a tree containing a git
repository, the configuration process will note the commit hash you
have checked out, for display in the output of "perl -v" and "perl
-V". Unpushed local commits are automatically added to the list of
local patches displayed by "perl -V".</para></item>
          <item><para>Compilation improvements</para>
          <para>As part of the flattening of ext, all extensions on
all platforms are built by make_ext.pl. This replaces the
Unix-specific ext/util/make_ext, VMS-specific make_ext.com and
Win32-specific win32/buildext.pl.</para></item>
          <item><para>Platform Specific Changes</para>
          <unorderedlist>
            <item><para>AIX Removed libbsd for AIX 5L and 6.1. Only
flock() was used from libbsd.</para>
            <para>Removed libgdbm for AIX 5L and 6.1. The libgdbm
is delivered as an optional package with the AIX Toolbox.
Unfortunately the 64 bit version is broken.</para>
            <para>Hints changes mean that AIX 4.2 should work
again.</para></item>
            <item><para>Cygwin</para>
            <para>On Cygwin we now strip the last number from the
DLL. This has been the behaviour in the cygwin.com build for years.
The hints files have been updated.</para></item>
            <item><para>FreeBSD</para>
            <para>The hints files now identify the correct
threading libraries on FreeBSD 7 and later.</para></item>
            <item><para>Irix</para>
            <para>We now work around a bizarre preprocessor bug in
the Irix 6.5 compiler: "cc -E -" unfortunately goes into K&amp;R mode,
but "cc -E file.c" doesn't.</para></item>
            <item><para>Haiku</para>
            <para>Patches from the Haiku maintainers have been
merged in. Perl should now build on Haiku.</para></item>
            <item><para>MirOS BSD</para>
            <para>Perl should now build on MirOS BSD.</para></item>
            <item><para>NetBSD</para>
            <para>Hints now supports versions 5.*.</para></item>
            <item><para>Stratus VOS</para>
            <para>Various changes from Stratus have been merged
in.</para></item>
            <item><para>Symbian</para>
            <para>There is now support for Symbian S60 3.2 SDK and
S60 5.0 SDK.</para></item>
            <item><para>Win32</para>
            <para>Improved message window handling means that
"alarm" and "kill" messages will no longer be dropped under race
conditions.</para></item>
            <item><para>VMS Reads from the in-memory temporary files
of "PerlIO::scalar" used to fail if $/ was set to a numeric reference
(to indicate record-style reads). This is now fixed.</para>
            <para>VMS now supports "getgrgid".</para>
            <para>Many improvements and cleanups have been made to
the VMS file name handling and conversion code.</para>
            <para>Enabling the "PERL_VMS_POSIX_EXIT" logical name
now encodes a POSIX exit status in a VMS condition value for better
interaction with GNV's bash shell and other utilities that depend on
POSIX exit values. See "$?" in perlvms for details.</para></item>
          </unorderedlist></item>
        </items>

        <items name="Selected Bug Fixes">
          <item><para>5.10.0 inadvertently disabled an optimisation,
which caused a measurable performance drop in list assignment, such as
is often used to assign function parameters from @_. The optimisation
has been re-instated, and the performance regression
fixed.</para></item>
          <item><para>Fixed memory leak on "while (1) { map 1, 1 }"
[RT #53038].</para></item>
          <item><para>Some potential coredumps in PerlIO fixed [RT
#57322,54828].</para></item>
          <item><para>The debugger now works with lvalue
subroutines.</para></item>
          <item><para>The debugger's "m" command was broken on modules
that defined constants [RT #61222].</para></item>
          <item><para>"crypt()" and string complement could return
tainted values for untainted arguments [RT #59998].</para></item>
          <item><para>The "-i.suffix" command-line switch now
recreates the file using restricted permissions, before changing its
mode to match the original file. This eliminates a potential race
condition [RT #60904].</para></item>
          <item><para>On some UNIX systems, the value in $? would not
have the top bit set ("$? &amp; 128") even if the child core
dumped.</para></item>
          <item><para>Under some circumstances, $^R could incorrectly
become undefined [RT #57042].</para></item>
          <item><para>(XS) In various hash functions, passing a
pre-computed hash to when the key is UTF-8 might result in an
incorrect lookup.</para></item>
          <item><para>(XS) Including XSUB.h before perl.h gave a
compile-time error [RT #57176].</para></item>
          <item><para>"$object-&gt;isa('Foo')" would report false if the
package "Foo" didn't exist, even if the object's @ISA contained
"Foo".</para></item>
          <item><para>Various bugs in the new-to 5.10.0 mro code,
triggered by manipulating @ISA, have been found and
fixed.</para></item>
          <item><para>Bitwise operations on references could crash the
interpreter, e.g. "$x=\$y; $x |= "foo"" [RT #54956].</para></item>
          <item><para>Patterns including alternation might be
sensitive to the internal UTF-8 representation, e.g.</para>
          <screen>
my $byte = chr(192);
my $utf8 = chr(192); utf8::upgrade($utf8);
$utf8 =~ /$byte|X}/i;       # failed in 5.10.0
          </screen></item>
          <item><para>Within UTF8-encoded Perl source files (i.e.
where "use utf8" is in effect), double-quoted literal strings could be
corrupted where a "\xNN", "\0NNN" or "\N{}" is followed by a literal
character with ordinal value greater than 255 [RT
#59908].</para></item>
          <item><para>"B::Deparse" failed to correctly deparse various
constructs: "readpipe STRING" [RT #62428], "CORE::require(STRING)" [RT
#62488], "sub foo(_)" [RT #62484].</para></item>
          <item><para>Using "setpgrp()" with no arguments could
corrupt the perl stack.</para></item>
          <item><para>The block form of "eval" is now specifically
trappable by "Safe" and "ops". Previously it was erroneously treated
like string "eval".</para></item>
          <item><para>In 5.10.0, the two characters "[~" were
sometimes parsed as the smart match operator ("~~") [RT
#63854].</para></item>
          <item><para>In 5.10.0, the "*" quantifier in patterns was
sometimes treated as "{0,32767}" [RT #60034, #60464]. For example,
this match would fail:</para>
          <screen>
("ab" x 32768) =~ /^(ab)*$/
          </screen></item>
          <item><para>"shmget" was limited to a 32 bit segment size on
a 64 bit OS [RT #63924].</para></item>
          <item><para>Using "next" or "last" to exit a "given" block
no longer produces a spurious warning like the
following:</para>
          <screen>
Exiting given via last at foo.pl line 123
          </screen></item>
          <item><para>On Windows, '.\foo' and '..\foo' were treated
differently than './foo' and '../foo' by "do" and "require" [RT
#63492].</para></item>
          <item><para>Assigning a format to a glob could corrupt the
format; e.g.:</para>
          <screen>
*bar=*foo{FORMAT}; # foo format now bad
          </screen></item>
          <item><para>Attempting to coerce a typeglob to a string or
number could cause an assertion failure. The correct error message is
now generated, "Can't coerce GLOB to *$type*".</para></item>
          <item><para>Under "use filetest 'access'", "-x" was using
the wrong access mode. This has been fixed [RT #49003].</para></item>
          <item><para>"length" on a tied scalar that returned a
Unicode value would not be correct the first time. This has been
fixed.</para></item>
          <item><para>Using an array "tie" inside in array "tie" could
SEGV. This has been fixed. [RT #51636]</para></item>
          <item><para>A race condition inside "PerlIOStdio_close()"
has been identified and fixed. This used to cause various threading
issues, including SEGVs.</para></item>
          <item><para>In "unpack", the use of "()" groups in scalar
context was internally placing a list on the interpreter's stack,
which manifested in various ways, including SEGVs. This is now fixed
[RT #50256].</para></item>
          <item><para>Magic was called twice in "substr", "\&amp;$x",
"tie $x, $m" and "chop". These have all been fixed.</para></item>
          <item><para>A 5.10.0 optimisation to clear the temporary
stack within the implicit loop of "s///ge" has been reverted, as it
turned out to be the cause of obscure bugs in seemingly unrelated
parts of the interpreter [commit ef0d4e17921ee3de].</para></item>
          <item><para>The line numbers for warnings inside "elsif" are
now correct.</para></item>
          <item><para>The ".." operator now works correctly with
ranges whose ends are at or close to the values of the smallest and
largest integers.</para></item>
          <item><para>"binmode STDIN, ':raw'" could lead to
segmentation faults on some platforms. This has been fixed [RT
#54828].</para></item>
          <item><para>An off-by-one error meant that "index $str, ..."
was effectively being executed as "index "$str\0", ...". This has been
fixed [RT #53746].</para></item>
          <item><para>Various leaks associated with named captures in
regexes have been fixed [RT #57024].</para></item>
          <item><para>A weak reference to a hash would leak. This was
affecting "DBI" [RT #56908].</para></item>
          <item><para>Using (?|) in a regex could cause a segfault [RT
#59734].</para></item>
          <item><para>Use of a UTF-8 "tr//" within a closure could
cause a segfault [RT #61520].</para></item>
          <item><para>Calling "sv_chop()" or otherwise upgrading an SV
could result in an unaligned 64-bit access on the SPARC architecture
[RT #60574].</para></item>
          <item><para>In the 5.10.0 release, "inc_version_list" would
incorrectly list "5.10.*" after "5.8.*"; this affected the @INC search
order [RT #67628].</para></item>
          <item><para>In 5.10.0, "pack "a*", $tainted_value" returned
a non-tainted value [RT #52552].</para></item>
          <item><para>In 5.10.0, "printf" and "sprintf" could produce
the fatal error "panic: utf8_mg_pos_cache_update" when printing UTF-8
strings [RT #62666].</para></item>
          <item><para>In the 5.10.0 release, a dynamically created
"AUTOLOAD" method might be missed (method cache issue) [RT
#60220,60232].</para></item>
          <item><para>In the 5.10.0 release, a combination of "use
feature" and "//ee" could cause a memory leak [RT
#63110].</para></item>
          <item><para>"-C" on the shebang ("#!") line is once more
permitted if it is also specified on the command line. "-C" on the
shebang line used to be a silent no-op *if* it was not also on the
command line, so perl 5.10.0 disallowed it, which broke some scripts.
Now perl checks whether it is also on the command line and only dies
if it is not [RT #67880].</para></item>
          <item><para>In 5.10.0, certain types of re-entrant regular
expression could crash, or cause the following assertion failure [RT
#60508]:</para>
          <screen>
Assertion rx-&gt;sublen &gt;= (s - rx-&gt;subbeg) + i failed
          </screen></item>
        </items>

        <items name="New or Changed Diagnostics">
          <item><para>"panic: sv_chop %s": This new fatal error occurs
when the C routine "Perl_sv_chop()" was passed a position that is not
within the scalar's string buffer. This could be caused by buggy XS
code, and at this point recovery is not possible.</para></item>
          <item><para>"Can't locate package %s for the parents of %s":
This warning has been removed. In general, it only got produced in
conjunction with other warnings, and removing it allowed an ISA lookup
optimisation to be added.</para></item>
          <item><para>"v-string in use/require is non-portable": This
warning has been removed.</para></item>
          <item><para>"Deep recursion on subroutine "%s"": It is now
possible to change the depth threshold for this warning from the
default of 100, by recompiling the perl binary, setting the C
pre-processor macro "PERL_SUB_DEPTH_WARN" to the desired
value.</para></item>
        </items>

        <items name="Changed Internals">
          <item><para>The J.R.R. Tolkien quotes at the head of C
source file have been checked and proper citations added, thanks to a
patch from Tom Christiansen.</para></item>
          <item><para>"vcroak()" now accepts a null first argument. In
addition, a full audit was made of the "not NULL" compiler
annotations, and those for several other internal functions were
corrected.</para></item>
          <item><para>New macros "dSAVEDERRNO", "dSAVE_ERRNO",
"SAVE_ERRNO", "RESTORE_ERRNO" have been added to formalise the
temporary saving of the "errno" variable.</para></item>
          <item><para>The function "Perl_sv_insert_flags" has been
added to augment "Perl_sv_insert".</para></item>
          <item><para>The function "Perl_newSV_type(type)" has been
added, equivalent to "Perl_newSV()" followed by
"Perl_sv_upgrade(type)".</para></item>
          <item><para>The function "Perl_newSVpvn_flags()" has been
added, equivalent to "Perl_newSVpvn()" and then performing the action
relevant to the flag.</para>
          <para>Two flag bits are currently
supported.</para>
          <unorderedlist>
            <item><para>"SVf_UTF8"</para>
            <para>This will call "SvUTF8_on()" for you. (Note that
this does not convert an sequence of ISO 8859-1 characters to UTF-8).
A wrapper, "newSVpvn_utf8()" is available for this.</para></item>
            <item><para>"SVs_TEMP"</para>
            <para>Call "sv_2mortal()" on the new SV.</para></item>
          </unorderedlist>
          <para>There is also a wrapper that takes constant
strings, "newSVpvs_flags()".</para></item>
          <item><para>The function "Perl_croak_xs_usage" has been
added as a wrapper to "Perl_croak".</para></item>
          <item><para>The functions "PerlIO_find_layer" and
"PerlIO_list_alloc" are now exported.</para></item>
          <item><para>"PL_na" has been exterminated from the core
code, replaced by local STRLEN temporaries, or "*_nolen()" calls.
Either approach is faster than "PL_na", which is a pointer deference
into the interpreter structure under ithreads, and a global variable
otherwise.</para></item>
          <item><para>"Perl_mg_free()" used to leave freed memory
accessible via SvMAGIC() on the scalar. It now updates the linked list
to remove each piece of magic as it is freed.</para></item>
          <item><para>Under ithreads, the regex in "PL_reg_curpm" is
now reference counted. This eliminates a lot of hackish workarounds to
cope with it not being reference counted.</para></item>
          <item><para>"Perl_mg_magical()" would sometimes incorrectly
turn on "SvRMAGICAL()". This has been fixed.</para></item>
          <item><para>The *public* IV and NV flags are now not set if
the string value has trailing "garbage". This behaviour is consistent
with not setting the public IV or NV flags if the value is out of
range for the type.</para></item>
          <item><para>SV allocation tracing has been added to the
diagnostics enabled by "-Dm". The tracing can alternatively output via
the "PERL_MEM_LOG" mechanism, if that was enabled when the perl binary
was compiled.</para></item>
          <item><para>Uses of "Nullav", "Nullcv", "Nullhv", "Nullop",
"Nullsv" etc have been replaced by "NULL" in the core code, and
non-dual-life modules, as "NULL" is clearer to those unfamiliar with
the core code.</para></item>
          <item><para>A macro MUTABLE_PTR(p) has been added, which on
(non-pedantic) gcc will not cast away "const", returning a "void *".
Macros "MUTABLE_SV(av)", "MUTABLE_SV(cv)" etc build on this, casting
to "AV *" etc without casting away "const". This allows proper
compile-time auditing of "const" correctness in the core, and helped
picked up some errors (now fixed).</para></item>
          <item><para>Macros "mPUSHs()" and "mXPUSHs()" have been
added, for pushing SVs on the stack and mortalizing
them.</para></item>
          <item><para>Use of the private structure "mro_meta" has
changed slightly. Nothing outside the core should be accessing this
directly anyway.</para></item>
          <item><para>A new tool, "Porting/expand-macro.pl" has been
added, that allows you to view how a C preprocessor macro would be
expanded when compiled. This is handy when trying to decode the macro
hell that is the perl guts.</para></item>
        </items>

        <items name="New Tests">
          <item><para>Many modules updated from CPAN incorporate new
tests.</para></item>
          <item><para>Several tests that have the potential to hang
forever if they fail now incorporate a "watchdog" functionality that
will kill them after a timeout, which helps ensure that "make test"
and "make test_harness" run to completion automatically.</para></item>
          <item><para>Some core-specific tests have been
added:</para>
          <unorderedlist>
            <item><para>t/comp/retainedlines.t: Check that the
debugger can retain source lines from "eval".</para></item>
            <item><para>t/io/perlio_fail.t: Check that bad layers
fail.</para></item>
            <item><para>t/io/perlio_leaks.t: Check that PerlIO
layers are not leaking.</para></item>
            <item><para>t/io/perlio_open.t: Check that certain
special forms of open work.</para></item>
            <item><para>t/io/perlio.t: General PerlIO
tests.</para></item>
            <item><para>t/io/pvbm.t: Check that there is no
unexpected interaction between the internal types "PVBM" and
"PVGV".</para></item>
            <item><para>t/mro/package_aliases.t: Check that mro
works properly in the presence of aliased packages.</para></item>
            <item><para>t/op/dbm.t: Tests for "dbmopen" and
"dbmclose".</para></item>
            <item><para>t/op/index_thr.t: Tests for the interaction
of "index" and threads.</para></item>
            <item><para>t/op/pat_thr.t Tests for the interaction of
esoteric patterns and threads.</para></item>
            <item><para>t/op/qr_gc.t: Test that "qr" doesn't
leak.</para></item>
            <item><para>t/op/reg_email_thr.t: Tests for the
interaction of regex recursion and threads.</para></item>
            <item><para>t/op/regexp_qr_embed_thr.t: Tests for the
interaction of patterns with embedded "qr//" and
threads.</para></item>
            <item><para>t/op/regexp_unicode_prop.t: Tests for
Unicode properties in regular expressions.</para></item>
            <item><para>t/op/regexp_unicode_prop_thr.t: Tests for
the interaction of Unicode properties and threads.</para></item>
            <item><para>t/op/reg_nc_tie.t: Test the tied methods of
"Tie::Hash::NamedCapture".</para></item>
            <item><para>t/op/reg_posixcc.t: Check that POSIX
character classes behave consistently.</para></item>
            <item><para>t/op/re.t: Check that exportable "re"
functions in universal.c work.</para></item>
            <item><para>t/op/setpgrpstack.t: Check that "setpgrp"
works.</para></item>
            <item><para>t/op/substr_thr.t: Tests for the interaction
of "substr" and threads.</para></item>
            <item><para>t/op/upgrade.t: Check that upgrading and
assigning scalars works.</para></item>
            <item><para>t/uni/lex_utf8.t: Check that Unicode in the
lexer works.</para></item>
            <item><para>t/uni/tie.t: Check that Unicode and "tie"
work.</para></item>
          </unorderedlist></item>
        </items>

        <items name="Known Problems">
          <item><para>This is a list of some significant unfixed bugs,
which are regressions from either 5.10.0 or 5.8.x.</para></item>
          <item><para>"List::Util::first" misbehaves in the presence
of a lexical $_ (typically introduced by "my $_" or implicitly by
"given"). The variable which gets set for each iteration is the
package variable $_, not the lexical $_ [RT #67694].</para></item>
          <item><para>A similar issue may occur in other modules that
provide functions which take a block as their first argument,
like</para>
          <screen>
foo { ... $_ ...} list
          </screen></item>
          <item><para>The "charnames" pragma may generate a run-time
error when a regex is interpolated [RT #56444]:</para>
          <screen>
use charnames ':full';
my $r1 = qr/\N{THAI CHARACTER SARA I}/;
"foo" =~ $r1;    # okay
"foo" =~ /$r1+/; # runtime error
          </screen>
          <para>A workaround is to generate the character outside of
the regex:</para>
          <screen>
my $a = "\N{THAI CHARACTER SARA I}";
my $r1 = qr/$a/;
          </screen></item>
          <item><para>Some regexes may run much more slowly when run
in a child thread compared with the thread the pattern was compiled
into [RT #55600].</para></item>
        </items>

        <items name="Deprecations">
          <item><para>"Switch" is buggy and should be avoided. From
perl 5.11.0 onwards, it is intended that any use of the core version
of this module will emit a warning, and that the module will
eventually be removed from the core (probably in perl 5.14.0). See
"Switch statements" in perlsyn for its replacement.</para></item>
          <item><para>"suidperl" will be removed in 5.12.0. This
provides a mechanism to emulate setuid permission bits on systems that
don't support it properly.</para></item>
        </items>
      </change>

      <change from="5.8.8" to="5.10.0">
        <items name="Core Enhancements">
          <item><para>The "feature" pragma</para>
          <para>The "feature" pragma is used to enable new syntax that
would break Perl's backwards-compatibility with older releases of the
language. It's a lexical pragma, like "strict" or "warnings".</para>
          <para>Currently the following new features are available:
"switch" (adds a switch statement), "say" (adds a "say" built-in
function), and "state" (adds a "state" keyword for declaring "static"
variables). Those features are described in their own sections of this
document.</para>
          <para>The "feature" pragma is also implicitly loaded when
you require a minimal perl version (with the "use VERSION" construct)
greater than, or equal to, 5.9.5. See feature for details.</para></item>
          <item><para>New -E command-line switch</para>
          <para> -E is equivalent to -e, but it implicitly enables
all optional features (like "use feature ":5.10"").</para></item>
          <item><para>Defined-or operator</para>
          <para> A new operator "//" (defined-or) has been
implemented. The following expression: <command>$a // $b</command> is
merely equivalent to <command>defined $a ? $a : $b</command> and the
statement <command>$c //= $d;</command> can now be used instead of
<command>$c = $d unless defined $c;</command></para>
          <para>The "//" operator has the same precedence and
associativity as "||". Special care has been taken to ensure that this
operator Do What You Mean while not breaking old code, but some edge
cases involving the empty regular expression may now parse
differently. See perlop for details.</para></item>
          <item><para>Switch and Smart Match operator</para>
          <para>Perl 5 now has a switch statement. It's available
when "use feature 'switch'" is in effect. This feature introduces
three new keywords, "given", "when", and "default":</para>
          <screen>
given ($foo) {
  when (/^abc/) { $abc = 1; }
  when (/^def/) { $def = 1; }
  when (/^xyz/) { $xyz = 1; }
  default { $nothing = 1; }
}
          </screen>
          <para>A more complete description of how Perl matches the
switch variable against the "when" conditions is given in "Switch
statements" in perlsyn.</para>
          <para>This kind of match is called *smart match*, and it's
also possible to use it outside of switch statements, via the new "~~"
operator. See "Smart matching in detail" in perlsyn.</para></item>
        </items>

        <items name="Regular expressions">
          <item><para>Recursive Patterns</para>
          <para>It is now possible to write recursive patterns
without using the "(??{})" construct. This new way is more efficient,
and in many cases easier to read.</para>
          <para>Each capturing parenthesis can now be treated as an
independent pattern that can be entered by using the "(?PARNO)" syntax
("PARNO" standing for "parenthesis number"). For example, the
following pattern will match nested balanced angle brackets:</para>
          <screen>
/
 ^                      # start of line
 (                      # start capture buffer 1
    &lt;                   #   match an opening angle bracket
    (?:                 #   match one of:
        (?&gt;             #     don't backtrack over the inside of this group
            [^&lt;&gt;]+      #       one or more non angle brackets
        )               #     end non backtracking group
    |                   #     ... or ...
        (?1)            #     recurse to bracket 1 and try it again
    )*                  #   0 or more times.
    &gt;                   #   match a closing angle bracket
 )                      # end capture buffer one
 $                      # end of line
/x
          </screen>
          <para>PCRE users should note that Perl's recursive regex
feature allows backtracking into a recursed pattern, whereas in PCRE
the recursion is atomic or "possessive" in nature. As in the example
above, you can add (?&gt;) to control this selectively. (Yves
Orton)</para></item>
          <item><para>Named Capture Buffers</para>
          <para>It is now possible to name capturing parenthesis in
a pattern and refer to the captured contents by name. The naming
syntax is <command>"(?&lt;NAME&gt;....)"</command>. It's possible to
backreference to a named buffer with the
<command>"\k&lt;NAME&gt;"</command> syntax. In code, the new magical
hashes "%+" and "%-" can be used to access the contents of the
capture buffers.</para>
          <para>Thus, to replace all doubled chars with a single
py, one could write</para>
          <screen>
s/(?&lt;letter&gt;.)\k&lt;letter&gt;/$+{letter}/g
          </screen>
          <para>Only buffers with defined contents will be "visible"
in the "%+" hash, so it's possible to do something like</para>
          <screen>
foreach my $name (keys %+) {
  print "content of buffer '$name' is $+{$name}\n";
}
          </screen>
          <para>The "%-" hash is a bit more complete, since it will
contain array refs holding values from all capture buffers similarly
named, if there should be many of them.</para>
          <para>"%+" and "%-" are implemented as tied hashes through
e new module "Tie::Hash::NamedCapture".</para>
          <para>Users exposed to the .NET regex engine will find
that the perl implementation differs in that the numerical ordering of
the buffers is sequential, and not "unnamed first, then named". Thus
in the pattern</para>
          <screen>
/(A)(?&lt;B&gt;B)(C)(?&lt;D&gt;D)/
          </screen>
          <para>$1 will be 'A', $2 will be 'B', $3 will be 'C' and
$4 will be 'D' and not $1 is 'A', $2 is 'C' and $3 is 'B' and $4 is
'D' that a .NET programmer would expect. This is considered a feature.
:-)</para></item>
          <item><para>Possessive Quantifiers</para>
          <para>Perl now supports the "possessive quantifier" syntax
of the "atomic match" pattern. Basically a possessive quantifier
matches as much as it can and never gives any back. Thus it can be
used to control backtracking. The syntax is similar to non-greedy
matching, except instead of using a '?' as the modifier the '+' is
used. Thus "?+", "*+", "++", "{min,max}+" are now legal
quantifiers.</para></item>
          <item><para>Backtracking control verbs</para>
          <para>The regex engine now supports a number of
special-purpose backtrack control verbs: (*THEN), (*PRUNE), (*MARK),
(*SKIP), (*COMMIT), (*FAIL) and (*ACCEPT). See perlre for their
descriptions.</para></item>
          <item><para>Relative backreferences</para>
          <para>A new syntax "\g{N}" or "\gN" where "N" is a decimal
integer allows a safer form of back-reference notation as well as
allowing relative backreferences. This should make it easier to
generate and embed patterns that contain backreferences. See "Capture
buffers" in perlre.</para></item>
          <item><para>"\K" escape</para>
          <para>The functionality of Regexp::Keep has been added to
the core. In regular expressions you can now use the special escape
"\K" as a way to do something like floating length positive
lookbehind. It is also useful in substitutions like:</para>
          <screen>
s/(foo)bar/$1/g
          </screen>
          <para>that can now be converted to</para>
          <screen>
s/foo\Kbar//g
          </screen>
          <para>which is much more efficient.</para></item>
          <item><para>Vertical and horizontal whitespace, and
linebreak</para>
          <para>Regular expressions now recognize the "\v" and "\h"
escapes that match vertical and horizontal whitespace, respectively.
"\V" and "\H" logically match their complements.</para>
          <para>"\R" matches a generic linebreak, that is, vertical
whitespace, plus the multi-character sequence
"\x0D\x0A".</para></item>
        </items>

        <items name="say()">
          <item><para>say() is a new built-in, only available when
"use feature 'say'" is in effect, that is similar to print(), but that
implicitly appends a newline to the printed string. See "say" in
perlfunc.</para></item>
        </items>

        <items name="Lexical $_">
          <item><para>The default variable $_ can now be lexicalized,
by declaring it like any other lexical variable, with a
simple <command>my $_;</command></para></item>
          <item><para>The operations that default on $_ will use the
lexically-scoped version of $_ when it exists, instead of the global
$_.</para></item>
          <item><para>In a "map" or a "grep" block, if $_ was
previously my'ed, then the $_ inside the block is lexical as well (and
scoped to the block).</para></item>
          <item><para>In a scope where $_ has been lexicalized, you
can still have access to the global version of $_ by using $::_, or,
more simply, by overriding the lexical declaration with "our
$_".</para></item>
        </items>

        <items name="The _ prototype">
          <item><para>A new prototype character has been added. "_" is
equivalent to "$" but defaults to $_ if the corresponding argument
isn't supplied (both "$" and "_" denote a scalar). Due to the optional
nature of the argument, you can only use it at the end of a prototype,
or before a semicolon.</para></item>
          <item><para>This has a small incompatible consequence: the
prototype() function has been adjusted to return "_" for some
built-ins in appropriate cases (for example,
"prototype('CORE::rmdir')").</para></item>
        </items>

        <items name="UNITCHECK blocks">
          <item><para>"UNITCHECK", a new special code block has been
introduced, in addition to "BEGIN", "CHECK", "INIT" and
"END".</para></item>
          <item><para>"CHECK" and "INIT" blocks, while useful for some
specialized purposes, are always executed at the transition between
the compilation and the execution of the main program, and thus are
useless whenever code is loaded at runtime. On the other hand,
"UNITCHECK" blocks are executed just after the unit which defined them
has been compiled. See perlmod for more information.</para></item>
        </items>

        <items name="New Pragma, mro">
          <item><para>A new pragma, "mro" (for Method Resolution
Order) has been added. It permits to switch, on a per-class basis, the
algorithm that perl uses to find inherited methods in case of a
multiple inheritance hierarchy. The default MRO hasn't changed (DFS,
for Depth First Search). Another MRO is available: the C3 algorithm.
See mro for more information.</para></item>
          <item><para>Note that, due to changes in the implementation
of class hierarchy search, code that used to undef the *ISA glob will
most probably break. Anyway, undef'ing *ISA had the side-effect of
removing the magic on the @ISA array and should not have been done in
the first place. Also, the cache *::ISA::CACHE:: no longer exists; to
force reset the @ISA cache, you now need to use the "mro" API, or more
simply to assign to @ISA (e.g. with "@ISA = @ISA").</para></item>
        </items>

        <items name="readdir() may return a short filename on Windows">
          <item><para>The readdir() function may return a "short
filename" when the long filename contains characters outside the ANSI
codepage. Similarly Cwd::cwd() may return a short directory name, and
glob() may return short names as well. On the NTFS file system these
short names can always be represented in the ANSI codepage. This will
not be true for all other file system drivers; e.g. the FAT filesystem
stores short filenames in the OEM codepage, so some files on FAT
volumes remain unaccessible through the ANSI APIs.</para></item>
          <item><para>Similarly, $^X, @INC, and $ENV{PATH} are
preprocessed at startup to make sure all paths are valid in the ANSI
codepage (if possible).</para></item>
          <item><para>The Win32::GetLongPathName() function now
returns the UTF-8 encoded correct long file name instead of using
replacement characters to force the name into the ANSI codepage. The
new Win32::GetANSIPathName() function can be used to turn a long
pathname into a short one only if the long one cannot be represented
in the ANSI codepage.</para></item>
          <item><para>Many other functions in the "Win32" module have
been improved to accept UTF-8 encoded arguments. Please see Win32 for
details.</para></item>
        </items>

        <items name="readpipe() is now overridable">
          <item><para>The built-in function readpipe() is now
overridable. Overriding it permits also to override its operator
counterpart, "qx//" (a.k.a. ``). Moreover, it now defaults to $_ if no
argument is provided.</para></item>
        </items>

        <items name="Default argument for readline()">
          <item><para>readline() now defaults to *ARGV if no argument
is provided.</para></item>
        </items>

        <items name="state() variables">
          <item><para>A new class of variables has been introduced.
State variables are similar to "my" variables, but are declared with
the "state" keyword in place of "my". They're visible only in their
lexical scope, but their value is persistent: unlike "my" variables,
they're not undefined at scope entry, but retain their previous
value.</para></item>
          <item><para>To use state variables, one needs to enable them
by using <command>use feature 'state';</command> or by using the "-E"
command-line switch in one-liners. See "Persistent Private Variables"
in perlsub.</para></item>
        </items>

        <items name="Stacked filetest operators">
          <item><para>As a new form of syntactic sugar, it's now
possible to stack up filetest operators. You can now write "-f -w -x
$file" in a row to mean "-x $file &amp;&amp; -w _ &amp;&amp; -f _".
See "-X" in perlfunc.</para></item>
        </items>

        <items name="UNIVERSAL::DOES()">
          <item><para>The "UNIVERSAL" class has a new method,
"DOES()". It has been added to solve semantic problems with the
"isa()" method. "isa()" checks for inheritance, while "DOES()" has
been designed to be overridden when module authors use other types of
relations between classes (in addition to inheritance).</para></item>
          <item><para>See "$obj-&gt;DOES( ROLE )" in
UNIVERSAL.</para></item>
        </items>

        <items name="Formats">
          <item><para>Formats were improved in several ways. A new
field, "^*", can be used for variable-width, one-line-at-a-time text.
Null characters are now handled correctly in picture lines. Using "@#"
and "~~" together will now produce a compile-time error, as those
format fields are incompatible. perlform has been improved, and
miscellaneous bugs fixed.</para></item>
        </items>

        <items name="Byte-order modifiers for pack() and unpack()">
          <item><para>There are two new byte-order modifiers, "&gt;"
(big-endian) and "&lt;" (little-endian), that can be appended to most
pack() and unpack() template characters and groups to force a certain
byte-order for that type or group. See "pack" in perlfunc and
perlpacktut for details.</para></item>
        </items>

        <items name="no VERSION">
          <item><para>You can now use "no" followed by a version
number to specify that you want to use a version of perl older than
the specified one.</para></item>
        </items>

        <items name="chdir, chmod and chown on filehandles">
          <item><para>"chdir", "chmod" and "chown" can now work on
filehandles as well as filenames, if the system supports respectively
"fchdir", "fchmod" and "fchown".</para></item>
        </items>

        <items name="OS groups">
          <item><para>$( and $) now return groups in the order where
the OS returns them. This wasn't previously the case.</para></item>
        </items>

        <items name="Recursive sort subs">
          <item><para>You can now use recursive subroutines with
sort()</para></item>
        </items>

        <items name="Exceptions in constant folding">
          <item><para>The constant folding routine is now wrapped in
an exception handler, and if folding throws an exception (such as
attempting to evaluate 0/0), perl now retains the current optree,
rather than aborting the whole program. Without this change, programs
would not compile if they had expressions that happened to generate
exceptions, even though those expressions were in code that could
never be reached at runtime.</para></item>
        </items>

        <items name="Source filters in @INC">
          <item><para>It's possible to enhance the mechanism of
subroutine hooks in @INC by adding a source filter on top of the
filehandle opened and returned by the hook. This feature was planned a
long time ago, but wasn't quite working until now. See "require" in
perlfunc for details.</para></item>
        </items>

        <items name="New internal variables">
          <item><para><command>"${^RE_DEBUG_FLAGS}"</command> This
variable controls what debug flags are in effect for the regular
expression engine when running under "use re "debug"". See re for
details.</para></item>
          <item><para><command>"${^CHILD_ERROR_NATIVE}"</command> This
variable gives the native status returned by the last pipe close,
backtick command, successful call to wait() or waitpid(), or from the
system() operator. See perlvar for details.</para></item>
          <item><para><command>"${^RE_TRIE_MAXBUF}"</command> See
"Trie optimisation of literal string alternations".</para></item>
          <item><para><command>"${^WIN32_SLOPPY_STAT}"</command> See
"Sloppy stat on Windows".</para></item>
        </items>

        <items name="Miscellaneous">
          <item><para>"unpack()" now defaults to unpacking the $_
variable.</para></item>
          <item><para>"mkdir()" without arguments now defaults to
$_.</para></item>
          <item><para>The internal dump output has been improved, so
that non-printable characters such as newline and backspace are output
in "\x" notation, rather than octal.</para></item>
          <item><para>The -C option can no longer be used on the "#!"
line. It wasn't working there anyway, since the standard streams are
already set up at this point in the execution of the perl interpreter.
You can use binmode() instead to get the desired
behaviour.</para></item>
        </items>

        <items name="UCD 5.0.0">
          <item><para>The copy of the Unicode Character Database
included in Perl 5 has been updated to version 5.0.0.</para></item>
        </items>

        <items name="MAD">
          <item><para>MAD, which stands for *Miscellaneous Attribute
Decoration*, is a still-in-development work leading to a Perl 5 to
Perl 6 converter. To enable it, it's necessary to pass the argument
"-Dmad" to Configure. The obtained perl isn't binary compatible with a
regular perl 5.10, and has space and speed penalties; moreover not all
regression tests still pass with it.</para></item>
        </items>

        <items name="kill() on Windows">
          <item><para>On Windows platforms, "kill(-9, $pid)" now kills
a process tree. (On UNIX, this delivers the signal to all processes in
the same process group.)</para></item>
        </items>

        <items name="Incompatible Changes">
          <item><para>Packing and UTF-8 strings</para>
          <para>The semantics of pack() and unpack() regarding
UTF-8-encoded data has been changed. Processing is now by default
character per character instead of byte per byte on the underlying
encoding. Notably, code that used things like "pack("a*", $string)" to
see through the encoding of string will now simply get back the
original $string. Packed strings can also get upgraded during
processing when you store upgraded characters. You can get the old
behaviour by using "use bytes".</para>
          <para>To be consistent with pack(), the "C0" in unpack()
templates indicates that the data is to be processed in character
mode, i.e. character by character; on the contrary, "U0" in unpack()
indicates UTF-8 mode, where the packed string is processed in its
UTF-8-encoded Unicode form on a byte by byte basis. This is reversed
with regard to perl 5.8.X, but now consistent between pack() and
unpack().</para>
          <para>Moreover, "C0" and "U0" can also be used in pack()
templates to specify respectively character and byte modes.</para>
          <para>"C0" and "U0" in the middle of a pack or unpack
format now switch to the specified encoding mode, honoring parens
grouping. Previously, parens were ignored.</para>
          <para>Also, there is a new pack() character format, "W",
which is intended to replace the old "C". "C" is kept for unsigned
chars coded as bytes in the strings internal representation. "W"
represents unsigned (logical) character values, which can be greater
than 255. It is therefore more robust when dealing with potentially
UTF-8-encoded data (as "C" will wrap values outside the range 0..255,
and not respect the string encoding).</para>
          <para>In practice, that means that pack formats are now
encoding-neutral, except "C".</para>
          <para>For consistency, "A" in unpack() format now trims
all Unicode whitespace from the end of the string. Before perl 5.9.2,
it used to strip only the classical ASCII space
characters.</para></item>
          <item><para>Byte/character count feature in
unpack()</para>
          <para>A new unpack() template character, ".", returns the
number of bytes or characters (depending on the selected encoding
mode, see above) read so far.</para></item>
          <item><para>The $* and $# variables have been
removed</para>
          <para>$*, which was deprecated in favor of the "/s" and
"/m" regexp modifiers, has been removed.</para>
          <para>The deprecated $# variable (output format for
numbers) has been removed.</para>
          <para>Two new severe warnings, "$#/$* is no longer
supported", have been added.</para></item>
          <item><para>substr() lvalues are no longer
fixed-length</para>
          <para>The lvalues returned by the three argument form of
substr() used to be a "fixed length window" on the original string. In
some cases this could cause surprising action at distance or other
undefined behaviour. Now the length of the window adjusts itself to
the length of the string assigned to it.</para></item>
          <item><para>Parsing of "-f _"</para>
          <para>The identifier "_" is now forced to be a bareword
ter a filetest operator. This solves a number of misparsing issues
when a global "_" subroutine is defined.</para></item>
          <item><para>":unique"</para>
          <para>The ":unique" attribute has been made a no-op, since
its current implementation was fundamentally flawed and not
threadsafe.</para></item>
          <item><para>Effect of pragmas in eval</para>
          <para>The compile-time value of the "%^H" hint variable
can now propagate into eval("")uated code. This makes it more useful
to implement lexical pragmas.</para>
          <para>As a side-effect of this, the overloaded-ness of
constants now propagates into eval("").</para></item>
          <item><para>chdir FOO</para>
          <para>A bareword argument to chdir() is now recognized as
a file handle. Earlier releases interpreted the bareword as a
directory name.</para></item>
          <item><para>Handling of .pmc files</para>
          <para>An old feature of perl was that before "require" or
"use" look for a file with a .pm extension, they will first look for a
similar filename with a .pmc extension. If this file is found, it will
be loaded in place of any potentially existing file ending in a .pm
extension.</para>
          <para>Previously, .pmc files were loaded only if more
recent than the matching .pm file. Starting with 5.9.4, they'll be
always loaded if they exist.</para></item>
          <item><para>$^V is now a "version" object instead of a
v-string</para>
          <para>$^V can still be used with the %vd format in printf,
but any character-level operations will now access the string
representation of the "version" object and not the ordinals of a
v-string. Expressions like "substr($^V, 0, 2)" or "split //, $^V" no
longer work and must be rewritten.</para></item>
          <item><para>@- and @+ in patterns</para>
          <para>The special arrays "@-" and "@+" are no longer
interpolated in regular expressions.</para></item>
          <item><para>$AUTOLOAD can now be tainted</para>
          <para>If you call a subroutine by a tainted name, and if
it defers to an AUTOLOAD function, then $AUTOLOAD will be (correctly)
tainted.</para></item>
          <item><para>Tainting and printf</para>
          <para>When perl is run under taint mode, "printf()" and
"sprintf()" will now reject any tainted format argument.</para></item>
          <item><para>undef and signal handlers</para>
          <para>Undefining or deleting a signal handler via "undef
$SIG{FOO}" is now</para></item>
          <item><para>strictures and dereferencing in
defined()</para>
          <para>"use strict 'refs'" was ignoring taking a hard
reference in an argument to defined(), as in :</para>
          <screen>
use strict 'refs';
my $x = 'foo';
if (defined $$x) {...}
          </screen>
          <para>This now correctly produces the run-time error
"Can't use string as a SCALAR ref while "strict refs" in use".</para>
          <para>"defined @$foo" and "defined %$bar" are now also
subject to "strict 'refs'" (that is, $foo and $bar shall be proper
references there.) ("defined(@foo)" and "defined(%bar)" are
discouraged constructs anyway.)</para></item>
          <item><para>"(?p{})" has been removed</para>
          <para>The regular expression construct "(?p{})", which was
deprecated in perl 5.8, has been removed. Use "(??{})"
instead.</para></item>
          <item><para>Pseudo-hashes have been removed</para>
          <para>Support for pseudo-hashes has been removed from Perl
5.9. (The "fields" pragma remains here, but uses an alternate
implementation.)</para></item>
          <item><para>Removal of the bytecode compiler and of
perlcc</para>
          <para>"perlcc", the byteloader and the supporting modules
(B::C, B::CC, B::Bytecode, etc.) are no longer distributed with the
perl sources. Those experimental tools have never worked reliably,
and, due to the lack of volunteers to keep them in line with the perl
interpreter developments, it was decided to remove them instead of
shipping a broken version of those. The last version of those modules
can be found with perl 5.9.4.</para>
          <para>However the B compiler framework stays supported in
the perl core, as with the more useful modules it has permitted (among
others, B::Deparse and B::Concise).</para></item>
          <item><para>Removal of the JPL</para></item>
          <item><para>The JPL (Java-Perl Lingo) has been removed from
the perl sources tarball.</para></item>
          <item><para>Recursive inheritance detected
earlier</para>
          <para>Perl will now immediately throw an exception if you
modify any package's @ISA in such a way that it would cause recursive
inheritance.</para>
          <para>Previously, the exception would not occur until Perl
attempted to make use of the recursive inheritance while resolving a
method or doing a "$foo-&gt;isa($bar)" lookup.</para></item>
        </items>

        <items name="Modules and Pragmata">
          <item><para>Upgrading individual core modules</para>
          <para>Even more core modules are now also available
separately through the CPAN. If you wish to update one of these
modules, you don't need to wait for a new perl release. From within
the cpan shell, running the 'r' command will report on modules with
upgrades available. See "perldoc CPAN" for more
information.</para></item>
          <item><para>Pragmata Changes</para>
          <unorderedlist>
            <item><para>"feature" - The new pragma "feature" is used
to enable new features that might break old code. See "The "feature"
pragma" above.</para></item>
            <item><para>"mro" - This new pragma enables to change
the algorithm used to resolve inherited methods. See "New Pragma,
"mro"" above.</para></item>
            <item><para>Scoping of the "sort" pragma - The "sort"
pragma is now lexically scoped. Its effect used to be
global.</para></item>
            <item><para>Scoping of "bignum", "bigint", "bigrat" -
The three numeric pragmas "bignum", "bigint" and "bigrat" are now
lexically scoped.</para></item>
            <item><para>"base" - The "base" pragma now warns if a
class tries to inherit from itself.</para></item>
            <item><para>"strict" and "warnings" - "strict" and
"warnings" will now complain loudly if they are loaded via incorrect
casing (as in "use Strict;").</para></item>
            <item><para>"version" - The "version" module provides
support for version objects.</para></item>
            <item><para>"warnings" - The "warnings" pragma doesn't
load "Carp" anymore. That means that code that used "Carp" routines
without having loaded it at compile time might need to be adjusted;
typically, the following (faulty) code won't work anymore, and will
require parentheses to be added after the function name:</para>
            <screen>
use warnings;
require Carp;
Carp::confess 'argh';
            </screen></item>
            <item><para>"less" - "less" now does something useful
(or at least it tries to). In fact, it has been turned into a lexical
pragma. So, in your modules, you can now test whether your users have
requested to use less CPU, or less memory, less magic, or maybe even
less fat. See less for more.</para></item>
          </unorderedlist></item>
          <item><para>New modules</para>
          <unorderedlist>
            <item><para>"encoding::warnings", is a module to emit
warnings whenever an ASCII character string containing high-bit bytes
is implicitly converted into UTF-8. It's a lexical pragma since Perl
5.9.4; on older perls, its effect is global.</para></item>
            <item><para>"Module::CoreList", is a small handy module
that tells you what versions of core modules ship with any versions of
Perl 5. It comes with a command-line frontend,
"corelist".</para></item>
            <item><para>"Math::BigInt::FastCalc" is an XS-enabled,
and thus faster, version of "Math::BigInt::Calc".</para></item>
            <item><para>"Compress::Zlib" is an interface to the zlib
compression library. It comes with a bundled version of zlib, so
having a working zlib is not a prerequisite to install it. It's used
by "Archive::Tar" (see below).</para></item>
            <item><para>"IO::Zlib" is an "IO::"-style interface to
"Compress::Zlib".</para></item>
            <item><para>"Archive::Tar" is a module to manipulate
"tar" archives.</para></item>
            <item><para>"Digest::SHA" is a module used to calculate
many types of SHA digests, has been included for SHA support in the
CPAN module.</para></item>
            <item><para>"ExtUtils::CBuilder" and "ExtUtils::ParseXS"
have been added.</para></item>
            <item><para>"Hash::Util::FieldHash", has been added.
This module provides support for *field hashes*: hashes that maintain
an association of a reference with a value, in a thread-safe
garbage-collected way. Such hashes are useful to implement inside-out
objects.</para></item>
            <item><para>"Module::Build", has been added. It's an
alternative to "ExtUtils::MakeMaker" to build and install perl
modules.</para></item>
            <item><para>"Module::Load", has been added. It provides
a single interface to load Perl modules and .pl files.</para></item>
            <item><para>"Module::Loaded", has been added. It's used
to mark modules as loaded or unloaded.</para></item>
            <item><para>"Package::Constants", has been added. It's a
simple helper to list all constants declared in a given
package.</para></item>
            <item><para>"Win32API::File", has been added (for
Windows builds). This module provides low-level access to Win32 system
API calls for files/dirs.</para></item>
            <item><para>"Locale::Maketext::Simple", needed by
CPANPLUS, is a simple wrapper around "Locale::Maketext::Lexicon". Note
that "Locale::Maketext::Lexicon" isn't included in the perl core; the
behaviour of "Locale::Maketext::Simple" gracefully degrades when the
later isn't present.</para></item>
            <item><para>"Params::Check" implements a generic input
parsing/checking mechanism. It is used by CPANPLUS.</para></item>
            <item><para>"Term::UI" simplifies the task to ask
questions at a terminal prompt.</para></item>
            <item><para>"Object::Accessor" provides an interface to
create per-object accessors.</para></item>
            <item><para>"Module::Pluggable" is a simple framework to
create modules that accept pluggable sub-modules.</para></item>
            <item><para>"Module::Load::Conditional" provides simple
ways to query and possibly load installed modules.</para></item>
            <item><para>"Time::Piece" provides an object oriented
interface to time functions, overriding the built-ins localtime() and
gmtime().</para></item>
            <item><para>"IPC::Cmd" helps to find and run external
commands, possibly interactively.</para></item>
            <item><para>"File::Fetch" provide a simple generic file
fetching mechanism.</para></item>
            <item><para>"Log::Message" and "Log::Message::Simple"
are used by the log facility of "CPANPLUS".</para></item>
            <item><para>"Archive::Extract" is a generic archive
extraction mechanism for .tar (plain, gziped or bzipped) or .zip
files.</para></item>
            <item><para>"CPANPLUS" provides an API and a
command-line tool to access the CPAN mirrors.</para></item>
            <item><para>"Pod::Escapes" provides utilities that are
useful in decoding Pod E&lt;...&gt; sequences.</para></item>
            <item><para>"Pod::Simple" is now the backend for several
of the Pod-related modules included with Perl.</para></item>
          </unorderedlist></item>
          <item><para>Selected Changes to Core Modules</para>
          <unorderedlist>
            <item><para>"Attribute::Handlers" "Attribute::Handlers"
can now report the caller's file and line number.</para>
            <para>All interpreted attributes are now passed as
array references.</para></item>
            <item><para>"B::Lint" "B::Lint" is now based on
"Module::Pluggable", and so can be extended with
plugins.</para></item>
            <item><para>"B" It's now possible to access the lexical
pragma hints ("%^H") by using the method B::COP::hints_hash(). It
returns a "B::RHE" object, which in turn can be used to get a hash
reference via the method B::RHE::HASH().</para></item>
            <item><para>"Thread" As the old 5005thread threading
model has been removed, in favor of the ithreads scheme, the "Thread"
module is now a compatibility wrapper, to be used in old code only. It
has been removed from the default list of dynamic
extensions.</para></item>
          </unorderedlist></item>
        </items>

        <items name="Utility Changes">
          <item><para><command>perl -d</command> The Perl debugger can
now save all debugger commands for sourcing later; notably, it can now
emulate stepping backwards, by restarting and rerunning all bar the
last command from a saved command history.</para>
          <para>It can also display the parent inheritance tree
of a given class, with the "i" command.</para></item>
          <item><para><command>ptar</command> "ptar" is a pure perl
implementation of "tar" that comes with "Archive::Tar".</para></item>
          <item><para><command>ptardiff</command> "ptardiff" is a
small utility used to generate a diff between the contents of a tar
archive and a directory tree. Like "ptar", it comes with
"Archive::Tar".</para></item>
          <item><para><command>shasum</command> "shasum" is a
command-line utility, used to print or to check SHA digests. It comes
with the new "Digest::SHA" module.</para></item>
          <item><para><command>corelist</command> The "corelist"
utility is now installed with perl (see "New modules"
above).</para></item>
          <item><para><command>h2ph and h2xs</command> "h2ph" and
"h2xs" have been made more robust with regard to "modern" C
code.</para>
          <para>"h2xs" implements a new option "--use-xsloader" to
force use of "XSLoader" even in backwards compatible modules.</para>
          <para>The handling of authors' names that had apostrophes
has been fixed.</para>
          <para>Any enums with negative values are now
skipped.</para></item>
          <item><para><command>perlivp</command> "perlivp" no longer
checks for *.ph files by default. Use the new "-a" option to run *all*
tests.</para></item>
          <item><para><command>find2perl</command> "find2perl" now
assumes "-print" as a default action. Previously, it needed to be
specified explicitly.</para>
          <para>Several bugs have been fixed in "find2perl",
regarding "-exec" and "-eval". Also the options "-path", "-ipath" and
"-iname" have been added.</para></item>
          <item><para><command>config_data</command> "config_data" is
a new utility that comes with "Module::Build". It provides a
command-line interface to the configuration of Perl modules that use
Module::Build's framework of configurability (that is, *::ConfigData
modules that contain local configuration information for their parent
modules.)</para></item>
          <item><para><command>cpanp</command> "cpanp", the CPANPLUS
shell, has been added. ("cpanp-run-perl", a helper for CPANPLUS
operation, has been added too, but isn't intended for direct
use).</para></item>
          <item><para><command>cpan2dist</command> "cpan2dist" is a
new utility that comes with CPANPLUS. It's a tool to create
distributions (or packages) from CPAN modules.</para></item>
          <item><para><command>pod2html</command> The output of
"pod2html" has been enhanced to be more customizable via CSS. Some
formatting problems were also corrected.</para></item>
        </items>

        <items name="New Documentation">
          <item><para>The perlpragma manpage documents how to write
one's own lexical pragmas in pure Perl (something that is possible
starting with 5.9.4).</para></item>
          <item><para>The new perlglossary manpage is a glossary of
terms used in the Perl documentation, technical and otherwise, kindly
provided by O'Reilly Media, Inc.</para></item>
          <item><para>The perlreguts manpage, courtesy of Yves Orton,
describes internals of the Perl regular expression
engine.</para></item>
          <item><para>The perlreapi manpage describes the interface to
the perl interpreter used to write pluggable regular expression
engines.</para></item>
          <item><para>The perlunitut manpage is an tutorial for
programming with Unicode and string encodings in Perl.</para></item>
          <item><para>A new manual page, perlunifaq (the Perl Unicode
FAQ), has been added. </para></item>
          <item><para>The perlcommunity manpage gives a description of
the Perl community on the Internet and in real life.</para></item>
          <item><para>The CORE manual page documents the "CORE::"
namespace.</para></item>
          <item><para>The long-existing feature of "/(?{...})/"
regexps setting $_ and pos() is now documented.</para></item>
        </items>

        <items name="Performance Enhancements">
          <item><para>In-place sorting</para>
          <para>Sorting arrays in place ("@a = sort @a") is now
optimized to avoid making a temporary copy of the array.</para>
          <para>Likewise, "reverse sort ..." is now optimized to
sort in reverse, avoiding the generation of a temporary intermediate
list.</para></item>
          <item><para>Lexical array access</para>
          <para>Access to elements of lexical arrays via a numeric
constant between 0 and 255 is now faster. (This used to be only the
case for global arrays.)</para></item>
          <item><para>XS-assisted SWASHGET</para>
          <para>Some pure-perl code that perl was using to retrieve
Unicode properties and transliteration mappings has been reimplemented
in XS.</para></item>
          <item><para>Constant subroutines</para>
          <para>The interpreter internals now support a far more
memory efficient form of inlineable constants. Storing a reference to
a constant value in a symbol table is equivalent to a full typeglob
referencing a constant subroutine, but using about 400 bytes less
memory. This proxy constant subroutine is automatically upgraded to a
real typeglob with subroutine if necessary. The approach taken is
analogous to the existing space optimisation for subroutine stub
declarations, which are stored as plain scalars in place of the full
typeglob.</para>
          <para>Several of the core modules have been converted to
use this feature for their system dependent constants - as a result
"use POSIX;" now takes about 200K less memory.</para></item>
          <item><para>"PERL_DONT_CREATE_GVSV"</para>
          <para>The new compilation flag "PERL_DONT_CREATE_GVSV",
introduced as an option in perl 5.8.8, is turned on by default in perl
5.9.3. It prevents perl from creating an empty scalar with every new
typeglob. See perl589delta for details.</para></item>
          <item><para>Weak references are cheaper</para>
          <para>Weak reference creation is now *O(1)* rather than
*O(n)*, courtesy of Nicholas Clark. Weak reference deletion remains
*O(n)*, but if deletion only happens at program exit, it may be
skipped completely.</para></item>
          <item><para>sort() enhancements</para>
          <para>improvements to reduce the memory usage of "sort"
and to speed up some cases.</para></item>
          <item><para>Memory optimisations</para>
          <para>Several internal data structures (typeglobs, GVs,
CVs, formats) have been restructured to use less memory.</para></item>
          <item><para>UTF-8 cache optimisation</para></item>
          <item><para>The UTF-8 caching code is now more efficient,
and used more often.</para></item>
          <item><para>Sloppy stat on Windows</para>
          <para>On Windows, perl's stat() function normally opens
the file to determine the link count and update attributes that may
have been changed through hard links. Setting ${^WIN32_SLOPPY_STAT} to
a true value speeds up stat() by not performing this
operation.</para></item>
          <item><para>Regular expressions optimisations</para>
          <unorderedlist>
            <item><para>Engine de-recursivised - The regular
expression engine is no longer recursive, meaning that patterns that
used to overflow the stack will either die with useful explanations,
or run to completion, which, since they were able to blow the stack
before, will likely take a very long time to happen. If you were
experiencing the occasional stack overflow (or segfault) and upgrade
to discover that now perl apparently hangs instead, look for a
degenerate regex.</para></item>
            <item><para>Single char char-classes treated as literals -
Classes of a single character are now treated the same as if the
character had been used as a literal, meaning that code that uses
char-classes as an escaping mechanism will see a
speedup.</para></item>
            <item><para>Trie optimisation of literal string
alternations - Alternations, where possible, are optimised into more
efficient matching structures. String literal alternations are merged
into a trie and are matched simultaneously. This means that instead of
O(N) time for matching N alternations at a given point, the new code
performs in O(1) time. A new special variable, ${^RE_TRIE_MAXBUF}, has
been added to fine-tune this optimization.</para>
            <para>Note: Much code exists that works around perl's
historic poor performance on alternations. Often the tricks used to do
so will disable the new optimisations. Hopefully the utility modules
used for this purpose will be educated about these new
optimisations.</para></item>
            <item><para>Aho-Corasick start-point optimisation - When
a pattern starts with a trie-able alternation and there aren't better
optimisations available, the regex engine will use Aho-Corasick
matching to find the start point.</para></item>
          </unorderedlist></item>
        </items>

        <items name="Installation and Configuration Improvements">
          <item><para>Configuration improvements</para>
          <unorderedlist>
            <item><para>"-Dusesitecustomize" - Run-time
customization of @INC can be enabled by passing the
"-Dusesitecustomize" flag to Configure. When enabled, this will make
perl run $sitelibexp/sitecustomize.pl before anything else. This
script can then be set up to add additional entries to
@INC.</para></item>
            <item><para>Relocatable installations - There is now
Configure support for creating a relocatable perl tree. If you
Configure with "-Duserelocatableinc", then the paths in @INC (and
everything else in %Config) can be optionally located via the path of
the perl executable.</para>
            <para>That means that, if the string ".../" is found
at the start of any path, it's substituted with the directory of $^X.
So, the relocation can be configured on a per-directory basis,
although the default with "-Duserelocatableinc" is that everything is
relocated. The initial install is done to the original configured
prefix.</para></item>
            <item><para>strlcat() and strlcpy() - The configuration
process now detects whether strlcat() and strlcpy() are available.
When they are not available, perl's own version is used (from Russ
Allbery's public domain implementation). Various places in the perl
interpreter now use them.</para></item>
            <item><para>"d_pseudofork" and "d_printf_format_null" -
A new configuration variable, available as $Config{d_pseudofork} in
the Config module, has been added, to distinguish real fork() support
from fake pseudofork used on Windows platforms.</para>
            <para>A new configuration variable,
"d_printf_format_null", has been added, to see if printf-like formats
are allowed to be NULL.</para></item>
            <item><para>Configure help - "Configure -h" has been
extended with the most commonly used options.</para></item>
          </unorderedlist></item>
          <item><para>Compilation improvements</para>
          <unorderedlist>
            <item><para>Parallel build - Parallel makes should work
properly now, although there may still be problems if "make test" is
instructed to run in parallel.</para></item>
            <item><para>Borland's compilers support - Building with
Borland's compilers on Win32 should work more smoothly. In particular
Steve Hay has worked to side step many warnings emitted by their
compilers and at least one C compiler internal error.</para></item>
            <item><para>Static build on Windows - Perl extensions on
Windows now can be statically built into the Perl DLL.</para>
            <para>Also, it's now possible to build a
"perl-static.exe" that doesn't depend on the Perl DLL on Win32. See
the Win32 makefiles for details.</para></item>
            <item><para>ppport.h files - All ppport.h files in the
XS modules bundled with perl are now autogenerated at build
time.</para></item>
            <item><para>C++ compatibility - Efforts have been made
to make perl and the core XS modules compilable with various C++
compilers (although the situation is not perfect with some of the
compilers on some of the platforms tested.)</para></item>
            <item><para>Support for Microsoft 64-bit compiler -
Support for building perl with Microsoft's 64-bit compiler has been
improved</para></item>
            <item><para>Visual C++ - Perl can now be compiled with
Microsoft Visual C++ 2005 (and 2008 Beta 2).</para></item>
            <item><para>Win32 builds - All win32 builds (MS-Win,
WinCE) have been merged and cleaned up.</para></item>
          </unorderedlist></item>
          <item><para>Installation improvements</para>
          <para>Module auxiliary files - README files and changelogs
for CPAN modules bundled with perl are no longer
installed.</para></item>
          <item><para>New Or Improved Platforms</para>
          <unorderedlist>
            <item><para>Perl has been reported to work on Symbian
OS. See perlsymbian for more information.</para></item>
            <item><para>Many improvements have been made towards
making Perl work correctly on z/OS.</para></item>
            <item><para>Perl has been reported to work on
DragonFlyBSD and MidnightBSD.</para></item>
            <item><para>Perl has also been reported to work on
NexentaOS ( http://www.gnusolaris.org/ ).</para></item>
            <item><para>The VMS port has been improved. See
perlvms.</para></item>
            <item><para>Support for Cray XT4 Catamount/Qk has been
added. See hints/catamount.sh in the source code distribution for more
information.</para></item>
            <item><para>Vendor patches have been merged for RedHat
and Gentoo.</para></item>
            <item><para>DynaLoader::dl_unload_file() now works on
Windows.</para></item>
          </unorderedlist></item>
        </items>

        <items name="Selected Bug Fixes">
          <item><para>strictures in regexp-eval blocks - "strict"
wasn't in effect in regexp-eval blocks ("/(?{...})/").</para></item>
          <item><para>Calling CORE::require() - CORE::require() and
CORE::do() were always parsed as require() and do() when they were
overridden. This is now fixed.</para></item>
          <item><para>Subscripts of slices - You can now use a
non-arrowed form for chained subscripts after a list slice, like in:
<command>({foo =&gt; "bar"})[0]{foo}</command> This used to be a syntax
error; a "-&gt;" was required.</para></item>
          <item><para>"no warnings 'category'" works correctly with -w
- Previously when running with warnings enabled globally via "-w",
selective disabling of specific warning categories would actually turn
off all warnings. This is now fixed; now "no warnings 'io';" will only
turn off warnings in the "io" class. Previously it would erroneously
turn off all warnings.</para></item>
          <item><para>threads improvements - Several memory leaks in
ithreads were closed. Also, ithreads were made less
memory-intensive.</para>
          <para>"threads" is now a dual-life module, also available
on CPAN. It has been expanded in many ways. A kill() method is
available for thread signalling. One can get thread status, or the
list of running or joinable threads.</para>
          <para>A new "threads-&gt;exit()" method is used to exit from
the application (this is the default for the main thread) or from the
current thread only (this is the default for all other threads). On
the other hand, the exit() built-in now always causes the whole
application to terminate.</para></item>
          <item><para>chr() and negative values - chr() on a negative
value now gives "\x{FFFD}", the Unicode replacement character, unless
when the "bytes" pragma is in effect, where the low eight bits of the
value are used.</para></item>
          <item><para>PERL5SHELL and tainting - On Windows, the
PERL5SHELL environment variable is now checked for
taintedness.</para></item>
          <item><para>Using *FILE{IO} - "stat()" and "-X" filetests
now treat *FILE{IO} filehandles like *FILE filehandles.</para></item>
          <item><para>Overloading and reblessing - Overloading now
works when references are reblessed into another class. Internally,
this has been implemented by moving the flag for "overloading" from
the reference to the referent, which logically is where it should
always have been.</para></item>
          <item><para>Overloading and UTF-8 - A few bugs related to
UTF-8 handling with objects that have stringification overloaded have
been fixed.</para></item>
          <item><para>eval memory leaks fixed - Traditionally, "eval
'syntax error'" has leaked badly. Many (but not all) of these leaks
have now been eliminated or reduced.</para></item>
          <item><para>Random device on Windows - In previous versions,
perl would read the file /dev/urandom if it existed when seeding its
random number generator. That file is unlikely to exist on Windows,
and if it did would probably not contain appropriate data, so perl no
longer tries to read it on Windows.</para></item>
          <item><para>PERLIO_DEBUG - The "PERLIO_DEBUG" environment
variable no longer has any effect for setuid scripts and for scripts
run with -T.</para>
          <para>Moreover, with a thread-enabled perl, using
"PERLIO_DEBUG" could lead to an internal buffer overflow. This has
been fixed.</para></item>
          <item><para>PerlIO::scalar and read-only scalars -
PerlIO::scalar will now prevent writing to read-only scalars.
Moreover, seek() is now supported with PerlIO::scalar-based
filehandles, the underlying string being zero-filled as
needed.</para></item>
          <item><para>study() and UTF-8 - study() never worked for
UTF-8 strings, but could lead to false results. It's now a no-op on
UTF-8 data.</para></item>
          <item><para>Critical signals - The signals SIGILL, SIGBUS
and SIGSEGV are now always delivered in an "unsafe" manner (contrary
to other signals, that are deferred until the perl interpreter reaches
a reasonably stable state; see "Deferred Signals (Safe Signals)" in
perlipc).</para></item>
          <item><para>@INC-hook fix - When a module or a file is
loaded through an @INC-hook, and when this hook has set a filename
entry in %INC, __FILE__ is now set for this module accordingly to the
contents of that %INC entry.</para></item>
          <item><para>"-t" switch fix - The "-w" and "-t" switches can
now be used together without messing up which categories of warnings
are activated.</para></item>
          <item><para>Duping UTF-8 filehandles - Duping a filehandle
which has the ":utf8" PerlIO layer set will now properly carry that
layer on the duped filehandle.</para></item>
          <item><para>Localisation of hash elements - Localizing a
hash element whose key was given as a variable didn't work correctly
if the variable was changed while the local() was in effect (as in
"local $h{$x}; ++$x").</para></item>
        </items>

        <items name="New or Changed Diagnostics">
          <item><para>Use of uninitialized value - Perl will now try
to tell you the name of the variable (if any) that was
undefined.</para></item>
          <item><para>Deprecated use of my() in false conditional - A
new deprecation warning, *Deprecated use of my() in false
conditional*, has been added, to warn against the use of the dubious
and deprecated construct <command>my $x if 0;</command> See perldiag.
Use "state" variables instead.</para></item>
          <item><para>!=~ should be !~ - A new warning, "!=~ should be
!~", is emitted to prevent this misspelling of the non-matching
operator.</para></item>
          <item><para>Newline in left-justified string - The warning
*Newline in left-justified string* has been removed.</para></item>
          <item><para>Too late for "-T" option - The error *Too late
for "-T" option* has been reformulated to be more
descriptive.</para></item>
          <item><para>"%s" variable %s masks earlier declaration -
This warning is now emitted in more consistent cases; in short, when
one of the declarations involved is a "my" variable:</para>
          <screen>
my $x;   my $x;     # warns
my $x;  our $x;     # warns
our $x;  my $x;     # warns
          </screen>
          <para>On the other hand, the following:</para>
          <screen>
our $x; our $x;
          </screen>
          <para>now gives a ""our" variable %s redeclared"
warning.</para></item>
          <item><para>readdir()/closedir()/etc. attempted on invalid
dirhandle These new warnings are now emitted when a dirhandle is used
but is either closed or not really a dirhandle.</para></item>
          <item><para>Opening dirhandle/filehandle %s also as a
file/directory</para>
          <para>Two deprecation warnings have been added:</para>
          <screen>
Opening dirhandle %s also as a file
Opening filehandle %s also as a directory
          </screen></item>
          <item><para>Use of -P is deprecated - Perl's command-line
switch "-P" is now deprecated.</para></item>
          <item><para>v-string in use/require is non-portablen - Perl
will warn you against potential backwards compatibility problems with
the "use VERSION" syntax.</para></item>
          <item><para>perl -V - "perl -V" has several improvements,
making it more useable from shell scripts to get the value of
configuration variables. See perlrun for details.</para></item>
        </items>

        <items name="Changed Internals">
          <item><para>In general, the source code of perl has been
refactored, tidied up, and optimized in many places. Also, memory
management and allocation has been improved in several
points.</para></item>
          <item><para>When compiling the perl core with gcc, as many
gcc warning flags are turned on as is possible on the platform. (This
quest for cleanliness doesn't extend to XS code because we cannot
guarantee the tidiness of code we didn't write.) Similar strictness
flags have been added or tightened for various other C
compilers.</para></item>
          <item><para>Reordering of SVt_* constants: The relative
ordering of constants that define the various types of "SV" have
changed; in particular, "SVt_PVGV" has been moved before "SVt_PVLV",
"SVt_PVAV", "SVt_PVHV" and "SVt_PVCV". This is unlikely to make any
difference unless you have code that explicitly makes assumptions
about that ordering. (The inheritance hierarchy of "B::*" objects has
been changed to reflect this.)</para></item>
          <item><para>Elimination of SVt_PVBM: Related to this, the
internal type "SVt_PVBM" has been been removed. This dedicated type of
"SV" was used by the "index" operator and parts of the regexp engine
to facilitate fast Boyer-Moore matches. Its use internally has been
replaced by "SV"s of type "SVt_PVGV".</para></item>
          <item><para>New type SVt_BIND: A new type "SVt_BIND" has
been added, in readiness for the project to implement Perl 6 on 5.
There deliberately is no implementation yet, and they cannot yet be
created or destroyed.</para></item>
          <item><para>Removal of CPP symbols: The C preprocessor
symbols "PERL_PM_APIVERSION" and "PERL_XS_APIVERSION", which were
supposed to give the version number of the oldest perl
binary-compatible (resp. source-compatible) with the present one, were
not used, and sometimes had misleading values. They have been
removed.</para></item>
          <item><para>Less space is used by ops: The "BASEOP"
structure now uses less space. The "op_seq" field has been removed and
replaced by a single bit bit-field "op_opt". "op_type" is now 9 bits
long. (Consequently, the "B::OP" class doesn't provide an "seq" method
anymore.)</para></item>
          <item><para>New parser: perl's parser is now generated by
bison (it used to be generated by byacc.) As a result, it seems to be
a bit more robust. Also, improved lexer debugging output under
"-DT".</para></item>
          <item><para>Use of "const": many improvements to determine
which function parameters and local variables could actually be
declared "const" to the C compiler. new *_set macros and reworked the
core to use these rather than assigning to macros in LVALUE
context.</para></item>
          <item><para>Mathoms: A new file, mathoms.c, has been added.
It contains functions that are no longer used in the perl core, but
that remain available for binary or source compatibility reasons.
However, those functions will not be compiled in if you add
"-DNO_MATHOMS" in the compiler flags.</para></item>
          <item><para>"AvFLAGS" has been removed: The "AvFLAGS" macro
has been removed.</para></item>
          <item><para>"av_*" changes: The "av_*()" functions, used to
manipulate arrays, no longer accept null "AV*"
parameters.</para></item>
          <item><para>$^H and %^H: The implementation of the special
variables $^H and %^H has changed, to allow implementing lexical
pragmas in pure Perl.</para></item>
          <item><para>B:: modules inheritance changed: The inheritance
hierarchy of "B::" modules has changed; "B::NV" now inherits from
"B::SV" (it used to inherit from "B::IV").</para></item>
          <item><para>Anonymous hash and array constructors: The
anonymous hash and array constructors now take 1 op in the optree
instead of 3, now that pp_anonhash and pp_anonlist return a reference
to an hash/array when the op is flagged with
OPf_SPECIAL.</para></item>
        </items>

        <items name="Known Problems">
          <item><para>There's still a remaining problem in the
implementation of the lexical $_: it doesn't work inside "/(?{...})/"
blocks. (See the TODO test in t/op/mydef.t.)</para></item>
          <item><para>Stacked filetest operators won't work when the
"filetest" pragma is in effect, because they rely on the stat() buffer
"_" being populated, and filetest bypasses stat().</para></item>
          <item><para>UTF-8 problems The handling of Unicode still is
unclean in several places, where it's dependent on whether a string is
internally flagged as UTF-8. This will be made more consistent in perl
5.12, but that won't be possible without a certain amount of backwards
incompatibility.</para></item>
        </items>

        <items name="Platform Specific Problems">
          <item><para>When compiled with g++ and thread support on
Linux, it's reported that the $! stops working correctly. This is
related to the fact that the glibc provides two strerror_r(3)
implementation, and perl selects the wrong one.</para></item>
        </items>
      </change>

      <note type="compilation">
        <para>The ``<command>${SB_INSTALL_BASE}/perl5122p</command>''
directory is now searched before the built-in perl and vendor
modules.</para>
        <para>The default perl module search path directories
are:</para>
        <screen>
${SB_INSTALL_BASE}/perl5122p/lib/5.12.2/&lt;arch&gt;
${SB_INSTALL_BASE}/perl5122p/lib/5.12.2
${SB_INSTALL_BASE}/perl5122p/lib
${SB_INSTALL_PREFIX}/lib/5.12.2/&lt;arch&gt;
${SB_INSTALL_PREFIX}/lib/5.12.2
${SB_INSTALL_BASE}/perl5122p/vendor/lib/5.12.2/&lt;arch&gt;
${SB_INSTALL_BASE}/perl5122p/vendor/lib/5.12.2
${SB_INSTALL_BASE}/perl5122p/vendor/lib
.
        </screen>

        <para>Large file support is available on all platforms.</para>
      </note>

      <note type="configuration">
        <para>The search paths used to search for modules can be
augmented by adding files to the
<command>${SB_INSTALL_PREFIX}/etc/include.paths.d</command> directory containing
pathnames to be added to the default search path. The search paths are
searched before the defaults but after paths set via the
<command>PERLLIB</command> environment variable. For example:</para>
        <screen>
$ ls ${SB_INSTALL_PREFIX}/etc/include.paths.d
01-modules
02-modules
$ cat ${SB_INSTALL_PREFIX}/etc/include.paths.d/01-modules
/opt/site/perl5122/modules
$ cat ${SB_INSTALL_PREFIX}/etc/include.paths.d/02-modules
/opt/site/perl5122/user.modules
$ ${SB_INSTALL_PREFIX}/bin/perl -V
/opt/site/perl5122/modules
/opt/site/perl5122/user.modules
${SB_INSTALL_BASE}/perl5122p/lib/5.12.2/&lt;arch&gt;
${SB_INSTALL_BASE}/perl5122p/lib/5.12.2
${SB_INSTALL_BASE}/perl5122p/lib
${SB_INSTALL_PREFIX}/lib/5.12.2/&lt;arch&gt;
${SB_INSTALL_PREFIX}/lib/5.12.2
${SB_INSTALL_BASE}/perl5122p/vendor/lib/5.12.2/&lt;arch&gt;
${SB_INSTALL_BASE}/perl5122p/vendor/lib/5.12.2
${SB_INSTALL_BASE}/perl5122p/vendor/lib
.
        </screen>
      </note>

      <note type="usage">
        <para>The following 3rd-party modules are provided:
Algorithm-Dependency 1.110, Algorithm-Diff 1.1902, Apache-Session
1.89, AppConfig 1.66, Archive-Tar 1.78, Archive-Zip 1.30,
Array-Compare 2.01, Array-Unique 0.08, Authen-SASL 2.15, Bit-Vector
7.1, CGI-Session 4.48, CGI-Simple 1.113, CGI.pm 3.55, CPAN-Meta
2.112621, CPAN-Meta-YAML 0.004, CSS-Squish 0.10, CSS-Tiny 1.19,
Cache-Cache 1.06, Cache-Simple-TimedExpiry 0.27, Calendar-Simple 1.20,
Carp-Assert 0.20, Carp-Clan 6.04, Chart 2.4.1, Class-Accessor 0.34,
Class-Accessor-Chained 0.01, Class-Container 0.12, Class-DBI 3.0.17,
Class-Data-Inheritable 0.08, Class-ErrorHandler 0.01, Class-Fields
0.204, Class-ISA 0.36, Class-Inspector 1.25, Class-Load
0.17,Class-Loader 2.03, Class-ReturnValue 0.55, Class-Singleton 1.4,
Class-Trigger 0.14, Class-WhiteHole 0.04, Clone 0.31, Config-Tiny
2.14, Convert-ASCII-Armour 1.4, Convert-ASN1 0.22, Convert-PEM 0.08,
Crypt-Blowfish 2.12, Crypt-CBC 2.30, Crypt-DES 2.05, Crypt-DES_EDE3
0.01, Crypt-DH 0.06, Crypt-DSA 1.17, Crypt-OpenSSL-Bignum 0.04,
Crypt-OpenSSL-RSA 0.28, Crypt-OpenSSL-Random 0.04, Crypt-Primes 0.50,
Crypt-RC4 2.02, Crypt-RSA 1.99, Crypt-Random 1.25, Crypt-SSLeay 0.58,
DBD-CSV 0.33, DBI 1.616, DBIx-ContextualFetch 1.03, DBIx-SearchBuilder
1.61, DIME-Tools 0.03, Data-Buffer 0.04, Data-Dumper 2.131,
Data-ICal 0.18, Data-OptList 0.107, Data-OptList 0.107, Data-ShowTable
3.3, Data-Table 1.54, Data-UUID 1.217, Date-Calc 6.3, Date-Manip 6.25,
Date-Simple 3.03, DateTime 0.70, DateTime-Format-Mail 0.3001,
DateTime-Format-W3CDTF 0.06, DateTime-Locale 0.45, DateTime-TimeZone
1.37, Devel-Cover 0.79, Devel-CoreStack 1.3, Devel-Cycle 1.11,
Devel-GlobalDestruction 0.04, Devel-StackTrace 1.27, Devel-Symdump
2.08, Devel-ptkdb 1.1091, Digest-BubbleBabble 0.02, Digest-HMAC 1.03,
Digest-MD2 2.03, Digest-Nilsimsa 0.06, Digest-Perl-MD5 1.8, Digest-SHA
5.62, Digest-SHA 5.62, Digest-SHA-PurePerl 5.62, Digest-SHA1 2.13,
Digest-SHA2 1.1.1, Dist-CheckConflicts 0.02, Email-Address 1.892,
Email-Date-Format 1.002, Email-MIME 1.910, Email-MIME-ContentType
1.015, Email-MIME-Encodings 1.313, Email-MessageID 1.402, Email-Send
2.198, Email-Simple 2.100, Encode 2.44, Encode-Locale 1.02, Error
0.17016, Eval-Closure 0.06, Exception-Class 1.32, Expect 1.21,
ExtUtils-CBuilder 0.280202, ExtUtils-Depends 0.304, ExtUtils-MakeMaker
6.59, ExtUtils-Manifest 1.60, ExtUtils-ParseXS 3.04,
ExtUtils-PkgConfig 1.12, ExtUtils-XSpp 0.1602, FCGI 0.73,
File-Copy-Recursive 0.38, File-Find-Rule 0.32, File-Flat 1.04,
File-HomeDir 0.98, File-Listing 6.02, File-Remote 1.17, File-Remove
1.50, File-Scan 1.43, File-ShareDir 1.03, File-ShareDir 1.03,
File-Slurp 9999.19, File-Tail 0.99.3, File-Tail-App 0.0.3, File-Temp
0.22, File-Tempdir 0.02, File-Which 1.09, File-chmod 0.32, Filter
1.37, Font-AFM 1.20, FreezeThaw 0.43, Geography-Countries 2009041301,
Graph 0.94, Graph-ReadWrite 2.00, HTML-DynamicTemplate 0.94,
HTML-FillInForm 2.1, HTML-Form 6.00, HTML-Format 2.04,
HTML-FormatText-WithLinks 0.14, HTML-Mason 1.45, HTML-Parser 3.68,
HTML-RewriteAttributes 0.04, HTML-RewriteAttributes 0.04,
HTML-Scrubber 0.09, HTML-Table 2.08a, HTML-Tagset 3.20, HTML-Template
2.9, HTML-Tree 4.2, HTTP-Cookies 6.00, HTTP-DAV 0.44, HTTP-Daemon
6.00, HTTP-Date 6.00, HTTP-Message 6.02, HTTP-Negotiate 6.00,
HTTP-Server-Simple 0.44, HTTP-Server-Simple-Mason 0.14, Heap 0.80,
Hook-LexWrap 0.24, IO-Compress 2.043, IO-Socket-SSL 1.44, IO-String
1.08, IO-Tty 1.10, IO-Zlib 1.10, IO-stringy 2.110, IPC-Run 0.90,
IPC-Run3 0.044, IPC-ShareLite 0.17, Ima-DBI 0.35, Image-ExifTool 8.60,
Image-Size 3.230, JSON-PP 2.27200, JSON-PP-Compat5006 1.09, Jcode
2.07, LWP-MediaTypes 6.01, List-Compare 0.37, List-MoreUtils 0.33,
Locale-Maketext 1.19, Locale-Maketext-Fuzzy 0.11,
Locale-Maketext-Lexicon 0.91, Log-Any 0.14, Log-Dispatch 2.29,
MIME-Base64 3.13, MIME-Lite 3.027, MIME-Lite-TT-HTML 0.04, MIME-Types
1.32, MIME-tools 5.502, MLDBM 2.04, MRO-Compat 0.11, Mail-Audit 2.225,
Mail-Box 2.101, Mail-Box-Parser-C 3.006, Mail-IMAPClient 3.29,
Mail-Transport-Dbx 0.07, MailTools 2.08, Math-Bezier 0.01, Math-BigInt
1.997, Math-BigRat 0.2602, Math-Calc-Units 1.07, Math-FixedPrecision
0.21, Math-Round 0.06, Module-Build 0.3800, Module-Implementation
0.06, Module-Metadata 1.000007, Module-Runtime 0.013, Module-Signature
0.68, Module-Versions-Report 1.06, Moose 2.0205, Net-DNS 0.66,
Net-DNS-Resolver-Programmable 0.003, Net-Daemon 0.48, Net-Daemon-SSL
1.0, Net-HTTP 6.01, Net-IP 1.25, Net-Ident 1.23, Net-Jabber 2.0,
Net-SFTP 0.10, Net-SFTP-Foreign 1.67, Net-SSH-Perl 1.34, Net-SSLeay
1.36, Net-Server 0.99, Net-Telnet 3.03, Net-XMPP
1.02, NetAddr-IP 4.044, Number-Compare 0.02, OLE-Storage_Lite 0.19,
Object-Realize-Later 0.18, PAR-Dist 0.47, PPI 1.215, PPI-HTML 1.08,
Package-Constants 0.02, Package-DeprecationManager 0.11, Package-Stash
0.32, Package-Stash-XS 0.25, PadWalker 1.92, Params-Util 1.04,
Params-Validate 1.00, Parse-CPAN-Meta 1.4401, Parse-RecDescent
1.965001, PatchReader 0.9.6, PathTools 3.33, Perl-OSType 1.002,
Perl-Tidy 20101217, PlRPC 0.2020, Pod-Coverage 0.20, Pod-POM 0.27,
Pod-Readme 0.11, Pod-Simple 3.19, Pod-Tests 1.19, Probe-Perl 0.01,
Proc-Background 1.10, Proc-Daemon 0.02, Proc-ProcessTable 0.45, Quota
1.6.6, RPC-XML 0.76, Regexp-Common 2011041701, Return-Value 1.666001,
SNMP_Session 0.93, SOAP-Lite 0.714, SQL-Statement 1.33,
Scalar-List-Utils 1.23, Schedule-Cron 0.98, Shell-Source 0.01,
Sort-Naturally 1.02, Sort-Versions 1.5, Spiffy 0.30,
Spreadsheet-ParseExcel 0.59, Spreadsheet-WriteExcel 2.37, Storable
2.30, String-CRC32 1.4, String-Ediff 0.09, Sub-Exporter 0.982,
Sub-Install 0.925, Sub-Name 0.05, Sub-Uplevel 0.22, Sys-Syslog 0.29,
Syslog 0.97, Task-Weaken 1.04, Template-Toolkit 2.22, TermReadKey
2.30, Test-Base 0.60, Test-Class 0.24, Test-ClassAPI 1.06, Test-Deep 0.108,
Test-Differences 0.61, Test-Exception 0.31, Test-Fatal 0.006,
Test-Harness 3.23, Test-Inline 2.212, Test-Inter 1.03, Test-LongString
0.15, Test-Manifest 1.23, Test-Memory-Cycle 1.04, Test-MockModule
0.05, Test-MockObject 1.20110612, Test-NoWarnings 1.03,
Test-Number-Delta 1.03, Test-Object 0.07, Test-Output 1.01, Test-Pod
1.45, Test-Pod-Coverage 1.08, Test-Requires 0.06, Test-Script 1.07,
Test-Simple 0.98, Test-SubCalls 1.09, Test-Tester 0.107, Test-Warn
0.23, Text-Autoformat 1.669002, Text-CSV_XS 0.85, Text-Diff 1.41,
Text-Glob 0.09, Text-Quoted 2.06, Text-Reform 1.20, Text-Template
1.45, Text-WikiFormat 0.79, Text-Wrapper 1.02, Text-vFile-asData
0.07, Tie-EncryptedHash 1.24, Tie-IxHash 1.22, Time-modules 2011.0517,
TimeDate 1.20, Tk 804.029, Tk-FileDialog 1.3, Tree-DAG_Node 1.06,
Tree-Simple 1.18, Try-Tiny 0.11, UNIVERSAL-can 1.20110617,
UNIVERSAL-isa 1.20110614, UNIVERSAL-moniker 0.08, UNIVERSAL-require
0.13, URI 1.59, Unicode-Map8 0.13, Unicode-String 2.09, Unix-Syslog
1.1, User-Identity 0.93, Version-Requirements 0.101020, WWW-Mechanize
1.70, WWW-RobotRules 6.01, Want 0.18, X11-GUITest 0.25, X11-Protocol
0.56, XML-Checker 0.13, XML-DOM 1.44, XML-Filter-BufferText 1.01,
XML-NamespaceSupport 1.11, XML-Parser 2.41, XML-RSS 1.49, XML-RegExp
0.03, XML-SAX 0.99, XML-SAX-Base 1.08, XML-SAX-Writer 0.53, XML-Simple
2.18, XML-SimpleObject 0.53, XML-Stream 1.23, XML-TreeBuilder 4.1,
XML-Twig 3.38, XML-Validator-Schema 1.10, XML-Writer 0.612, XML-XPath
1.13, YAML 0.73, YAML-Syck 1.17, bignum 0.29, interface 0.03, libnet
1.22, libwww-perl 6.02, libxml-perl 0.08, perl-ldap 0.43, podlators
2.2.2, prefork 1.04, version 0.94</para>
        <para>Package dependencies for some modules:</para>
        <unorderedlist>
          <item><para>The Tk-JPEG module needs v8b of the jpeg
package</para></item>
          <item><para>The Tk-PNG module needs v1.4.4 of the libpng
package</para></item>
          <item><para>The XML-Parser modules needs v2.0.1 of the expat
package</para></item>
        </unorderedlist>
      </note>
    </notes>

    <changelog>
      <change date="2012 February 16" revision="2"
      author="Peter O'Gorman" email="pogma@thewrittenword.com">
        <item><para>Added Class-Load-0.17, Data-ICal-0.18,
Locale-Maketext-Fuzzy-0.11, Log-Dispatch-2.29,
Module-Implementation-0.06, Module-Runtime-0.013,
Module-Versions-Report-1.06, Tree-Simple-1.18, Text-Template-1.45,
Text-WikiFormat-0.79, Text-Wrapper-1.02 perl packages</para></item>
      </change>
    </changelog>
  </program>
</programs>
