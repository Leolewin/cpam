<?xml version="1.0"?>
<!DOCTYPE programs SYSTEM "sb-db.dtd">
<programs>
  <program name="R" version="2.13.1" revision="2"
  systype="*-aix*|ia64*-hpux*|*-irix*|*-linux*|*-solaris2.1?">
    <build-name>${SB_PROG_NAME}-${SB_PROG_VER}</build-name>

    <install-name>r213</install-name>

    <sources>
      <source checksum="28dd0d68ac3a0eab93fe7035565a1c30"
        checksum-type="md5" size="22063747"
        path="src/R-2.13.1.tar.gz"/>
      <patch checksum="aedc383451626e98a4c066c7c52932ed"
        checksum-type="md5" size="28560"
        path="src/R-2.13.1.tww.patch"/>
      <patch checksum="4d4f74daddec9c49841963685a6854a7"
        checksum-type="md5" size="81554"
        path="src/R-2.13.1.gnulib.patch"/>
      <patch checksum="5c166facdae8b2e66226ef257fd607ff"
        checksum-type="md5" size="3485424"
        path="src/R-2.13.1.auto.patch"/>
      <source checksum="e77dbce894687b44c898e3e4043216a1"
        checksum-type="md5" size="1863680"
        path="src/mgcv_1.7-6.tar.gz"
        noop="1" var="MGCV"/>
    </sources>

    <dependencies>
      <depend program="pkgconfig" install-name="pkgconfig02"
        add-path="prepend" type="build">v&gt;=0.25</depend>
      <depend program="bison" install-name="bison24"
        add-path="prepend" type="build">v&gt;=2.4.3</depend>
      <depend program="bzip2" var="BZIP2"
        install-name="bzip210">v&gt;=1.0.6</depend>
      <depend program="tcl" var="TCL"
        install-name="tcl85">v&gt;=8.5.10</depend>
      <depend program="tetex" var="TETEX" install-name="tetex30"
        add-path="prepend" type="build">v==3.0</depend>
      <depend program="tk" var="TK"
        install-name="tk85">v&gt;=8.5.10</depend>
      <depend program="unzip" install-name="unzip60"
        add-path="prepend" type="build">v&gt;=6.0</depend>
      <depend program="atlas" var="LIBATLAS"
        install-name="libatlas36" module="shared"
        systype="*-linux*|*-solaris*">v&gt;=3.6.0 r&gt;=11</depend>
      <depend program="atlas" var="LIBATLAS"
        install-name="libatlas36" module="gcc44-shared"
        systype="*-aix*|*-hpux*|*-irix*">v&gt;=3.6.0 r&gt;=11</depend>
      <depend program="cairo" var="LIBCAIRO"
        install-name="libcairo110">v&gt;=1.10.2</depend>
      <depend program="fcpackage" var="FCPACKAGE"
        install-name="fcpackage28">v&gt;=2.8</depend>
      <depend program="freetype" var="LIBTTF"
        install-name="libttf24">v&gt;=2.4.6</depend>
      <depend program="gettext" var="GETTEXT"
        install-name="gettext018"
        add-path="prepend">v&gt;=0.18.1.1</depend>
      <depend program="glib" var="LIBGLIB" install-name="libglib226"
        systype="*-linux*|*-solaris*">v&gt;=2.26.1</depend>
      <depend program="glib" var="LIBGLIB" install-name="libglib226"
        module="gcc44"
        systype="*-aix*|*-hpux*|*-irix*">v&gt;=2.26.1</depend>
      <depend program="jpeg" var="JPEG"
        install-name="libjpeg8">v&gt;=8b</depend>
      <depend program="libiconv" var="LIBICONV"
        install-name="libiconv113"
        add-path="prepend">v&gt;=1.13.1</depend>
      <depend program="libpng" var="LIBPNG"
        install-name="libpng14">v&gt;=1.4.4</depend>
      <depend program="ncurses" var="NCURSES"
        install-name="ncurses57">v&gt;=5.7</depend>
      <depend program="pango" var="LIBPANGO"
        install-name="libpango128">v&gt;=1.28.4</depend>
      <depend program="pcre" var="LIBPCRE"
        install-name="libpcre811">v&gt;=8.11</depend>
      <depend program="readline" var="READLINE"
        install-name="libreadline62">v&gt;=6.2</depend>
      <depend program="sunstudioruntime" var="SUNSTUDIORUNTIME"
        install-name="sunstudioruntime10"
        systype="*-solaris*">v&gt;=1.0</depend>
      <depend program="tiff" var="LIBTIFF"
        install-name="libtiff39">v&gt;=3.9.5</depend>
      <depend program="xz" var="LIBXZ"
        install-name="xz50">v&gt;=5.0.3</depend>
      <depend program="zip" install-name="zip30" add-path="prepend"
        type="build">v&gt;=3.0</depend>
      <depend program="zlib" var="LIBZ"
        install-name="libz12">v&gt;=1.2.5</depend>
      <depend program="gcc" var="GCC" install-name="gcc44"
        add-path="prepend"
        systype="*-aix*|*-hpux*|*-irix*">v&gt;=4.2.4</depend>
      <depend program="perl" add-path="prepend">v==5.12.2</depend>
      <depend var="GCC_RT" install-name="gcc44r"
        systype="*-aix*|*-hpux*|*-irix*"/>
    </dependencies>

    <script-header>
<![CDATA[
_datadir="${SB_INSTALL_PREFIX}/share"
_docdir="${SB_INSTALL_PREFIX}/doc"
_sysconfdir="${SB_INSTALL_PREFIX}/etc"
_papersize=letter

_gccsubdir="gcc44"
]]>
    </script-header>

    <configure>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  CFLAGS="-O2 -mcpu=powerpc"
  CXXFLAGS="-O2 -mcpu=powerpc"
  FFLAGS="-O2 -mcpu=powerpc"
  LDFLAGS="-Wl,-brtl -Wl,-blibpath:/usr/lib"
  CC_LD_RT="-Wl,-blibpath:"

  ARGS="ac_cv_sizeof_long_double=8" ;;
ia64*-hpux*)
  CFLAGS="-O2" CXXFLAGS="-O2"
  FFLAGS="-O2"
  CC_LD_RT="-Wl,+b,"

  # disable -fvisibility=hidden as it hides too many symbols
  # (especially the init methods in shared objects)
  ARGS="r_cv_prog_cc_vis=no r_cv_prog_f77_vis=no \
gl_cv_cc_visibility=no" ;;
*-irix*)
  CC_LD_RT="-Wl,-rpath,"

  ARGS="ac_cv_have_decl_iswblank=no ac_cv_func_iswblank=no" ;;
i?86*-linuxe4)
  CFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"
  CXXFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"
  F77=g77 FFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"
  CC_LD_RT="-Wl,-rpath,"

  _libatlas_lib=${SB_VAR_LIBATLAS_LIB} ;;
x86_64*-linuxe4)
  F77=g77
  CC_LD_RT="-Wl,-rpath,"

  _libatlas_lib=${SB_VAR_LIBATLAS_LIB} ;;
i?86*-linux*)
  CFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"
  CXXFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"
  F77=gfortran FFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"
  CC_LD_RT="-Wl,-rpath,"

  _libatlas_lib=${SB_VAR_LIBATLAS_LIB} ;;
x86_64*-linux*)
  F77=gfortran
  CC_LD_RT="-Wl,-rpath,"

  _libatlas_lib=${SB_VAR_LIBATLAS_LIB} ;;
*-osf*)
  CFLAGS="-O2 -mcpu=ev5 -mieee"
  CXXFLAGS="-O2 -mcpu=ev5 -mieee"
  FFLAGS="-O2 -mcpu=ev5 -mieee"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xO2 -xtarget=pentium4"
  CXX=CC CXXFLAGS="-xO2 -xtarget=pentium4"
  F77=f77 FFLAGS="-errtags=INVOKE -xO2 -xtarget=pentium4"
  FLIBS="-L/opt/SUNWspro/lib/sse2 -L/opt/SUNWspro/lib \
-L/opt/SUNWspro/prod/lib/sse2 -L/opt/SUNWspro/prod/lib \
-R/opt/SUNWspro/lib/sse2:/opt/SUNWspro/lib \
-lfui -lfai -lfsu -lsunmath -lmtsk -lm"
  LDFLAGS="-R${SB_INSTALL_PREFIX}/lib:${SB_VAR_SUNSTUDIORUNTIME_LIB}"
  CC_LD_RT="-R"

  _libatlas_lib=${SB_VAR_LIBATLAS_LIB} ;;
*-solaris*)
  CC=cc CFLAGS="-dalign -mr -Qn -xO2 -xtarget=ultra2 -m32 \
-xarch=sparcvis"
  CXX=CC CXXFLAGS="-dalign -xO2 -xtarget=ultra2 -m32 -xarch=sparcvis"
  F77=f77 FFLAGS="-dalign -errtags=INVOKE -xO2 -xtarget=ultra2 -m32 \
-xarch=sparcvis"
  FLIBS="-L/opt/SUNWspro/lib/v8 -L/opt/SUNWspro/lib \
-L/opt/SUNWspro/prod/lib/v8 -L/opt/SUNWspro/prod/lib \
-R/opt/SUNWspro/lib/v8:/opt/SUNWspro/lib \
-lf77compat -lfui -lfai -lfai2 -lfsumai -lfprodai -lfminlai \
-lfmaxlai -lfminvai -lfmaxvai -lfsu -lsunmath -lmtsk -lm"
  LDFLAGS="-R${SB_INSTALL_PREFIX}/lib:${SB_VAR_SUNSTUDIORUNTIME_LIB}"
  CC_LD_RT="-R"

  _libatlas_lib=${SB_VAR_LIBATLAS_LIB} ;;
esac

${SHELL} ./configure CC="${CC:-gcc}" CFLAGS="${CFLAGS:--O2}" \
CPPFLAGS="-I${SB_VAR_BZIP2_INC} -I${SB_VAR_LIBTIFF_INC} \
-I${SB_VAR_JPEG_INC} -I${SB_VAR_LIBPNG_INC} -I${SB_VAR_LIBZ_INC} \
-I${SB_VAR_LIBPCRE_INC} -I${SB_VAR_LIBXZ_INC} -I${SB_VAR_GETTEXT_INC} \
${SB_VAR_LIBICONV+-I${SB_VAR_LIBICONV_INC}} -I${SB_VAR_NCURSES_INC}" \
CXX="${CXX:-g++}" CXXFLAGS="${CXXFLAGS:--O2}" \
F77="${F77:-gfortran}" FFLAGS="${FFLAGS:--O2}" \
LDFLAGS="${SB_VAR_GCC_RT+-L${SB_VAR_GCC_RT_LIB}} \
-L${SB_VAR_BZIP2_LIB} -L${SB_VAR_LIBTIFF_LIB} -L${SB_VAR_JPEG_LIB} \
-L${SB_VAR_LIBPNG_LIB} -L${SB_VAR_LIBZ_LIB} \
-L${SB_VAR_LIBPCRE_LIB} -L${SB_VAR_LIBXZ_LIB} \
${SB_VAR_LIBATLAS+-L${SB_VAR_LIBATLAS_LIB}} \
${SB_VAR_LIBICONV+-L${SB_VAR_LIBICONV_LIB}} -L${SB_VAR_GETTEXT_LIB} \
-L${SB_VAR_NCURSES_LIB} ${CC_LD_RT}${SB_VAR_NCURSES_LIB}:\
${SB_VAR_GCC_RT+${SB_VAR_GCC_RT_LIB}:}\
${_libatlas_lib:-${SB_VAR_LIBATLAS+${SB_VAR_LIBATLAS_LIB}/${_gccsubdir}}}:\
${SB_VAR_READLINE_LIB}:${SB_VAR_LIBTIFF_LIB}:\
${SB_VAR_JPEG_LIB}:${SB_VAR_LIBPNG_LIB}:${SB_VAR_LIBZ_LIB}:\
${SB_VAR_BZIP2_LIB}:${SB_VAR_LIBPCRE_LIB}:${SB_VAR_LIBXZ_LIB}\
${SB_VAR_LIBICONV+:${SB_VAR_LIBICONV_LIB}}:${SB_VAR_GETTEXT_LIB} \
${LDFLAGS+${LDFLAGS}}" ${FLIBS+FLIBS="${FLIBS}"} \
PKG_CONFIG_PATH="${SB_VAR_FCPACKAGE_LIB}/pkgconfig:\
${SB_VAR_GETTEXT_LIB}/pkgconfig:\
${SB_VAR_LIBCAIRO_LIB}/pkgconfig:\
${SB_VAR_LIBGLIB_LIB}${SB_VAR_GCC_RT+/${_gccsubdir}}/pkgconfig:\
${SB_VAR_LIBPANGO_LIB}/pkgconfig:\
${SB_VAR_LIBTTF_LIB}/pkgconfig:\
${SB_VAR_LIBPNG_LIB}/pkgconfig:\
${SB_VAR_LIBZ_LIB}/pkgconfig" \
PAGER=more MAKE=gmake R_PAPERSIZE=${_papersize} \
R_BROWSER=firefox \
--with-tcl-config="${SB_VAR_TCL}/lib/tclConfig.sh" \
--with-tk-config="${SB_VAR_TK}/lib/tkConfig.sh" \
--with-readline=${SB_VAR_READLINE} \
${SB_VAR_LIBATLAS+--with-blas="-L${_libatlas_lib:-${SB_VAR_LIBATLAS_LIB}/${_gccsubdir}} -lblas"} \
${SB_VAR_LIBATLAS+--with-lapack="-L${_libatlas_lib:-${SB_VAR_LIBATLAS_LIB}/${_gccsubdir}} -llapack"} \
--with-system-zlib --with-system-bzlib --with-libpng \
--with-system-pcre --with-system-xz --with-tcltk --with-cairo \
--enable-shared --enable-static --with-recommended-packages \
--disable-openmp --mandir="${SB_INSTALL_PREFIX}/man" \
rincludedir=${SB_INSTALL_PREFIX}/include rsharedir="${_datadir}" \
--sysconfdir=${_sysconfdir} rdocdir=${_docdir} \
${ARGS+${ARGS}} --prefix=${SB_INSTALL_PREFIX}

# Fix library paths
cp config.status config.status.orig
${SB_PATH_SED} -i -e "\
/\"TCLTK_LIBS\"/ {
s!-L${SB_VAR_TCL_LIB} !-L${SB_VAR_TCL_LIB} ${CC_LD_RT}${SB_VAR_TCL_LIB} !;
s!-L${SB_VAR_TK_LIB} !-L${SB_VAR_TK_LIB} ${CC_LD_RT}${SB_VAR_TK_LIB} !;
}" config.status
${SHELL} config.status

# fix permission on directory
${SB_PATH_CHMOD} 755 src/library/base/inst/po/de \
src/library/base/inst/po/de/LC_MESSAGES

# 'Entering directory foo' on stdout. Need to edit this tarball to
# add MAKEFLAGS=
(cd src/library/Recommended
 ${SB_PATH_TAR} xzf foreign_0.8-44.tar.gz
 ${SB_PATH_SED} -i -e \
 's!^CC=`!CC=`MAKEFLAGS= !;s!^CFLAGS=`!CFLAGS=`MAKEFLAGS= !;' \
 foreign/configure
 rm foreign_0.8-44.tar.gz
 ${SB_PATH_TAR} czf foreign_0.8-44.tar.gz foreign)

# #undef TRUE/FALSE for AIX
cp ${SB_SRC_MGCV} src/library/Recommended

# Don't define BLAS_NO_UNDERSCORE for HP-UX and don't redefine MAX/MIN
# if already defined when building Matrix.
(cd src/library/Recommended
 ${SB_PATH_TAR} xzf Matrix_0.999375-50.tar.gz
 ${SB_PATH_SED} -i -e \
 '/HP Unix/ {
n
s!#define BLAS_NO_UNDERSCORE!/* #define BLAS_NO_UNDERSCORE */!
}
/HP 700 Unix/ {
n
s!#define BLAS_NO_UNDERSCORE!/* #define BLAS_NO_UNDERSCORE */!
}' Matrix/src/CHOLMOD/Include/cholmod_blas.h
 ${SB_PATH_SED} -i -e \
 '/define MAX(/ {
i\
#ifndef MAX
a\
#endif
}
/define MIN(/ {
i\
#ifndef MIN
a\
#endif
}' Matrix/src/COLAMD/Source/colamd.c \
Matrix/src/CHOLMOD/Include/cholmod_internal.h
 rm Matrix_0.999375-50.tar.gz
 ${SB_PATH_TAR} czf Matrix_0.999375-50.tar.gz Matrix)
]]>
    </configure>

    <build>
<![CDATA[
case "${SB_SYSTYPE}" in
*-solaris*)
  # For the Fortran library. Eventually copied to installation
  # lib directory but need it during build.
  export LD_LIBRARY_PATH=/opt/SUNWspro/lib ;;
esac

gmake
]]>
    </build>

    <test>
<![CDATA[
gmake -k check

# Ignore failures
:
]]>
    </test>

    <notes>
      <change from="2.9.1" to="2.9.2">
        <items name="New Features">
          <item><para>install.packages(NULL) now lists packages only
once even if they occur in more than one repository (as the latest
compatible version of those available will always be
downloaded).</para></item>
          <item><para>approxfun() and approx() now accept a 'rule' of
length two, for easy specification of different interpolation rules on
left and right.</para>
          <para>They no longer segfault for invalid zero-length
specification of 'yleft, 'yright', or 'f'.</para></item>
          <item><para>seq_along(x) is now equivalent to
seq_len(length(x)) even where length() has an S3/S4 method; previously
it (intentionally) always used the default method for
length().</para></item>
          <item><para>PCRE has been updated to version 7.9 (for bug
fixes).</para></item>
          <item><para>agrep() uses 64-bit ints where available on
32-bit platforms and so may do a better job with complex matches.
(E.g. PR#13789, which failed only on 32-bit systems.)</para></item>
        </items>

        <items name="Deprecated and Defunct">
          <item><para>R CMD Rd2txt is deprecated, and will be removed
in 2.10.0. (It is just a wrapper for R CMD Rdconv -t
txt.)</para></item>
          <item><para>tools::Rd_parse() is deprecated and will be
removed in 2.10.0 (which will use only Rd version 2).</para></item>
        </items>

        <items name="Bug Fixes">
          <item><para>parse_Rd() still did not handle source reference
encodings properly.</para></item>
          <item><para>The C utility function PrintValue no longer
attempts to print attributes for CHARSXPs as those attributes are used
internally for the CHARSXP cache. This fixes a segfault when calling
it on a CHARSXP from C code.</para></item>
          <item><para>PDF graphics output was producing two instances
of anything drawn with the symbol font face.</para></item>
          <item><para>length(x) &lt;- newval and grep() could cause
memory corruption. (PR#13837)</para></item>
          <item><para>If model.matrix() was given too large a model,
it could crash R. (PR#13838)</para></item>
          <item><para>gzcon() (used by load()) would re-open an open
connection, leaking a file descriptor each time.
(PR#13841)</para></item>
          <item><para>The checks for inconsistent inheritance reported
by setClass() now detect inconsistent superclasses and give better
warning messages.</para></item>
          <item><para>print.anova() failed to recognize the column
labelled P(&gt;|Chi|) from a Poisson/binomial GLM anova as a p-value
column in order to format it appropriately (and as a consequence it
gave no significance stars).</para></item>
          <item><para>A missing PROTECT caused rare segfaults during
calls to load(). (PR#13880)</para></item>
          <item><para>gsub() in a non-UTF-8 locale with a marked UTF-8
input could in rare circumstances overrun a buffer and so
segfault.</para></item>
          <item><para>R CMD Rdconv --version was not working
correctly.</para></item>
          <item><para>Missing PROTECTs in nlm() caused "random"
errors. (PR#13381)</para></item>
          <item><para>Some extreme cases of pbeta(log.p = TRUE) are
more accurate (finite values &lt; -700 rather than -Inf).
(PR#13786)</para>
          <para>pbeta() now reports on more cases where the asymptotic
expansions lose accuracy (the underlying TOMS708 C code was ignoring
some of these, including the PR#13786 example).</para></item>
          <item><para>new.env(hash = TRUE, size = NA)	now works the
way it has been documented to for a long time.</para></item>
          <item><para>tcltk::tk_choose.files(multi = TRUE) produces
better-formatted output with filenames containing spaces.
(PR#13875)</para></item>
          <item><para>R CMD check --use-valgrind did not run valgrind
on the package tests.</para></item>
          <item><para>The tclvalue() and the print() and as.xxx
methods for class "tclObj" crashed R with an invalid object -- seen
with an object saved from an earlier session.</para></item>
          <item><para>R CMD BATCH garbled options -d &lt;debugger&gt;
(useful for valgrind, although --debugger=valgrind always
worked)</para></item>
          <item><para>INSTALL with LazyData and Encoding declared in
DESCRIPTION might have left options("encoding") set for the rest of
the package installation.</para></item>
        </items>
      </change>

      <change from="2.9.0" to="2.9.1">
        <items name="New Features">
          <item><para>New function anyDuplicated(x) returns 0 (=
FALSE) or the index of the first duplicated entry of x.</para></item>
          <item><para>matplot(), matlines() and matpoints() now also
obey a 'lend' argument, determining line end styles. (Wish of
PR#13619).</para></item>
          <item><para>bw.SJ(), bw.bcv() and bw.ucv() now gain an
optional 'tol' argument allowing more accurate
estimates.</para></item>
          <item><para>new.packages() no longer regards packages with
the same name as a member of an installed bundle as 'new' (this is now
consistent with the dependency checks in install.packages()).</para>
          <para>It no longer reports on partially installed bundles
(since members can be updated individually if a bundle is
unbundled).</para></item>
          <item><para>old.packages() and hence updates.packages() will
look for updates to members of package bundles before updates to the
whole bundle: this allow bundles to be split and installations
updated.</para></item>
          <item><para>nlminb() gives better non-convergence messages
in some cases.</para></item>
          <item><para>S3 method dispatch will support S4 class
inheritance for S3 methods, for primitives and via UseMethod(), if the
argument S3methods=TRUE is given to setClass(). S4 method dispatch
will use S3 per-object inheritance if S3Class() is set on the
object.</para></item>
          <item><para>R CMD INSTALL is more tolerant of (malformed)
packages with a 'man' directory but no validly named .Rd
files.</para></item>
          <item><para>R CMD check now reports where options are used
that cause some of the checks to be skipped.</para></item>
          <item><para>RSiteSearch has been updated to be consistent
with the new layout of the search site itself, which now includes
separate options for vignettes, views, and r-sig-mixed-models, as well
as changed names for r-help.</para></item>
          <item><para>That R CMD check makes use of a
&lt;pkg&gt;/tests/Examples/&lt;pkg&gt;-Ex.Rout.save file as a
reference result is now documented in 'Writing R
Extensions'.</para></item>
        </items>

        <items name="Deprecated and Defunct">
          <item><para>print.atomic() (defunct since 1.9.0) has been
removed since it caused confusion for an S4 class union
"atomic".</para></item>
          <item><para>png(type="cairo1") is deprecated -- it was only
needed for platforms with 1.0 &lt;= cairo &lt; 1.2.</para></item>
        </items>

        <items name="Bug Fixes">
          <item><para>The ... argument was not handled properly when
... was found in the enclosure of the current function, rather than in
the function header itself. (This caused integrate() to fail in
certain cases.)</para></item>
          <item><para>col2rgb("#00000080", TRUE) would return the
background colour.</para></item>
          <item><para>interaction() now ensures that the levels of the
result are unique. </para></item>
          <item><para>packageDescription() and hence sessionInfo() now
report the correct package version also for a non-attached loaded
namespace of a version different from the default
lib.loc.</para></item>
          <item><para>smoothScatter() now also works when e.g. xlim[2]
&lt; xlim[1].</para></item>
          <item><para>Invalid use of sprintf() such as sprintf("%S%")
now give an error instead of a segmentation fault, as do very unusual
cases such as sprintf("%s", tryCatch(stop(), error=identity)). (It was
always documented that misuse could crash R in platform-dependent
ways.)</para></item>
          <item><para>parse_Rd() would mishandle braces when they
occurred at the start of a line within an R string in an Rd file
(reported by Alex Couture-Beil) or when they occurred in an R
comment.</para></item>
          <item><para>readNEWS() missed version numbers with more than
one digit.</para></item>
          <item><para>building R --without-x no longer fails
(PR#13665)</para></item>
          <item><para>printCoefmat(cbind(0,1)) now works too
(PR#13677)</para></item>
          <item><para>bw.SJ(c(1:99, 1e6)) now works too.</para></item>
          <item><para>Rd2txt() could not handle empty descriptions of
items in an Rd file (reported by Mark Bravington), and did not wrap
long lists of arguments if they were given in a single
item.</para></item>
          <item><para>stars() would do a partial plot when called with
plot = FALSE; it now consistently returns the locations of the
stars.</para></item>
          <item><para>Rd2latex() could not handle empty
sections.</para></item>
          <item><para>old.packages() and hence update.packages() would
fail on a repository which contained only one package but with
multiple versions of that package.</para></item>
          <item><para>as.character.Rd() added extra braces when
displaying two-argument macros.</para></item>
          <item><para>unsplit() was misbehaving in the case of
single-column data frames.</para></item>
          <item><para>as(I(1), "vector") and similar coercions from
objects of "unregistered" S3 classes now work.</para></item>
          <item><para>srcref records produced by parse() and
parse_Rd() did not record the encoding of the source
file.</para></item>
          <item><para>The X11 version of View() was misbehaving in
MBCS locales, and PgUp/PgDn now behave better.</para></item>
          <item><para>R CMD check looked at the environment variable
PDFLATEX, but as from R 2.8.1 R CMD Rd2dvi used R_PDFLATEXCMD in
preference, and that was set by R CMD (and not PDFLATEX). Now R CMD
check looks at R_PDFLATEXCMD.</para></item>
          <item><para>sprintf() now signals an error when the result
of single format specification would be longer than the limit (8192
bytes); it would return "somewhat random" results or segfault
previously. (PR#13667) Further, arguments of type "language" or
"symbol" are no longer allowed, as these, e.g., sprintf("%s",
quote(list())), typically lead to unexpected results or hard to
understand error messages.</para></item>
          <item><para>The new (in 2.9.0) 'stringsAsFactors' argument
to expand.grid() was not working: it now does work but has default
TRUE for backwards compatibility.</para></item>
          <item><para>tcrossprod(&lt;1d-array&gt;, &lt;matrix&gt;) now
does work when the arguments are of compatible
dimensions.</para></item>
          <item><para>qbinom() now is accurate also in (large size,
small prob) cases. (PR#13711)</para></item>
          <item><para>The calculation of the Spearman p-value in
cor.test() is slightly more accurate in some cases.
(PR#13574)</para></item>
          <item><para>The digamma(), trigamma() and psigamma()
functions could be inaccurate for values of x around 1e-15 due to
cancellation. (PR#13714).</para></item>
          <item><para>median.default() was altered in 2.8.1 to use
sum() rather than mean(), although it was still documented to use
mean(). This caused problems for POSIXt objects, for which mean() but
not sum() makes sense, so the change has been reverted.</para></item>
          <item><para>Assigning an extra 0-length column to a data
frame by DF$foo &lt;- value gave a corrupt data frame rather than
failing. (PR#13724)  This also happened for DF[["foo"]] &lt;-
value.</para></item>
          <item><para>R CMD INSTALL no longer gives a spurious warning
about old R versions ignoring multiple dependencies, if the conditions
are known to be satisfied.</para></item>
          <item><para>The test for setting dim() allowed a value with
two or more NAs to be set on a 0-length object. (PR#13729)  Also, it
allowed an even number of negative values.</para></item>
          <item><para>xtfrm(), rank(), sort() and order() did not
always make use of custom comparison methods specific to the class of
elements being sorted.</para></item>
          <item><para>Increase NAMED value on 'seq' value in for()
loop so loop code cannot modify 'seq' value.</para></item>
          <item><para>Prevent rectangles of size &lt; 0.5 pixel from
disappearing in Quartz when using rastered backend.
(PR#13744)</para></item>
          <item><para>Printing _NA_complex_ had a low-level
thinko.</para></item>
          <item><para>CP1257 encoding for postscript/PDF has been
corrected. (PR#13736)</para></item>
          <item><para>aov() with an error term was evaluating the ...
arguments in 2.9.0 whilst checking their names, so could fail by
evaluating them in the wrong place. (PR#13733)</para></item>
          <item><para>The print() method for arima() failed if all
coefs were fixed.</para></item>
          <item><para>R CMD INSTALL --no-latex was not implemented in
2.9.0 (only).</para></item>
          <item><para>Added a needed PROTECT call in RunFinalizers to
handle cases where the routine is called recursively from a GC in a
finalizer.</para></item>
          <item><para>Constructing error messages about unused
arguments in calls to closures no longer evaluates the
arguments.</para></item>
          <item><para>qr(x, LAPACK=TRUE) did not coerce integer x to
numeric.</para></item>
          <item><para>qr.coef() misbehaved in the LAPACK case with a
matrix RHS, so that solve(qr(x, LAPACK=TRUE)) gave wrong results.
(PR#13762)</para></item>
        </items>
      </change>

      <change from="2.8.1" to="2.9.0">
        <items name="New Features">
          <item><para>Package 'Matrix' is now a recommended package
contained in the basic R distribution. It provides S4 classes and
methods for dense and sparse matrices, often by using the numerical
libraries Lapack and from the SuiteSparse collection CHOLMOD, CSparse,
and SPQR among others.</para></item>
          <item><para>pdf() and postscript() gain a 'useKerning'
argument to place strings using kerning (which had previously been
ignored in display but not in strwidth), based in part on an idea and
code from Ei-ji Nakama. The default is TRUE.</para>
          <para>Kerning involving spaces is now ignored (it was
previously only used in the computation of string
widths).</para></item>
          <item><para>seq.default() and seq.int() ensure that the
result is within the interval [from, to] even when the last value
would previously have been slightly out of range because of the
allowance for rounding error in computing the number of
elements.</para></item>
          <item><para>boxplot() gains a simple 'matrix' method,
enabling boxplot(mat) instead of
boxplot(data.frame(mat)).</para></item>
          <item><para>zip.file.extract() gains an optional 'dir'
argument (but use unzip() instead).</para></item>
          <item><para>source() with 'encoding' specified (and not as
"unknown") marks the encoding of character strings in Latin-1 and
UTF-8 locales.</para></item>
          <item><para>parse(text=z) now marks the encoding of
character strings in Latin-1 and UTF-8 locales if 'z' is of known
encoding (that is all elements are either ASCII or marked as Latin-1
or UTF-8).</para></item>
          <item><para>sprintf() does stricter error checking on input
formats to avoid passing invalid formats to the OS (which have a
tendency to crash under such inputs).</para></item>
          <item><para>expand.grid() gains a 'stringsAsFactors'
argument to ask for automatic conversion of character vectors to
factors (which happened for many years but was not previously
documented).</para></item>
          <item><para>bxp() now computes the 'ylim' including the
outliers only if 'outline = TRUE'. (Wish of PR#13196)</para></item>
          <item><para>barplot() gains a 'args.legend' argument. (Wish
of PR#13265).</para></item>
          <item><para>RweaveLatexSetup() now accepts all (and not just
some) options passed through from Sweave()</para></item>
          <item><para>cumsum(x) and cumprod(x) for double precision x
now use a long double accumulator where available and so more closely
match sum() and prod() in potentially being more
accurate.</para></item>
          <item><para>plot() methods for "stepfun" (and hence "ecdf")
gain an 'col' argument, allowing to set all three colors
simultaneously.</para></item>
          <item><para>Iterating over a factor in a for loop now
coerces to a character vector (rather than using the integer
codes).</para></item>
          <item><para>data.frame() now recycles columns of list
arguments, not just vectors and factors.</para></item>
          <item><para>plot.ts(plot.type="multiple") now makes use of
*.lab and *.axis graphical parameters (wish of PR#13134 and
13135).</para></item>
          <item><para>Classes can be exported from a name space using
the NAMESPACE file directive 'exportClassPattern' which has the same
syntax as 'exportPattern'.</para></item>
          <item><para>strftime() now converts its first argument with
as.POSIXlt() and so is no longer an alias for
format.POSIXLt.</para></item>
          <item><para>body&lt;-() now treats list values consistently
with other types: they no longer need to be wrapped in a list()
call.</para></item>
          <item><para>option("pdfbrowser") is now set on Windows as
well as on Unix-alikes.</para></item>
          <item><para>object.size() now returns an object of class
"object_size" and has a print() method.</para></item>
          <item><para>[col/row]Sums(), *Means() now have an additional
'...' argument, so that they can more easily be turned into generic
functions.</para></item>
          <item><para>Package 'tools' contains dependsOnPkgs() to
compute reverse dependencies.</para></item>
          <item><para>Strict type checking is now turned on: this
catches more internal corruptions, and some badly written contributed
code.</para></item>
          <item><para>There are new functions in package 'tcltk',
tk_choose.files(), tk_choose.dir() and tk_messageBox(), analogues of
functions available on Windows (the last is an analogue of
winDialog).</para></item>
          <item><para>Sys.glob() now does tilde expansion on all
platforms.</para></item>
          <item><para>read.table() and friends gain a 'fileEncoding'
argument to make re-encoding of input just a little bit
simpler.</para></item>
          <item><para>grep() gains an 'invert' argument mimicking
'grep -v/--invert'.</para></item>
          <item><para>strwrap() now allows a separate prefix for the
first line.</para></item>
          <item><para>grep() has a more efficient sibling grepl() that
returns a logical vector.</para></item>
          <item><para>xfig() has new arguments 'defaultFont' and
'textSpecial'</para></item>
          <item><para>parse() and parse_Rd() now point to syntax
errors in the reported error context, and include the filename and
line and column numbers so smart text editors can jump to the error
location.</para></item>
          <item><para>str(&lt;1d-array&gt;) now writes "[1:n(1d)]"
instead of the previous less clear "[, 1:n]".</para></item>
          <item><para>New function testInstalledPackage() in package
'tools' allows the examples (and if they were installed) any
package-specific tests to be run on an installed package.</para>
          <para>testInstalledPackages() can run all the examples and
tests in the standard and/or recommended packages. Also
testInstalledBasic() can run the basic tests (if
installed).</para></item>
          <item><para>file.copy() now has a 'recursive'
argument.</para></item>
          <item><para>Errors in setOldClass() will cause a previous
definition to be restored.</para></item>
          <item><para>Ambiguities in class inheritance and method
selection resulting from duplicates in superclasses are now resolved
by requiring (if possible) consistency with all the superclass
inheritance. The rules for method selection have been revised to take
advantage of the improved ordering.</para></item>
          <item><para>New function unzip() in package 'utils' to
expand or list zip archives.</para></item>
          <item><para>Replacement functions for class() and oldClass()
will unset the S4 bit when the replacement can't be an S4 object;
oldClass() will return the S3 class for S4 objects with slot
.S3Class.</para></item>
          <item><para>clip() takes extra steps to avoid the next
graphics call resetting the clip region.</para></item>
          <item><para>New function sample.int() to provide documented
access to the internal part of sample() (sampling from
seq_len(n)).</para></item>
          <item><para>New version of withVisible() for better handling
of cases like withVisible(eval.parent(....)). Moved to package 'base'
with a view to replace .Internal(eval.with.vis) in source()
later.</para></item>
          <item><para>showClass() which is also used to auto-print
class definitions, now mentions the package where the class comes
from, if there is one.</para></item>
          <item><para>simulate(obj) now also works for "glm" objects
and for weighted fits, thanks in part to contributions from Ben Bolker
and Heather Turner. There is now a means to extend the methods
available for "glm" objects, as glm families can have an optional
'simulate' component.</para></item>
          <item><para>S4 classes that inherit from any of the
"structure" classes or from "vector" will turn on methods for all the
"Ops" group of functions when the package containing the classes is
loaded.</para></item>
          <item><para>A mechanism now allows S4 classes to inherit
from object types "environment", "externalptr" and symbol
("name").</para></item>
          <item><para>demo() gains 'echo' and 'ask' arguments, with
defaults similar to example().</para></item>
          <item><para>library() no longer checks for the packages
merged during the re-organization of 1.9.0.</para></item>
          <item><para>New function poisson.test() in package 'stats'
for exact test of rates and rate ratios.</para></item>
          <item><para>New function isdebugged() indicates whether its
argument has the debug flag set or not.</para></item>
          <item><para>ls.str() [via print method] now also works when
some objects in the environment are missing().</para></item>
          <item><para>Subsetting S4-objects (without an explicit "["
method) no longer preserves the class in cases like setClass("C",
contains="list"); This reverts a "bug fix" activated in R
2.8.0.</para></item>
          <item><para>.packages() and .find.packages() no longer check
the package info for installed packages with dumped metadata, since
this was checked when the package was installed. .packages() only
considers such packages to be validly installed (any others were
installed in a long-obsolete version of R). Both changes speed up
searches in libraries of thousands of packages.</para></item>
          <item><para>boxplot() uses butt line endings for its median
line (suggestion of Uwe Ligges, PR#13553).</para></item>
          <item><para>S4 objects passed to a non-default S3 method
will be converted to a valid S3 object with the S3
class.</para></item>
          <item><para>A new class "nonStructure" has been defined;
classes that extend a vector class but that should lose their slots
under Math or Ops functions should extend this class.</para></item>
          <item><para>axis.POSIXct() now plots in the timezone marked
for its inputs (if any) rather than in the local time. The latter was
a deliberate choice, but is easy to select by removing the 'tzone'
attribute.</para></item>
          <item><para>A new function classesToAM() returns an
adjacency matrix representing the inheritance of the classes
specified. Allows better human examination of the patterns, e.g. by
using the matrix as input to one of the graph packages (see the
documentation).</para></item>
          <item><para>X11options(antialias = "none") now works, for
consistency with X11().</para></item>
          <item><para>sprintf() now allows zero-length arguments (with
a zero-length result).</para></item>
          <item><para>unlink() is now able to remove broken symbolic
links on Unix-alikes.</para></item>
          <item><para>New selectSuperClasses() utility in package
'methods'.</para></item>
          <item><para>HoltWinters() now allows parameters alpha and
beta to be fixed at 0 and hence beta = FALSE and gamma = FALSE are
used to specify restricted models.</para></item>
          <item><para>A new function smoothScatter() has been added to
package 'graphics'. It is appropriate for very dense scatter plots and
uses density estimation and color to reflect density of
plotting.</para></item>
        </items>

        <items name="Deprecated and Defunct">
          <item><para>allGenerics() is defunct.</para></item>
          <item><para>Use of allocVector(CHARSXP ...) is defunct and
gives an error.</para></item>
          <item><para>The compatibility define for graphics structure
NewDevDesc in GraphicsDevice.h has been removed.</para></item>
          <item><para>Support for versioned installs (R CMD INSTALL
--with-package-versions and install.packages(installWithVers = TRUE))
has been removed. Packages installed with versioned names will be
ignored.</para></item>
          <item><para>The numeric and power(0.5) forms of argument to
make.link() which were deprecated in 2.4.0 are now defunct: use
power() directly.</para></item>
          <item><para>Conversion to Sd and Ssgm by R CMD Rdconv is now
defunct.</para></item>
          <item><para>Support for R --gui=gnome is now defunct (and
package gnomeGUI has been withdrwan as it used a long-obsolete version
of GNOME).</para></item>
          <item><para>R CMD SHLIB on Windows will call the first
target (not 'all') in Makevars[.win] in future versions: so make 'all'
the first target if you have any.</para></item>
        </items>

        <items name="Utilities">
          <item><para>R CMD build now also uses a Makevars[.win] file
for cleaning up src/.</para></item>
          <item><para>R CMD Rd2dvi and R CMD check are now able to
cope with Cyrillic characters in UTF-8 if environment variable
_R_CYRILLIC_TEX_ is set to a non-empty value and the latex system has
suitable fonts.</para></item>
          <item><para>New function rtags() in package 'utils' that
provides etags-like indexing capabilities for R code
files.</para>
          <para>New front-end script R CMD rtags provides an interface
to the rtags() function (see R CMD rtags --help for
details).</para></item>
          <item><para>New environment variable R_TEXI2DVICMD to hold
the path (if any) to 'texi2dvi' found at configure time: this now
provides the default to option("texi2dvi").</para></item>
          <item><para>massage-Examples.pl has been replaced by the R
function tools:::massageExamples().</para></item>
          <item><para>R CMD REMOVE now uses remove.packages() and
hence removes all members of a bundle.</para></item>
          <item><para>R CMD SHLIB is now an R script and has a new
option -n aka --dry-run to show what commands would be run. The same
code is used on Unix and Windows.</para></item>
          <item><para>R CMD Rdconv has new options --package and
--version to set the corresponding fields in HTML
conversion.</para></item>
          <item><para>R CMD check runs the package tests with a custom
startup file, currently containing 'options(useFancyQuotes =
FALSE)'.</para>
          <para>Those tests are run by an R script: using a tests/Makefile
(undocumented) no longer works.</para></item>
          <item><para>R CMD config now knows about DYLIB_EXT and
SHLIB_EXT, for use in configure files.</para></item>
          <item><para>R CMD BATCH has a new option --no-timing to
suppress printing out the session timing.</para></item>
          <item><para>R CMD Rd2dvi can now work on an installed
package.</para></item>
          <item><para>R CMD check no longer loads package 'tcltk' when
checking for code problems, so more problems may be
reported.</para></item>
          <item><para>For R CMD SHLIB on Windows the default 'all'
target only makes the DLL, and no longer call targets 'before' and
'after'.</para></item>
        </items>

        <items name="Rd Conversion">
          <item><para>Rd files have an optional \Rdversion{} section,
which if missing defaults to 1.0. There is support for version 1.1, a
slightly modified version with the following changes:</para>
          <unorderedlist>
            <item><para>The warnings for \code{} inside example are
suppressed.</para></item>
            <item><para>Whitespace between arguments in \item and
\section is accepted without a warning (see below).</para></item>
            <item><para>$ is treated literally in text, even for latex
conversions.</para></item>
            <item><para>\ is only an escape before % { } \
.</para></item>
            <item><para>\R, \dots and \ldots can be followed by {},
and it is recommended that they when not followed by
whitespace.</para></item>
            <item><para>The obsolete interpretation of \Alpha etc is
no longer done.</para></item>
          </unorderedlist></item>
          <item><para>Rd conversion now handles ^ ~ &lt; &gt; |
correctly in non-code environments (such as \samp), and # and _ even
in latex conversion (but $ still needs to be escaped in version
1.0).</para></item>
          <item><para>Whitespace between first and second arguments is
now accepted for \item and \section, e.g. \item{foo} {some value}.
Previously arguments after whitespace were silently ignored, and a
warning is given for version 1.0 files.</para></item>
          <item><para>The Rd files created by prompt() and friends are
declared to be version 1.1.</para></item>
          <item><para>\alias now supports the escaping of { as well as
of %, and this is recommended.</para></item>
          <item><para>parse_Rd(), an experimental parser for Rd files,
and Rd2txt(), Rd2HTML(), Rd2latex() and Rd2ex(), even more
experimental converters, have been added to package
'tools'.</para></item>
          <item><para>R CMD check runs the package's Rd files through
parse_Rd() for a stricter syntax check. This can be suppressed by
setting _R_CHECK_RD_PARSE_ to FALSE.</para></item>
          <item><para>Added markup \verb, which displays like \code,
but parses as verbatim text. Currently only supported by parse_Rd()
and Rd2HTML().</para></item>
        </items>

        <items name="Installation">
          <item><para>The shell used by the 'R' script and other shell
scripts intended to be run directly can be specified at installation
time by setting the (precious) configure variable
R_SHELL.</para></item>
          <item><para>libtool has been updated to
2.2.6a.</para></item>
          <item><para>--with-ICU is now the default: this means that
ICU will be used for collation on Mac OS &gt;= 10.4.</para></item>
          <item><para>make install-tests can be used to install the
test files, to allowed an installed version of R to be tested -- see
the R-admin manual. This is also supported by the function
testInstalledPackages() in package 'tools'.</para></item>
          <item><para>'make install' using a parallel make should now
work.</para></item>
          <item><para>'make check' now always re-makes and re-runs the
package examples, which are now collated in the locale's order (and
not ASCII order).</para></item>
          <item><para>configure will now set the default optimization
level for gfortran on x86_64 Linux to -O as -O2 has caused problems
with gfortran 4.3.x.</para></item>
        </items>

        <items name="Package Installation">
          <item><para>install.packages() is able to infer that
repos=NULL was intended from the extension on the file name specified
as 'pkgs'.</para>
          <para>On Mac OS X it now supports local binary packages with
.tar.gz extension. Nonetheless .tgz remains the preferred extension
and is expected in repositories.</para>
          <para>It now checks &gt;= version dependencies for dependent
packages, and so will install a newer version of a dependency if
needed and available on the repositories.</para>
          <para>The library being installed into is considered when
looking for installed packages if it is not already part of
.libPaths() (as INSTALL already does).</para>
          <para>It has a new argument 'Ncpus' to support parallel
installs of source packages.</para></item>
          <item><para>HTML links will be resolved first to the
standard packages: this avoids other installed packages diverting help
on e.g. qr() and plot() to themselves. The HTML files are only
"touched" if they have changed.</para></item>
          <item><para>A check is done that the R files can be parsed:
this both prevents a broken package without lazy-loading from being
installed and gives better diagnostics.</para></item>
          <item><para>install.packages() gains a 'configure.vars'
argument, and both this and 'configure.args' get their defaults from
options().</para></item>
          <item><para>There is a unified R script for INSTALL on both
Unix-alike and Windows that takes option names used by either in the
past.</para>
          <para>It adds --no-multiarch to disable building other than
the main sub-architecture, and allows multiple instances of
--configure-args and --configure-vars (which will be
concatenated).</para>
          <para>New option --install-tests will install any
package-specific tests.</para></item>
          <item><para>Times in the Packaged: and Built: fields are now
recorded in UTC, and in most cases in ISO 8601 format.</para></item>
        </items>

        <items name="C-level Facilities">
          <item><para>A helper function, asCharacterFactor, converts
from factors to character vectors.</para></item>
        </items>

        <items name="Bug Fixes">
          <item><para>The postscript() output for setting text is
faster and smaller.</para></item>
          <item><para>Subsetting a data frame with duplicate column
names without selecting columns (e.g. z[i,]) no longer makes the
column names unique. This was never documented, but some packages have
assumed it.</para></item>
          <item><para>data.frame() no longer ignores row names on
objects if the first name is empty. (PR#13230: this has been the
behaviour for a long time, but apparently undocumented.)</para></item>
          <item><para>deparse(control="S_compatible") now never uses
backticks.</para></item>
          <item><para>X-spline drawing is improved for cases where
the control points are located well off the edges of the device.</para>
          <para>The symptom of this problem is the error "reached
MAXNUMPTS".</para></item>
          <item><para>exists() with mode= "any" will no longer run an
active binding's function.</para></item>
          <item><para>format(c(1 + 2i, NA)) no longer has extraneous
space in "  NA".</para></item>
          <item><para>mood.test() could fail in 2.8.x on large samples
because of integer overflow.</para></item>
          <item><para>heatmap() without a dendrogram could fail.
(PR#13512)</para></item>
          <item><para>Checks for missing values will no longer
occasionally result in an infinite loop or stack overflow error,
depending on the compiler. Active bindings are now always considered
to be non-missing.</para></item>
          <item><para>Rd conversion was not accepting \p (as in \pkg}
or (when using Perl 5.10.x) \k (as in \kbd) in any preamble text in a
\value{} section, since those are nowadays interpreted by Perl.
(PR#13575)</para></item>
          <item><para>if(as.raw(1)) TRUE  now works as expected.
(PR#13630) Also,  c(as.raw(12), TRUE) or c(raw(3), pi)
do.</para></item>
          <item><para>duplicated(&lt;data frame&gt;, incomparables =
NA) now gives the intended error message. (PR#13632)</para></item>
          <item><para>name handling of as.data.frame() has been
sanitized somewhat</para></item>
          <item><para>Evaluating an assignment expression with a
string on the left hand side no longer destructively changes the
string to a symbol in the expression.</para></item>
        </items>
      </change>

      <change from="2.8.0" to="2.8.1">
        <items name="New features">
          <item><para>sum() now has a method for "difftime" objects
(via the Summary group).</para>
          <para>max(), min() and range() applied to "difftime"
object(s) now return a result in the common units of the objects, if
there is one.</para></item>
          <item><para>installed.packages() is now tolerant of
malformed DESCRIPTION files in installed packages (it ignores them,
with a warning).</para></item>
          <item><para>qt() now works for 0 &lt; df &lt;
1.</para></item>
          <item><para>For consistency with matrix() and array(),
dimnames(x) &lt;- list() removes the dimnames (as assigning NULL would
do). It was previously an error.</para></item>
          <item><para>nlminb() copies names from 'start' to the
parameter vector used (for consistency with optim()).</para></item>
          <item><para>legend() gains a 'title.col' argument: the title
colour was previously set from the first element of 'text.col' (which
remains the default).</para></item>
          <item><para>In an Rd file, use of top-level \itemize{}
inside a \value{} block is unnecessary and almost always gave a faulty
conversion. Most cases are now detected and corrected, but give a
warning as such code will not work correctly in earlier versins of
R.</para>
          <para>Also, use of \code{} inside a code block such as
\examples{} will give a erroneous conversion that is now detected and
warned against.</para></item>
          <item><para>Autoflushing of stdout is turned on when Rd
processing, so warnings/error are likely to appear in the right place
in redirected output (such as that from R CMD check).</para></item>
        </items>

        <items name="Utilities">
          <item><para>R_PDFLATEXCMD is added to the environment
variables set by 'R CMD' and is used by R CMD Rd2dvi.</para>
          <para>R_LATEXCMD, R_PDFLATEXCMD, R_MAKEINDEXCMD and
R_DVIPSCMD default to 'latex', 'pdflatex', 'makeindex' and 'dvips'
respectively if no suitable executable was found at configure time
(since they might well be available at run time, particularly for
binary installations of R). This affects R CMD Rd2dvi and
help(offline=TRUE).</para>
          <para>R CMD Rd2dvi now gives an explicit error message if
latex (or pdflatex) fails.</para>
          <para>R CMD Rd2dvi gains a --no-index argument: processing
some special characters on PDF indices gave errors which used to be
ignored.</para></item>
        </items>

        <items name="Deprecated and Defunct">
          <item><para>R CMD INSTALL --with-package-versions is
deprecated (and support has always been incomplete on Windows).</para>
          <para>So is install.packages(installWithVers =
TRUE).</para></item>
          <item><para>Rd conversion to Sd and Ssgm is now deprecated
as we no longer have any means to check the results (and Sd is long
obsolete).</para></item>
        </items>

        <items name="Bug Fixes">
          <item><para>add1.glm() no longer warns if applied to a
binomial glm with a factor response.</para></item>
          <item><para>aggregate.data.frame() now does something
sensible with a zero-column 'x' rather than failing with an obscure
error message. It gives an explicit error message if called with a
zero-row 'x'.</para></item>
          <item><para>integrate() now accepts integer results from
f(): as documented, but only double was accepted.</para></item>
          <item><para>contrib.url() produced an incorrect URL for the
type "mac.binary".</para></item>
          <item><para>  pairwise.wilcox.test() did not pass on the
'paired' argument (caught by Matthias Kohl)</para></item>
          <item><para>bmp(), jpeg(), and png() on unix with
type="cairo" would segfault on closure if the output file could not be
opened.</para></item>
          <item><para>tiff() on unix would not write the output file
for the first page when multiple pages were plotted.</para></item>
          <item><para>  str(1 + structure(1, class = "test")) no
longer recurses indefinitely.</para></item>
          <item><para>pf(x, .., ncp, lower.tail=FALSE, log=TRUE) is
much more accurate for large x now.</para></item>
          <item><para>dev2bitmap() failed in 2.8.0 if 'taa' and 'gaa'
were both NA.</para></item>
          <item><para>Under rare circumstances equality tests for
character strings could fail to report equality in 2.8.0 in the same
way as 2.7.2. (This needed a current encoding of Latin-1 or UTF-8, one
string whose encoding was marked as that encoding and one that was
marked as "unknown". In that circumstance the two strings are not
actually known to be equal, but earlier versions of R assumed that
"unknown" meant the current encoding, and this is done once
again.)</para></item>
          <item><para>R CMD config could echo messages from GNU make
if called from within a Makefile (as e.g. package Rcpp did),
especially from within a parallel make run.</para></item>
          <item><para>Rounding error could affect window(extend=TRUE)
when applied to monthly series. (PR#13272)</para></item>
          <item><para>Offline help on a Unix-alike now works even if
options "latexcmd" and "dvipscmd" contain spaces (e.g. "dvips
-Pmy_printer").</para>
          <para>Informative error messages are given if running latex
or dvips fail.</para></item>
          <item><para>Using plot.lm() on a "glm" object since 2.7.1
with which=5 caused the Pearson rather than deviance residuals to be
used in which=2 or 3 (including in the default case).</para>
          <para>plot.lm() did not report on omitting observations with
leverage one if they also had residual exactly zero. This was seen in
example(occupationalStatus).</para></item>
          <item><para>deparse(nlines=) no longer pads short results
with blank lines. (PR#13299)</para></item>
          <item><para>legend(xpd=) now restores 'xpd' correctly.
(PR#12756)</para></item>
          <item><para>The "formula" method for lines() now works if
'subset' is supplied and no 'data' argument (as that for points()
did).</para></item>
          <item><para>Sweave() now takes the defaults for the options
'pdf.version' and 'pdf.encoding' of its RweaveLatex driver from
pdf.options().</para></item>
          <item><para>prettyNum(x, drop0trailing=TRUE) treated
"1.1e20" as "1.1e2" and hence str() did as well, in 2.8.0
only.</para></item>
          <item><para>dchisq(x, df, ncp) no longer hangs for large x
and ncp &gt; 0, and is more accurate in some cases
(PR#13309).</para></item>
          <item><para>installed.packages(lib.loc = D, priority="NA")
now also works when D contains a single package.
(PR#13332)</para></item>
          <item><para>legend(...., merge=TRUE) now warns and has no
effect in the case where no line segments are drawn.
(PR#13340)</para></item>
          <item><para>transform.data.frame() works better when two
or more columns are added.</para></item>
          <item><para>Deparsing argument lists with non-syntactic
names (e.g. that for transform()) now uses backticks rather than
double quotes to produce syntactically valid output.</para></item>
          <item><para>matrix() failed to check for 0-length
'dimnames': it now treats them as NULL (as array did).
(PR#13361)</para></item>
          <item><para>0^NA is now NA, not Inf, consistent with x^NA, x
!= 1.</para></item>
          <item><para>anova.mlm() did not work if T had only one row
(including e.g. the case M = ~1).</para></item>
          <item><para>axis.POSIXct() mislabelled for some time ranges
of a few hours</para></item>
          <item><para>mantelhaen.test() with 'exact=FALSE' was not
respecting 'alternative'. It now does one-sided tests similarly to
prop.test().</para></item>
          <item><para>anova.mlm() had trouble with some designs where
near-zero rows of the tranformation matrix were not
removed</para></item>
          <item><para>Rd conversion was handling expressions like
'\item{foo}{see \eqn{x}}' (with one argument to \eqn immediately
followed by a right brace) incorrectly, sometimes giving a spurious
warning about 'missing text'.</para></item>
          <item><para>R CMD INSTALL used the C locale to install the
DESCRIPTION file, and so escaped non-ASCII characters in packages with
a declared encoding of "latin1" or "UTF-8". (However, the installed
DESCRIPTION file was rarely used since the dumped metadata are
available.)</para></item>
          <item><para>xspline() now respects inline par
settings.</para>
          <para>It and grid.xspline() now handle the special case of
only two control points, and splines with control points that are
located well outside the device (e.g., a zoomed view of a larger
curve). (Both cases were giving the error "reached
MAXNUMPTS").</para></item>
          <item><para>In setClass("C", contains="list"); x &lt;-
new("C", 1:3), x[2:3] now remains of class "C". So does rep(x, 2) or
rep.int(x, 3).</para></item>
          <item><para>median.default() now also works for
"numeric"-like vectors.</para></item>
          <item><para>The pdf() device can now handle the case where
an image uses a very large number of colours with different levels of
semi-transparency (alpha-values). It used to segfault. (Also
PR#13264.)</para></item>
          <item><para>window() failed to apply a fuzz to 'start' or
'end' and so sometimes warned incorrectly for time series with 'freq'
not a power of two (e.g. 12 or 24).</para></item>
          <item><para>unique.default() now preserves the "tzone"
attribute on "POSIXct" objects.</para></item>
          <item><para>If all the packages had dependency lists of
equal lengths, occasionally install.packages() would compute an
incorrect sort order.</para></item>
          <item><para>col(x, as.factor=TRUE) and row(x,
as.factor=TRUE) would fail if x had no column (row) names. It was
documented incorrectly, and now returns a matrix factor.</para></item>
          <item><para>setRepositories() failed if "pkgType" was set to
"mac.binary.leopard".</para></item>
          <item><para>formals&lt;-() changed the body of the function
if this was a length-one list.</para></item>
          <item><para>body&lt;-() failed if the function had no
arguments. It now warns if discarding elements from a 'value' of type
"expression".</para></item>
          <item><para>qr.coef() failed in the complex case for
non-square systems. (PR#13305)</para></item>
          <item><para>plot.dendrogram(horizontal=TRUE) did not not
plot 'edgetext' at the correct locations. (PR#13313)</para></item>
          <item><para>The starting point for plot.acf(ci.type="ma")
was lag 0 when it should have been lag 1. (PR#13071)</para></item>
          <item><para>  There was an obscure bug with srcrefs, which
could put the parser into a condition giving "Error: bad value" on any
input</para></item>
        </items>
      </change>

      <change from="2.7.2" to="2.8.0">
        <items name="Significant User-visible Changes">
          <item><para>var(), cov(), cor(), sd() etc now by default
(when 'use' is not specified) return NA in many cases where they
signalled an error before.</para></item>
        </items>

        <items name="New Features">
          <item><para>abbreviate() gains an optional argument 'strict'
allowing cheap and fast strict abbrevation.</para></item>
          <item><para>The "lm" methods of add1(), anova() and drop1()
warn if they are mis-used on an essentially exact fit.</para></item>
          <item><para>as.array() is now generic, gains a '...'
argument.</para></item>
          <item><para>New function as.hexmode() for converting
integers in hex format. format.hexmode() and as.character.hexmode()
gain an 'upper.case' argument.</para></item>
          <item><para>bitmap() and dev2bitmap() gain support for
anti-aliasing. The default type has been changed to 'png16m', which
supports anti-aliasing.</para></item>
          <item><para>Box.test() gains a 'fitdf' argument to adjust
the degrees of freedom if applied to residuals.</para></item>
          <item><para>browseURL() has a new argument 'encodeIfNeeded'
to use URLencode() in cases where it seems likely that would be
helpful. (Unfortunately, those are hard to guess.)</para></item>
          <item><para>by() gains a 'simplify' argument, passed to
tapply().</para></item>
          <item><para>capabilities() gains a new argument "tiff" to
report if tiff() is operational.</para></item>
          <item><para>chol2inv() now treats &lt;numeric(1)&gt; as a [1
x 1]-matrix.</para></item>
          <item><para>cov() and cor() have the option 'use =
"everything"' as default, and so does var() with its default 'na.rm =
FALSE'. This returns NA instead of signalling an error for NA
observations. Another new option is 'use = "na.or.complete"' which is
the default for var(*, na.rm=FALSE). var(double(0), na.rm= L) now
returns NA instead of signalling an error, for both L = TRUE or FALSE,
as one consequence of these changes.</para></item>
          <item><para>data.matrix() now tries harder to convert
non-numeric columns, via as.numeric() or as(,
"numeric").</para></item>
          <item><para>dev.interactive() is able to recognize the
standard screen devices if getOption("device") is a function (as well
as by name).</para></item>
          <item><para>dev.new() gains a '...' argument which can be
used to pass named arguments which will be used if appropriate to the
device selected.</para></item>
          <item><para>dimnames(x) &lt;- value extends 'value' if it a
list and too short, and 'x' is an array. This allows constructions
such as dimnames(x)[[1]] &lt;- 1:3 to work whether or not 'x' already
has dimnames.</para></item>
          <item><para>format(), formatC() and prettyNum() gain a new
argument 'drop0trailing' which can be used to suppress trailing
"0"s.</para></item>
          <item><para>format() now works for environments; also
print(env) and str(env) share the same code for
environments.</para></item>
          <item><para>It is now possible to create and open a
text-mode gzfile() connection by explicitly using e.g.
open="rt".</para></item>
          <item><para>New help.request() function for compiling an
e-mail to R-help according to "the rules". It is built on the new
utility, create.post() on which also bug.report() is based now; both
thanks to a contribution by Heather Turner.</para></item>
          <item><para>help.search() now assumes that non-ASCII items
are in latin1 if that makes sense (all known examples on CRAN
are).</para></item>
          <item><para>HoltWinters() and decompose() use a
(statistically) more efficient computation for seasonal fits (they
used to waste one period).</para></item>
          <item><para>intToUtf8() and intToBits() now accept numeric
vectors, truncating them to integers.</para></item>
          <item><para>is.unsorted() gains an argument 'strictly'. It
now works for classed objects with a &gt;= or &gt; method (as
incorrectly documented earlier).</para></item>
          <item><para>library() no longer warns about the masking
objects that are identical(.,.) to those they mask.</para></item>
          <item><para>lockBinding(), unlockBinding(),
lockEnvironment() and makeActiveBinding() now all return invisibly
(they always return NULL).</para></item>
          <item><para>mood.test() now behaves better in the presence
of ties.</para></item>
          <item><para>na.action() now works on fits of classes "lm",
"glm", ....</para></item>
          <item><para>optim(.., method="SANN", .., trace=TRUE) is now
customizable via the 'REPORT' control argument, thanks to code
proposals by Thomas Petzoldt.</para></item>
          <item><para>The 'factory-fresh' defaults for
options("device") have been changed to refer to the devices as
functions in the grDevices namespace and not as names. This makes it
more likely that the incorrect (since R 2.5.0) assumption in packages
that get(getOption("device"))() will work will catch users of those
packages.</para></item>
          <item><para>pch=16 now has no border (for consistency with
15, 17, 18) and hence is now different from pch=19.</para></item>
          <item><para>pdf() has new arguments 'useDingbats' (set this
to FALSE for use with broken viewers) and 'colormodel'. It now only
references the ZapfDingbats font if it is used (for small opaque
circles).</para>
          <para>The default PDF version is now 1.4, since viewers that
do not accept that are now rare.</para>
          <para>Different viewers were rendering consecutive text()
calls on a pdf() device in different ways where translucency was
involved. The PDF generated has been changed to force each call to be
rendered separately (which is the way xpdf or ghostscript was
rendering, but Acrobat was forming a transparency group), which is
consistent with other graphics devices supporting
semi-transparency.</para></item>
          <item><para>plot.dendrogram() has new arguments (xlim, ylim)
which allows zooming into a hiearchical clustering
dendrogram.</para></item>
          <item><para>plot.ecdf() now defaults to pch=19 so as to
better convey the left-closed line segments.</para></item>
          <item><para>plot.histogram() gains an 'ann'
argument</para></item>
          <item><para>plot(&lt;lm_obj&gt;) now warns when it omits
points with leverage one from a plot.</para></item>
          <item><para>Plotmath now recognizes 'aleph' and 'nabla' (the
Adobe Symbol 'gradient' glyph) as symbol names.</para></item>
          <item><para>polyroot() no longer has a maximum
degree.</para></item>
          <item><para>The alpha/alphamax argument of the 'nls' and
'mle' profile() methods is used to compute confidence limits for
univariate t-statistics rather than a confidence region for all the
parameters (and not just those being profiled).</para></item>
          <item><para>quantile.default() allows 'probs' to stray just
beyond [0, 1], to allow for computed values.</para></item>
          <item><para>New functions rawConnection() and
rawConnectionValue() allow raw vectors to be treated as
connections.</para></item>
          <item><para>read.dcf() now consistently gives an error for
malformed DCF.</para></item>
          <item><para>read.fwf() no longer passes its default for
'as.is' to read.table(): this allows the latter's default to be
used.</para></item>
          <item><para>readBin(), writeBin(), readChar() and
writeChar() now open a connection which was not already open in an
appropriate binary mode rather than the default mode.</para>
          <para>readLines(), cat() and sink() now open a connection
which was not already open in an appropriate text mode rather than the
default mode.</para></item>
          <item><para>readCitationFile() (and hence citation) now
reads a package's CITATION file in the package's declared encoding (if
there is one).</para></item>
          <item><para>The behaviour of readLines() for incomplete
final lines on binary-mode connections has been changed to be like
blocking rather than non-blocking text-mode connections.</para></item>
          <item><para>A new reorder.character() method has been added.
This allows use of 'reorder(x, ...)' as a shorthand for
'reorder(factor(x), ...)' when 'x' is a character
vector.</para></item>
          <item><para>round() now computes in long doubles where
possible so the results are more likely to be correct to
representation error.</para></item>
          <item><para>rug() now uses axis()'s new arguments from
2.7.2, hence no longer draws an axis line.</para></item>
          <item><para>save() (optionally, but by default) checks for
the existence of objects before opening the file/connection (wish of
PR#12543).</para></item>
          <item><para>segments(), arrows() and rect() allow
zero-length coordinates. (Wish of PR#11192)</para></item>
          <item><para>set.seed(kind=NULL) now takes 'kind' from a
saved seed if the workspace has been restored or .Random.seed has been
set in some other way. Previously it took the 'currently used' value,
which was "default" unless random numbers had been used in the current
session. Similarly for the values reported by RNGkind(). (Related to
PR#12567.)</para>
          <para>set.seed() gains a 'normal.kind'
argument.</para></item>
          <item><para>setEPS() and setPS() gain '...' to allow other
arguments to be passed to ps.options(), including overriding 'width'
and 'height'.</para></item>
          <item><para>setTimeLimit() function to set limits on the CPU
and/or elapsed time for each top-level computation, and
setSessionLimit() to set limits for the rest of the
session.</para></item>
          <item><para>splinefun() has a new method = "monoH.FC" for
monotone Hermite spline interpolation.</para></item>
          <item><para>sprintf() optionally supports the %a/%A notation
of C99 (if the platform does, including under Windows).</para></item>
          <item><para>str()'s default method gains a 'formatNum'
function argument which is used for formatting numeric vectors. Note
that this is very slightly not backward compatible.</para></item>
          <item><para>The summary() method for class "ecdf" now uses a
print() method rather than printing directly.</para></item>
          <item><para>summary.manova() uses a stabler computation of
the test statistics, and gains a 'tol' argument to allow highly
correlated responses to be explored (with probable loss of accuracy).
Similar changes have been made to anova.mlm() and
anova.mlmlist().</para></item>
          <item><para>Sweave() now writes concordance information
inside a \Sconcordance LaTeX macro, which allows it to be inserted
into PDF output.</para></item>
          <item><para>system.time() now uses lazy evaluation rather
than eval/substitute, which results in more natural scoping.
(PR#11169)</para></item>
          <item><para>  In table(), 'exclude=NULL' now does something
also for factor arguments. A new 'useNA' argument allows you to
control whether to add NA levels unconditionally or only when present
in data. A new convenience function addNA() gives similar
functionality by adding NA levels to individual factors.</para></item>
          <item><para>unlink() tries the literal pattern if it does
not match with wildcards interpreted -- this helps with e.g.
unlink("a[b") which previously needed to be
unlink("a\\[b").</para></item>
          <item><para>update.packages() gains an argument 'oldPkgs',
where new.packages() and old.packages() get 'instPkgs'. These allow
consideration of only subsets of packages instead of all installed
ones.</para></item>
          <item><para>which(b) is somewhat faster now, notably for
named vectors, thanks to a suggestion by Henrik
Bengtsson.</para></item>
          <item><para>New generic function xtfrm() as an auxiliary
helper for sort(), order() and rank(). This should return a numeric
vector that sorts in the same way as its input. The default method
supports any class with ==, &gt; and is.na() methods but specific
methods can be much faster.</para>
          <para>As a side-effect, rank() will now work better on
classed objects, although possibly rather slowly.</para></item>
          <item><para>X11() and capabilities("X11") now catch some X11
I/O errors that previously terminated R. These were rare and have only
be seen with a misconfigured X11 setup on some versions of
X11.</para></item>
          <item><para>The handling of nuls in character strings has
been changed -- they are no longer allowed, and attempting to create
such a string now gives a truncation warning (unless
options("warnEscapes") is false).</para></item>
          <item><para>The user environment and profile files can now
be specified via environment variables 'R_ENVIRON_USER' and
'R_PROFILE_USER', respectively.</para></item>
          <item><para>?pkg::topic and ?pkg:::topic now find help on
'topic' from package 'pkg' (and not help on :: or :::).</para></item>
          <item><para>??topic now does help.search("topic");
variations such as ??pkg::topic or field??topic are also supported.
</para></item>
          <item><para>There is support for using ICU (International
Components for Unicode) for collation, enabled by configure option
--with-ICU on a Unix-alike and by a setting in MkRules on Windows.
Function icuSetCollate() allows the collation rules (including the
locale) to be tuned. [Experimental]</para></item>
          <item><para>If S4 method dispatch is on and S4 objects are
found as attributes, show() rather than print() is used to print the
S4 attributes.</para></item>
          <item><para>Starting package tcltk without access to Tk
(e.g. no available display) is now a warning rather than an error, as
Tcl will still be usable. (On most platforms it was possible to
inhibit Tk by not having DISPLAY set, but not on Windows nor Mac OS X
builds with --with-aqua.)</para></item>
          <item><para>Using $ on a non-subsettable object (such as a
function) is now an error (rather than returning NULL).</para></item>
          <item><para>Hexadecimal numerical constants (such as
0xab.cdp+12) may now contain a decimal point.</para></item>
          <item><para>PCRE has been updated to version 7.8 (mainly bug
fixes).</para></item>
        </items>

        <items name="New Features in Package 'methods'">
          <item><para>S3 classes that are registered by a call to
setOldClass() now have the S3 class as a special slot, and therefore
so do any S4 classes that contain them. This mechanism is used to
support S4 classes that extend S3 classes, to the extent
possible.</para>
          <para>The treatment of special pseudo-classes "matrix",
"array", and "ts" as S4 classes has also been modified to be more
consistent and, within limitations imposed by special treatment of
these objects in the base code, to allow other classes to contain
them.</para>
          <para>A general feature added to implement "ts" and also
"data.frame" as S4 classes is that an S4 class definition can be
supplied to setOldClass() when the S3 class has known attributes of
known class.</para>
          <para>setOldClass() now saves all the S3 inheritance,
allowing the calls to be built up in stages, rather than including all
the S3 classes in each call. Also allows as(x,"S3") to generate valid
S3 inheritance from the stored definition.</para></item>
          <item><para>S4 methods may now be defined corresponding to
"...", by creating a generic function that has "..." as its signature.
A method will be selected and called if all the arguments matching
"..." are from this class or a subclass.</para></item>
          <item><para>New functions S3Part() and S3Class() provide
access to the corresponding S3 object and class for S4 classes that
extend either an S3 class or a basic R object type.</para></item>
          <item><para>show(&lt;class definition&gt;) now also shows
the class name.</para></item>
        </items>

        <items name="Installation">
          <item><para>If sub-architectures are used, a copy of Rscript
is installed in ${R_HOME}/bin/exec${R_ARCH} (since that in
${R_HOME}/bin and /usr/bin might be overwritten in a subsequent
installation).</para></item>
        </items>

        <items name="Package Installation">
          <item><para>LazyLoad: yes is now the default, so packages
wanting to avoid lazy loading must set 'LazyLoad: no' (or an
equivalent value) in the DESCRIPTION file.</para></item>
          <item><para>R CMD INSTALL will now fail if it finds a
non-executable 'configure' script in the package -- this usually
indicates a file system with insufficient permissions. If a
non-executable 'cleanup' script is found and either --clean or
--preclean is used, a warning is given.</para></item>
        </items>

        <items name="Deprecated and Defunct">
          <item><para>Use in packages of the graphics headers
Rdevices.h and Rgraphics.h is defunct: they are no longer
installed.</para></item>
          <item><para>options("par.ask.default") is defunct in favour
of "device.ask.default".</para></item>
          <item><para>The 'device-independent' family "symbol" is
defunct: use font=5 (base) or fontface=5 (grid) instead.</para></item>
          <item><para>gammaCody() is defunct.</para></item>
          <item><para>par("gamma") is defunct.</para></item>
          <item><para>'methods' package functions getAccess(),
getAllMethods(), getClassName(), getClassPackage(), getExtends(),
getProperties(), getPrototype(), getSubclasses, getVirtual(),
mlistMetaName(), removeMethodsObject() and seemsS4Object() are
defunct.</para></item>
          <item><para>Use of a non-integer .Random.seed is now an
error. (R itself has never generated such values, but user code has,
and R &gt;= 2.6.0 has given a warning.)</para></item>
          <item><para>methods::allGenerics() is
deprecated.</para></item>
          <item><para>In package installation, SaveImage: yes is now
ignored, and any use of the field will give a warning.</para></item>
          <item><para>unserialize() no longer accepts character
strings as input.</para></item>
          <item><para>The C macro 'allocString' has been removed --
use 'mkChar' and variants.</para></item>
          <item><para>Use of allocVector(CHARSXP ...) is deprecated
and gives a warning.</para></item>
        </items>

        <items name="Utilities">
          <item><para>The default for 'stylepath' in Sweave's
(default) RweaveLatex driver is now FALSE rather than TRUE if
SWEAVE_STYLEPATH_DEFAULT is unset : see ?RweaveLatex. To support this,
tools::texi2dvi adds the R 'texmf' directory to the input search
path.</para></item>
          <item><para>R CMD Rd2dvi now previews PDF output (as was
documented) if R_PDFVIEWER is set (as it will normally be on a
Unix-alike but not on Windows, where the file association is used by
default).</para></item>
          <item><para>R CMD check checks for binary executable files
(which should not appear in a source package), using a suitable 'file'
if available, else by name.</para></item>
          <item><para>R CMD check now also uses codetools' checks on
the body of S4 methods.</para></item>
        </items>

        <items name="C-level Facilities">
          <item><para>R_ReadConsole will now be called with a buffer
size of 4096 bytes (rather than 1024): maintainers of alternative
front-ends should check that they do not have a smaller
limit.</para></item>
          <item><para>Graphics structure NewDevDesc has been renamed
to DevDesc. For now there is a compatibility define in
GraphicsDevice.h, but it will be removed in R 2.9.0.</para></item>
          <item><para>PROTECT and UNPROTECT macros now work even with
R_NO_REMAP.</para></item>
        </items>

        <items name="Bug Fixes">
          <item><para>@ now gives an error (and not just a warning) if
it is being applied to a non-S4 object.</para></item>
          <item><para>R CMD appends (not prepends) R's texmf path to
TEXINPUTS.</para></item>
          <item><para>Objects generated by new() from S4 classes
should now all satisfy isS4(object). Previously, prototypes not of
object type S4 would not be S4 objects. new() applied to basic, non-S4
classes still will (and should) return non-S4 objects.</para></item>
          <item><para>Functions writing to connections such as
writeLines(), writeBin(), writeChar(), save(), dput() and dump() now
check more carefully that the connections are opened for writing,
including connections that they open themselves.</para>
          <para>Similarly functions which read such as readLines(),
scan(), dcf() and parse() check connections for being open for
reading.</para></item>
          <item><para>Equality comparison of factors with &lt;NA&gt;
levels now works correctly again.</para></item>
          <item><para>Repainting of open X11 View() windows is now
done whilst an X11 dataentry window is in use.</para></item>
          <item><para>Indexing of data frames with NA column names and
a numeric or logical column index works again even if columns with NA
names are selected.</para></item>
          <item><para>on.exit() has been fixed to use lexical scope in
determining where to evaluate the exit action when the on.exit
expression appears in a function argument.</para></item>
          <item><para>rank() now consistently returns a double result
for ties.method = "average" and an integer result otherwise.
Previously the storage mode depended on 'na.last' and if any NAs were
present.</para></item>
          <item><para>The "lm" methods of add1(), and drop1() now also
work on a model fit with  na.action = na.exclude.</para></item>
          <item><para>median(c(x = NA_real_)) no longer has spurious
names().</para></item>
          <item><para>isoreg(x, y) now returns the correct result also
when x has ties, in all cases.</para></item>
          <item><para>What na.action() does is now correctly
documented.</para></item>
          <item><para>source() with echo=TRUE now behaves like
ordinary automatic printing, by using methods::show() for S4
objects.</para></item>
          <item><para>Several bugs fixed in `?` with topics: it
previously died trying to construct some error messages; for S4
methods, class "ANY" should be used for omitted arguments and default
methods.</para></item>
          <item><para>trace() should create missing traceable classes
in the global environment, not in baseenv() where other classes will
not be found.</para></item>
          <item><para>Class inheritance using explicit coerce= methods
via setIs() failed  to coerce the argument in method dispatch. With
this fixed, a mechanism was needed to prohibit such inheritance when
it would break the generic function (e.g., initialize).</para></item>
          <item><para>RSiteSearch() encodes its query (it seems this
is occasionally needed on some platforms, but encoding other fields is
harmful).</para></item>
          <item><para>'incomparables' in match() was looking up
indices in the wrong table.</para></item>
          <item><para>write.dcf() did not escape "." according to
Debian policy (PR#12816).</para></item>
          <item><para>col2rgb() sometimes opened a graphics device
unnecessarily, and col2rgb(NA) did not return a transparent color, as
documented.</para></item>
          <item><para>pdf(family="Japan") [and other CIDfonts] no
longer seg.faults when writing "western" text strings.</para></item>
          <item><para>	as.list() applied to an environment now forces
promises and returns values.</para></item>
          <item><para>Promises capturing calls to sys.parent() and
friends did not work properly when evaluated via method dispatch for
internal S3 generics.</para></item>
          <item><para>The default "pkgType" option for non-CRAN builds
of R on Mac OS X is now correctly "source" as
documented.</para></item>
          <item><para>The default R_LIBS_USER path in AQUA builds now
matches the Mac-specifc path used by the Mac GUI:
~/Library/R/x.y/library</para></item>
          <item><para>splinefun() with natural splines incorrectly
evaluated derivatives to the left of the first knot.
(PR#13132)</para></item>
          <item><para>anova(glm(..., y=FALSE)) now works.
(PR#13098)</para></item>
          <item><para>cut.Date(x, "weeks") could fail if x has only
one unique value which fell on a week boundary.
(PR#13159)</para></item>
        </items>
      </change>

      <change from="2.7.1" to="2.7.2">
        <items name="Bug Fixes">
          <item><para>within(&lt;dataframe&gt;, { ... }) now also
works when '...' removes more than one column.</para></item>
          <item><para>Attempting to open an X11() device on a
non-existent display when one is already open on another display now
gives a warning rather than terminating R via a fatal X11 error.
(PR#12628)</para></item>
          <item><para>source() did not respect the setting of
options("keep.source") when setting source references.</para></item>
          <item><para>seek() now clears the pushback on a text-mode
connection if used to set a new position. (PR#12640)</para></item>
          <item><para>quartz() would segfault if asked to create a
file for bitmap output which could not be created. This applied also
to the type="quartz" versions of bmp(), jpeg(), png() and
tiff().</para></item>
          <item><para>dnbinom(0, size, mu = &lt;large&gt;) suffered
from cancellation in 2.7.2 only.</para></item>
        </items>

        <items name="New Features">
          <item><para>sprintf() returns elements of the result in
UTF-8 when the format or any character input has a corresponding
element declared as UTF-8. Similarly for paste(), elements of the
result are in UTF-8 when any input to that element is declared as
UTF-8.</para></item>
          <item><para>axis() has new arguments 'col.ticks' and
'lwd.ticks' to allow the colour and line width of ticks to be set
separately from that of the line (e.g. to set one or the other to
transparent or zero width).</para></item>
          <item><para>legend() has a new argument 'box.col' to set the
colour of the enclosing box.</para></item>
          <item><para>legend() gains a 'xpd' argument to make it
easier to place a legend in the margins or outer
margins.</para></item>
          <item><para>stripchart() now passes '...' to title() (as
well as to plot.default() and axis()). (Wish of
PR#12202)</para></item>
          <item><para>help.search() has new argument 'searchEngine' to
go directly to the search form: this is needed by users of Firefox 3
to workaround a bug in interpreting the search results
pages.</para></item>
        </items>

        <items name="Bug Fixes">
          <item><para>Plotmath computed the glyph metrics for the
wrong character (and perhaps for a non-existent one) if this was a
single-byte character with the top bit set. An example was
symbol("\300").</para></item>
          <item><para>sink() and cat() could divert output to a
non-writable connection.</para></item>
          <item><para>phyper(x, 0,0,0) no longer hangs for huge x and
gives 1 for x &gt;= 0. (PR#11813)</para></item>
          <item><para>plnorm(x, ..., log.p=TRUE) is now correct for x
&lt;= 0. (PR#11867)</para></item>
          <item><para>&lt;data.frame&gt;[, ch] gives an error (again!)
when ch is a string not exactly matching the column
names</para></item>
          <item><para>data.frame(x=1:2, y=3:4,
row.names=c("a","NA"))[c(2,NA),] has correct row names c("NA,"NA.1")
again.</para></item>
          <item><para>The GUI data editor for dataframes did not
handle escape characters in entries properly. (PR#11897)</para></item>
          <item><para>PCRE has been updated to 7.7 (bugfix
release).</para></item>
          <item><para>package.skeleton() wrongly warned about invalid
code_files names when these were not in the current
directory.</para></item>
          <item><para>shapiro.test(c(0,0,1)) now has P value &gt;= 0
(instead of barely negative).</para></item>
          <item><para>assign() now warns if given a character vector
of length &gt; 1, rather than silently taking the first
element.</para></item>
          <item><para>rcond(&lt;exactly singular matrix&gt;) now gives
0 instead of an error.</para></item>
          <item><para>There was a memory leak in C function ucstoutf8
used by some graphics devices.</para></item>
          <item><para>Plots of profile.mle() objects (package
'stats4') were misbehaving when the 'which' argument had been used in
their calculation.</para></item>
          <item><para>dnbinom(x, size, mu=*, ..) is now more accurate
for very large 'size'. The same applies to pnbinom() and
rnbinom().</para></item>
          <item><para>axis() was ignoring par() mgp[3] if mgp was set
in-line.</para></item>
          <item><para>Closing an X11 View() or dataentry window via
its frame's close control now works better on some window
managers.</para></item>
          <item><para>Calling lapply() was not handling method
dispatch correctly for is.numeric(), is.matrix(), is.array(), log()
and the Math2 group. This affected data.matrix() which incorrectly
regarded "Date" and "POSIXct" objects as numeric, and has been
adjusted to do so as exceptions.</para></item>
          <item><para>package.skeleton() was not looking for
non-function objects in its 'environment' argument.</para></item>
          <item><para>nls() was only finding its 'weights' argument in
the case when all the variables in the formula were of the same length
and hence that model.frame() could be used.</para>
          <para>It was silently ignoring 'subset' and 'na.action'
except in that case. Now they are ignored only if 'data' is a list and
variables taken from 'data' are not all of the same length, in which
case a warning is given.</para></item>
          <item><para>The 'mle' confint() method now takes 'level'
into account when setting 'alpha' for the profile.</para></item>
          <item><para>within() was not handling correctly expressions
that produced NULL columns. (PR#11131)</para></item>
          <item><para>dev.print() and dev.copy2{eps,pdf}() now ensure
that the current device is restored as the active device even if an
error occurs. (PR#9801)</para></item>
          <item><para>as.Date() could fail to convert character
strings representing days on which midnight did not exist in the
current timezone (as happened in parts of Africa on
1960-01-01).</para></item>
          <item><para>The automatic placement of legend() with 'title'
and a reversed 'x' axis was incorrect. (PR#12019)</para></item>
          <item><para>The use of multiple packages in 'LinkingTo'
works again, and now works when the dependent packages are in the
library to be installed to (but not in the library path seen by R
--vanilla).</para></item>
          <item><para>bxp() (and hence boxplot) now respects in-line
graphical parameters 'xaxp'/'yaxp' as appropriate.
(PR#11463)</para></item>
          <item><para>barplot(log = "y") failed if there were NAs in
the 'height' argument. (PR#11585)</para></item>
          <item><para>pbeta() is more accurate in some cases with
extreme values of 'ncp'. (PR#11277).</para></item>
          <item><para>edit.data.frame() no longer fails if called on a
0-column data frame and no column is created.</para></item>
          <item><para>pchisq(x, df=0) was always one even for x &lt;
0; similarly for pgamma(x, alpha=0).</para></item>
          <item><para>add1() and drop1() now return a P-value of NaN
in cases with df=0 for test="Chisq" (they gave NaN until pchisq was
altered in R 2.6.2).</para></item>
          <item><para>The default methods of drop1() and add1() now
re-evaluate in the object's formula environment, rather than simply in
the parent</para></item>
          <item><para>The undocumented limit of 8191 bytes on comments
(from # to the end of the line) in R code has been
removed.</para></item>
          <item><para>qgamma() warns if used with shape &lt; 1e-10,
when it may be unreliable. (PR#12324)</para></item>
          <item><para>Installing a source package was not using the
package's declared encoding (if any) as a default encoding for the
help.search() database in Meta/hsearch.rds. This could cause packages
with a default encoding to have some of their entries rejected by
help.search() in a multi-byte locale (such as a UTF-8
locale).</para></item>
          <item><para>duplicated() and unique() now handle
'incomparables' better, and avoid occasional segfaults
(PR#12551).</para></item>
          <item><para>plot(isoreg(x, y)) now plots the points
correctly when 'x' is unssorted.</para></item>
          <item><para>data.frame(row.names=NULL) once again behaves
differently from the default (as documented).</para></item>
        </items>
      </change>

      <change from="2.7.0" to="2.7.1">
        <items name="New Features">
          <item><para>tools::texi2dvi() has a new argument 'texinputs'
to allow the TeX and bibtex input paths to be specified (even on
MiKTeX).</para></item>
          <item><para>dev.copy2pdf() gains an 'out.type' argument to
allow it to be used with cairo_pdf() or quartz(type =
"pdf").</para></item>
          <item><para>poly() has additional checks against user error
(as in PR#11243).</para></item>
          <item><para>The Mac OS quartz() device draws contiguous
lines much faster.</para></item>
          <item><para>A field containing just a sign is no longer
regarded as numeric (it was on all platforms in 2.7.0, but not on most
in earlier versions of R). Similarly, '.' is now always
non-numeric.</para></item>
          <item><para>CITATION files are now read in Latin-1: quite a
few were failing if used in a multibyte locale such as
UTF-8.</para></item>
          <item><para>The DESCRIPTION file of a package can specify an
'OS_type' field as either 'unix' or 'windows' to confine installation
to that OS type.</para></item>
          <item><para>HoltWinters() now uses optimize() rather than
optim for one-parameter problems which should be more reliable
(PR#11469).</para></item>
          <item><para>axis() now respects the setting of par("xpd")
when clipping.</para></item>
          <item><para>The 'factor' method of format() now preserves
names, dims and dimnames in the same way as for character and numeric
inputs. (PR#11512)</para></item>
          <item><para>read.DIF(*, transpose=TRUE) now allows to
correctly read DIF files produced by some versions of
Excel.</para></item>
        </items>

        <items name="Deprecated and Defunct">
          <item><para>The use of unserialize() on character strings is
deprecated: that was a format used in R &lt; 2.4.0.</para></item>
          <item><para>The use of embedded nuls in character strings is
deprecated: They will no longer be allowed in R 2.8.0.</para></item>
        </items>

        <items name="Utilities">
          <item><para>R CMD check checks for possible check
directories in the sources -- in mid-2008 there were about 20 examples
on CRAN.</para></item>
          <item><para>R CMD build tries harder to clean up the
inst/doc directory from the remnants of earlier builds.</para>
          <para>It also removes any directories with extension
.Rcheck, and files .DS_Store and ._* (created by tar on Mac OS X under
some circumstances: it now sets environment variables to ask for such
files not to be created by that tar.)</para></item>
        </items>

        <items name="Bug Fixes">
          <item><para>Encoding&lt;- on NA_character_ converted it to
"NA".</para></item>
          <item><para>Adobe Symbol was missing from the encodings in
tools::charset_to_Unicode.</para></item>
          <item><para>diag(matrix(x, 0, 0)) now returns a 0-length
vector of the correct mode, instead of always numeric.</para></item>
          <item><para>The parser sometimes accepted invalid quoted
strings in a UTF-8 locale.</para></item>
          <item><para>plot.default(x, y) now dispatches to Axis()
methods whether y is NULL or not.</para></item>
          <item><para>On Mac OS X, the Cocoa Quartz window could close
without warning under certain circumstances (specific autorelease pool
flush).</para></item>
          <item><para>Plotting symbols with separate border and fill
colours (e.g., plot(pch = 21)) now works with transparent 'col', but
opaque or semi-transparent 'bg'. Previously, if 'col' was transparent
then 'bg' was ignored and nothing was drawn.</para></item>
          <item><para>file.path() did not work correctly in 2.7.0 if
the components had different encodings.</para></item>
          <item><para>merge() failed if there were no common columns
and one of the inputs had zero rows.</para></item>
          <item><para>expand.grid() failed if an input had length
0.</para></item>
          <item><para>match() does again truncate strings at embedded
nuls (as newly documented in 2.7.0).</para></item>
          <item><para>Because of a typo, 'pointsize' in
png(type="cairo") (and jpeg, bmp, tiff) devices was being interpreted
in pixels not bigpoints.</para></item>
          <item><para>is() was wrong for some S3 class objects with
class of length greater than one.</para></item>
          <item><para>undoc() / codoc() were not checking all S4
methods in some cases.</para></item>
          <item><para>Use of textConnection(NULL, mode="w") could
segfault.</para></item>
          <item><para>Use of strwidth/height(units="user") (the
default) is again an error before a user coordinate system has been
set on the device, rather than giving nonsensical values (the effect
of r31367).</para></item>
          <item><para>Rare string width calculations in package grid
were not interpreting the string encoding correctly.</para></item>
          <item><para>hasMethods(f, env) {without specified 'package'}
now works better.</para></item>
          <item><para>A missing PROTECT could cause segfaults on
string comparisons. (PR#11421)</para></item>
          <item><para>str(structure(1, classID = "Pooh")) now works
fine.</para></item>
          <item><para>A missing PROTECT could cause segfaults in if()
if coercion of the condition was required or a warning was to be
given.</para></item>
          <item><para>plot(&lt;table&gt;) now uses a sensible default
main title.</para></item>
          <item><para>validObject() called with complete=TRUE did not
use inherited validity methods for slot classes.</para></item>
          <item><para>Several bugs fixed in as(): the initial method
lookup was not using the table with inherited methods (so inheritance
had to be recomputed each time); coerce() should not be called
directly--it can insert invalid inherited methods; the constructed
as() methods were not retaining the function's
environment.</para></item>
          <item><para>influence.measures(&lt;glm-object&gt;) now
computes the same Cook's distance approximations as
cooks.distance().</para></item>
          <item><para>plot(&lt;glm&gt;, which=5) uses more correct
Cook's distance contours; (fix to fix to PR#9316).</para></item>
          <item><para>pdf() and postscript() were not working
correctly in 2.7.0 with UTF-8 encoded data in a non-UTF-8 MBCS (e.g.
EUC-JP on Unix, CJK locales on Windows).</para></item>
          <item><para>conformMethod(), called by setMethod(), now
checks better about argument names in wrong order. Whereas it only
warns currently, it is planned to become an error in the
future.</para></item>
          <item><para>The predict() method for prcomp() had an
incorrect check for the number of columns of 'newdata' if the columns
were not named.</para></item>
          <item><para>The axis() function now distinguishes between
setting "at" to NULL or a zero-length vector, treating the latter as a
request for no ticks. This corrects the handling of the "x" parameter
to rug().</para></item>
          <item><para>glob2rx("*[*") now produces a correct regular
expression.</para></item>
          <item><para>The canvas is no longer painted on copy or save
in Cocoa Quartz.</para></item>
          <item><para>identify() in Quartz can now be terminated by
either using popup menu equivalent (Ctrl-click or second mouse button)
or by pressing the &lt;Esc&gt; key. The latter was documented but did
not work.</para></item>
          <item><para>tools:::.check_package_depends() {called from 'R
CMD check'} now also works correctly when directory-name !=
package-name.</para></item>
          <item><para>Source references were sometimes off by a
line.</para></item>
          <item><para>The quartz() parameter 'antialias' is no longer
ignored.</para></item>
          <item><para>The Quartz device is now trying hard to remove
anti-aliasing effects for rasterized backends in plots that use
adjacent, borderless rectangles such as image().</para></item>
          <item><para>The srcfilecopy() function now adds a timestamp
to the object it creates.</para></item>
          <item><para>parse() would lose a token when run on
stdin().</para></item>
          <item><para>socketConnection() was using internally the
class "socket" and not "sockconn", which caused a conflict with
make.socket(). (PR#11515)</para></item>
          <item><para>Quartz is now trying harder to find the proper
font for a given family which resolves font issues on Mac OS X 10.4.
Full font names and PostScript names can be used interchangeably.
(Note, however that italic/oblique font faces of Helvetica are not
included in the Mac OS X 10.4 system).</para></item>
          <item><para>qf() no longer gives NaN when one of df1 and df2
is large and the other is infinite (including if both are infinite);
it is more accurate e.g. for qf(1e-18, 2,4).</para></item>
          <item><para>qbeta(-1e10, 50, 40, log.p=TRUE) no longer
hangs.</para></item>
          <item><para>Cocoa Quartz backend autodetection of display
DPI was not correct for screens rotated by 90 or 270
degrees.</para></item>
          <item><para>selectMethod("coerce", .) now uses a correct
default for 'useInherited', and hence no longer may mess up the method
cache.</para></item>
          <item><para>show() now also works on "unregistered" S3 class
objects.</para></item>
          <item><para>formatC(*, format="fg", flag="#") is no longer
dropping trailing zeros.</para></item>
          <item><para>read.table(file = stdin()) with invalid input
could leave the connection in an invalid state and hence cause a later
segfault. (PR#11627)</para></item>
          <item><para>read.DIF() did not obey the default
'stringsAsFactors = TRUE'.</para></item>
          <item><para>The 'noquote' method for c() now works correctly
with three or more arguments.</para></item>
          <item><para>symbol() in plotmath expressions works again
with non-ASCII input on devices that use UTF-8 for the symbol
font.</para></item>
        </items>
      </change>

      <change from="2.6.2" to="2.7.0">
        <items name="SIGNIFICANT User-visible Changes">
          <item><para>The default graphics device in non-interactive
use is now pdf() rather than postscript(). [PDF viewers are now more
widely available than PostScript viewers.]</para>
          <para>The default width and height for pdf() and bitmap()
have been changed to 7 (inches) to match the screen
devices.</para></item>
          <item><para>Most users of the X11() device will see a new
device that has different fonts, anti-aliasing of lines and fonts and
supports semi-transparent colours.</para></item>
          <item><para>Considerable efforts have been made to make the
default output from graphics devices as similar as possible (and in
particular close to that from postscript/pdf). Many devices were
misinterpreting 'pointsize' in some way, for example as being in
device units (pixels) rather than in points.</para></item>
          <item><para>Packages which include graphics devices need to
be re-installed for this version of R, with recently updated
versions.</para></item>
        </items>

        <items name="New Features">
          <item><para>The apse code used by agrep() has been updated
to version 0.16, with various bug fixes.</para>
          <para>agrep() now supports multibyte character
sets.</para></item>
          <item><para>any() and all() avoid coercing zero-length
arguments (which used a surprising amount of memory) since they cannot
affect the answer.</para>
          <para>Coercion of other than integer arguments now gives a
warning as this is often a mistake (e.g. writing all(pr) &gt; 0
instead of all(pr &gt; 0) ).</para></item>
          <item><para>as.Date(), as.POSIXct() and as.POSIXlt() now
convert numeric arguments (days or seconds since some epoch) provided
the 'origin' argument is specified.</para></item>
          <item><para>New function as.octmode() to create objects such
as file permissions.</para></item>
          <item><para>as.POSIXlt() is now generic, and it and
as.POSIXct() gain a '...' argument. The character/factor methods now
accept a 'format' argument (analogous to that for
as.Date).</para></item>
          <item><para>New function browseVignettes() lists available
vignettes in an HTML browser with links to PDF, Rnw, and R
files.</para></item>
          <item><para>There are new capabilities "aqua" (for the AQUA
GUI and quartz() device on Mac OS X) and "cairo" (for cairo-based
graphics devices).</para></item>
          <item><para>New function checkNEWS() in package 'tools' that
detects common errors in NEWS file formatting.</para></item>
          <item><para>deparse() gains a new argument 'nlines' to limit
the number of lines of output, and this is used internally to make
several functions more efficient.</para></item>
          <item><para>deriv() now knows the derivatives of digamma(x),
trigamma(x) and psigamma(x, deriv) (wrt to x).</para></item>
          <item><para>dir.create() has a new argument 'mode', used on
Unix-alikes (only) to set the permissions on the created
directory.</para></item>
          <item><para>Where an array is dropped to a length-one vector
by drop() or [, drop = TRUE], the result now has names if exactly one
of the dimensions was named. (This is compatible with S.) Previously
there were no names.</para></item>
          <item><para>The 'incomparables' argument to duplicated(),
unique() and match() is now implemented, and passed to match() from
merge().</para></item>
          <item><para>dyn.load() gains a 'DLLpath' argument to specify
the path for dependent DLLs: currently only used on
Windows.</para></item>
          <item><para>The spreadsheet edit() methods (and used by
fix()) for data frames and matrices now warn when classes are
discarded.</para>
          <para>When editing a data frame, columns of unknown type
(that is not numeric, logical, character or factor) are now converted
to character (instead of numeric).</para></item>
          <item><para>file.create() has a new argument 'showWarnings'
(default TRUE) to show an informative warning when creation fails, and
dir.create() warns under more error conditions.</para></item>
          <item><para>New higher-order functions Find(), Negate() and
Position().</para></item>
          <item><para>[dpqr]gamma(*, shape = 0) now work as limits of
'shape -&gt; 0', corresponding to the point distribution with all mass
at 0.</para></item>
          <item><para>An informative warning (in addition to the error
message) will be given when the basic, extended or perl mode of
grep(), strsplit() and friends fails to compile the
pattern.</para></item>
          <item><para>More study is done of perl=TRUE patterns in
grep() and friends when length(x) &gt; 10: this should improve
performance on long vectors.</para></item>
          <item><para>grep(), strsplit() and friends with fixed=TRUE
or perl=TRUE work in UTF-8 and preserve the UTF-8 encoding for UTF-8
inputs where supported.</para></item>
          <item><para>help.search() now builds the database about 3x
times faster.</para></item>
          <item><para>iconv() now accepts "UTF8" on all platforms
(many did, but not e.g. libiconv as used on Windows).</para></item>
          <item><para>identity() convenience function to be used for
programming.</para></item>
          <item><para>In addition to warning when 'pkgs' is not found,
install.packages() now reports if it finds a valid package with only a
case mismatch in the name.</para></item>
          <item><para>intToUtf8() now marks the Encoding of its
output.</para></item>
          <item><para>The function is() now works with S3 inheritance;
that is, with objects having multiple strings in the class
attribute.</para></item>
          <item><para>Extensions to condition number computation for
matrices, notably complex ones are provided, both in kappa() and the
new rcond().</para></item>
          <item><para>list.files() gains a 'ignore.case' argument, to
allow case-insensitive matching on some Windows/MacOS file
systems.</para></item>
          <item><para>ls.str() and lsf.str() have slightly changed
arguments and defaults such that ls.str() {no arguments} works when
debugging.</para></item>
          <item><para>Under Unix, utils::make.packages.html() can now
be used directly to set up linked HTML help pages, optionally without
creating the package listing and search database (which can be much
faster).</para></item>
          <item><para>new.packages() now knows about the front-end
package gnomeGUI (which does not install into a
library).</para></item>
          <item><para>optim(*, control = list(...)) now warns when
'...' contains unexpected names, instead of silently ignoring
them.</para></item>
          <item><para>The options "browser" and "editor" may now be
set to functions, just as "pager" already could.</para></item>
          <item><para>packageDescription() makes use of installed
metadata where available (for speed, e.g. in
make.packages.html()).</para></item>
          <item><para>pairwise.t.test() and pairwise.wilcox.test() now
more explicitly allow paired tests. In the former case it is now
flagged as an error if both 'paired' and 'pool.SD' are set TRUE
(formerly, 'paired' was silently ignored), and one-sided tests are
generated according to 'alternative' also if 'pool.SD' is
TRUE.</para></item>
          <item><para>paste() and file.path() are now completely
internal, for speed. (This speeds up
make.packages.html(packages=FALSE) severalfold, for
example.)</para></item>
          <item><para>paste() now sets the encoding on the result
under some circumstances (see ?paste).</para></item>
          <item><para>predict.loess() now works when loess() was
fitted with transformed explanatory variables, e.g, loess(y ~ log(x) +
log(z)).</para></item>
          <item><para>print(&lt;data.frame&gt;)'s new argument
'row.names' allows to suppress printing rownames.</para></item>
          <item><para>print() and str() now also "work" for 'logLik'
vectors longer than one.</para></item>
          <item><para>Progress-bar functions txtProgressBar(),
tkProgressBar() in package tcltk and winProgressBar() (Windows
only).</para></item>
          <item><para>readChar() gains an argument 'useBytes' to allow
it to read a fixed number of bytes in an MBCS locale.</para></item>
          <item><para>readNEWS() has been moved to the tools
package.</para></item>
          <item><para>round() and signif() now do internal argument
matching if supplied with two arguments and at least one is
named.</para></item>
          <item><para>New function showNonASCII() in package tools to
aid detection of non-ASCII characters in .R and .Rd
files.</para></item>
          <item><para>The [dpq]signrank() functions now typically use
considerably less memory than previously, thanks to a patch from Ivo
Ugrina.</para></item>
          <item><para>spec.ar() now uses frequency(x) when calculating
the frequencies of the estimated spectrum, so that for monthly series
the frequencies are now per year (as for spec.pgram) rather than per
month as before.</para></item>
          <item><para>spline() gets an 'xout' argument, analogously to
approx().</para></item>
          <item><para>sprintf() now does all the conversions needed in
a first pass if length(fmt) == 1, and so can be many times faster if
called with long vector arguments.</para></item>
          <item><para>[g]sub(useBytes = FALSE) now sets the encoding
on changed elements of the result when working on an element of known
encoding. (This was previously done only for perl =
TRUE.)</para></item>
          <item><para>New function Sys.chmod(), a wrapper for 'chmod'
on platforms which support it. (On Windows it handles only the
read-only bit.)</para></item>
          <item><para>New function Sys.umask(), a wrapper for 'umask'
on platforms which support it.</para></item>
          <item><para>New bindings ttk*() in package tcltk for the
'themed widgets' of Tk 8.5. The tcltk demos make use of these widgets
where available.</para></item>
          <item><para>write.table(d, row.names=FALSE) is faster when
'd' has millions of rows; in particular for a data frame with
automatic row names. (Suggestion from Martin Morgan.)</para></item>
          <item><para>The parser limit on string size has been
removed.</para></item>
          <item><para>If a NEWS file is present in the root of a
source package, it is installed (analogously to LICENSE, LICENCE and
COPYING).</para></item>
          <item><para>Rd conversion to 'example' now quotes aliases
which contain spaces.</para></item>
          <item><para>The handling of DST on dates outside the range
1902-2037 has been improved. Dates after 2037 are assumed to have the
same DST rules as currently predicted for the 2030's (rather than the
1970s), and dates prior to 1902 are assumed to have no DST and the
same offset as in 1902 (if known, otherwise as in the
1970s).</para></item>
          <item><para>On platforms where we can detect that mktime
sets errno (e.g. Solaris and the code used on Windows but not Linux
nor Mac OS X), 1969-12-31 23:59:59 GMT is converted from POSIXlt to
POSIXct as -1 and not NA.</para></item>
          <item><para>The definition of 'whitespace' used by the
parser is slightly wider: it includes Unicode space characters on
Windows and in UTF-8 locales on machines which use Unicode wide
characters.</para></item>
          <item><para>The src/extra/intl sources have been updated to
those from gettext 0.17.</para></item>
          <item><para>New flag --interactive on Unix-alikes forces the
session to be interactive (as --ess does on Windows).</para></item>
          <item><para>x[&lt;zero-length&gt;] &lt;- NULL is always a
no-op: previously type-checking was done on the replacement value and
so this failed, whereas we now assume NULL can be promoted to any
zero-length vector-like object.</para>
          <para>Other cases of a zero-length index are done more
efficiently.</para></item>
          <item><para>There is a new option in Rd markup of
\donttest{} to mark example code that should be run by example() but
not tested (e.g. because it might fail in some locales).</para></item>
          <item><para>The error handler in the parser now reports line
numbers for more syntax errors (MBCS and Unicode encoding errors, line
length and context stack overflows, and mis-specified argument lists
to functions).</para></item>
          <item><para>The "MethodsList" objects originally used for
method selection are being phased out. New utilities provide simpler
alternatives (see ?findMethods), and direct use of the mangled names
for the objects is now deprecated.</para></item>
          <item><para>Creating new S4 class and method definitions in
an environment that could not be identified (as package, namespace or
global) previously generated an error. It now results in creating and
using an artificial package name from the current date/time, with a
warning.</para></item>
          <item><para>Unix-alikes now give a warning on startup if
locale settings fail. (The Windows port has long done
so.)</para></item>
          <item><para>Parsing and scanning of numerical constants is
now done by R's own C code. This ensures cross-platform consistency,
and mitigates the effects of setting LC_NUMERIC (within base R it only
applies to output -- packages may differ).</para>
          <para>The format accepted is more general than before and
includes binary exponents in hexadecimal constants: see
?NumericConstants for details.</para></item>
          <item><para>Dependence specifications for R or packages in
the Depends field in a DESCRIPTION file can now make use of operators
&lt; &gt; == and != (in addition to &lt;= and &gt;=): such packages
will not be installable nor loadable in R &lt; 2.7.0.</para>
          <para>There can be multiple mentions of R or a package in
the Depends field in a DESCRIPTION file: only the first mention will
be used in R &lt; 2.7.0.</para></item>
        </items>

        <items name="GRAPHICS CHANGES">
          <item><para>The default graphics devices in interactive and
non-interactive sessions are now configurable via environment
variables R_INTERACTIVE_DEVICE and R_DEFAULT_DEVICE
respectively.</para></item>
          <item><para>New function dev.new() to launch a new copy of
the default graphics device (and taking care if it is "pdf" or
"postscript" not to trample on the file of an already running
copy).</para></item>
          <item><para>dev.copy2eps() uses dev.displaylist() to detect
screen devices, rather than list them in the function.</para></item>
          <item><para>New function dev.copy2pdf(), the analogue of
dev.copy2eps().</para></item>
          <item><para>dev.interactive() no longer treats a graphics
device as interactive if it has a display list (but devices can still
register themselves on the list of interactive devices).</para></item>
          <item><para>The X11() and windows() graphics devices have a
new argument 'title' to set the window title.</para></item>
          <item><para>X11() now has the defaults for all of its
arguments set by the new function X11.options(), inter alia replacing
options "gamma", "colortype" and "X11fonts".</para></item>
          <item><para>ps.options() now warns on unused option
'append'.</para>
          <para>xfig() no longer takes default arguments from
ps.options(). (This was not documented prior to 2.6.1 patched.)</para>
          <para>pdf() now takes defaults from the new function
pdf.options() rather that from ps.options() (and the latter was not
documented prior to 2.6.1 patched).</para>
          <para>The defaults for all arguments other than 'file' in
postscript() and pdf() can now be set by ps.options() or
pdf.options()</para></item>
          <item><para>New functions setEPS() and setPS() as wrappers
to ps.options() to set appropriate defaults for figures for inclusion
in other documents and for spooling to a printer
respectively.</para></item>
          <item><para>The meaning of numeric 'pch' has been extended
where MBCSes are supported. Now negative integer values indicate
Unicode points, integer values in 32-127 represent ASCII characters,
and 128-255 are valid only in single-byte locales. (Previously what
happened with negative pch values was undocumented: they were replaced
by the current setting of par("pch").)</para></item>
          <item><para>Graphics devices can say if they can rotate text
well (e.g. postscript() and pdf() can) and if so the device's native
text becomes the default for contour labels rather than using Hershey
fonts.</para></item>
          <item><para>The setting of the line spacing (par("cra")[2])
on the X11() and windows() devices is now comparable with postscript()
etc, and roughly 20% smaller than before (it used to depend on the
locale for X11). (So is the pictex() device, now 20% larger.) This
affects the margin size in plots, and should result in better-looking
plots.</para></item>
          <item><para>There is a per-device setting for whether new
frames need confirmation. This is controlled by either par("ask") or
grid.prompt() and affects all subsequent plots on the device using
base or grid graphics.</para></item>
          <item><para>There is a new version of the X11() device based
on cairo graphics which is selected by type "cairo" or "nbcairo", and
is available on machines with cairo installed and preferably pango
(which most machines with gtk+ &gt;= 2.8 will have). This version
supports translucent colours and normally does a better job of font
selection so it has been possible to display (e.g.)  English, Polish,
Russian and Japanese text on a single X11() window. It is the default
where available.</para>
          <para>There is a companion function, savePlot(), to save the
current plot to a PNG file.</para>
          <para>On Unix-alikes, devices jpeg() and png() also accept
type = "cairo", and with that option do not need a running X server.
The meaning of capabilities("jpeg") and capabilities("png") has
changed to reflect this. On MacOS X, there is a further type =
"quartz". The default type is selected by the new option "bitmapType",
and is "quartz" or "cairo" where available.</para>
          <para>Where cairo 1.2 or later is supported, there is a
svg() device to write SVG files, and cairo_pdf() and cairo_ps()
devices to write (possibly bitmap) PDF and postscript files via
cairo.</para>
          <para>Some features require cairo &gt;= 1.2, and some which
are nominally supported under 1.2 seem to need 1.4 to work
well.</para></item>
          <item><para>There are new bmp() and tiff()
devices.</para></item>
          <item><para>New function devSize() to report the size of the
current graphics device surface (in inches or device units). This
gives the same information as par("din"), but independent of the
graphics subsystem.</para></item>
          <item><para>New base graphics function clip() to set the
clipping region (in user coordinates).</para></item>
          <item><para>New functions grconvertX() and grconvertY() to
convert between coordinate systems in base graphics.</para></item>
          <item><para>identify() recycles its 'labels' argument if
necessary.</para></item>
          <item><para>stripchart() is now a generic function, with
default and formula methods defined. Additional graphics parameters
may be included in the call. Formula handling is now similar to
boxplot().</para></item>
          <item><para>strwidth() and strheight() gain 'font' and
'vfont' arguments and accept in-line pars such as 'family' in the same
way as text() does. (Longstanding wish of PR#776)</para></item>
          <item><para>example(ask=TRUE) now applies to grid graphics
(e.g. from lattice) as well as to base graphics.</para></item>
          <item><para>Option "device.ask.default" replaces
"par.ask.default" now it applies also to grid.prompt().</para></item>
          <item><para>plot.formula() only prompts between plots for
interactive devices (it used to prompt for all devices).</para></item>
          <item><para>When plot.default() is called with y=NULL it now
calls Axis() with the 'y' it constructs rather than use the default
axis.</para></item>
        </items>

        <items name="Deprecated and Defunct">
          <item><para>In package installation, SaveImage: yes is
defunct and lazyloading is attempted instead.</para></item>
          <item><para>$ on an atomic vector or S4 object is now
defunct.</para></item>
          <item><para>Partial matching in [[ is now only performed if
explicitly requested (by exact=FALSE or exact=NA).</para></item>
          <item><para>Command-line completion has been moved from
package 'rcompgen' to package 'utils': the former no longer exists as
a separate package in the R distribution.</para></item>
          <item><para>The S4 pseudo-classes "single" and double have
been removed. (The S4 class for a REALSXP is "numeric": for
back-compatibility as(x, "double") coerces to
"numeric".)</para></item>
          <item><para>gpar(gamma=) in the grid package is now
defunct.</para></item>
          <item><para>Several S4 class definition utilities, get*(),
have been said to be deprecated since R 1.8.0; these are now formally
deprecated. Ditto for removeMethodsObject().</para></item>
          <item><para>Use of the graphics headers Rgraphics.h and
Rdevices.h is deprecated, and these will be unavailable in R 2.8.0.
(They are hardly used except in graphics devices, for which there is
an updated API in this version of R.)</para></item>
          <item><para>options("par.ask.default") is deprecated in
favour of "device.ask.default".</para></item>
          <item><para>The 'device-independent' family "symbol" is
deprecated as it was highly locale- and device-dependent (it only did
something useful in single-byte locales on most devices) and font=5
(base) or fontface=5 (grid) did the job it was intended to do more
reliably.</para></item>
          <item><para>gammaCody() is now formally
deprecated.</para></item>
          <item><para>Two low-level functions using MethodsList
metadata objects (mlistMetaName() and getAllMethods()) are
deprecated.</para></item>
          <item><para>Setting par(gamma=) is now deprecated, and the
windows() device (the only known example) no longer allows
it.</para></item>
          <item><para>The C macro 'allocString' will be removed in
2.8.0 -- use 'mkChar', or 'allocVector' directly if really
necessary.</para></item>
        </items>

        <items name="INSTALLATION">
          <item><para>Tcl/Tk &gt;= 8.3 (released in 2000) is now
required to build package tcltk.</para></item>
          <item><para>configure first tries TCL_INCLUDE_SPEC and
TK_INCLUDE_SPEC when looking for Tcl/Tk headers. (The existing scheme
did not work for the ActiveTcl package on Mac OS X.)</para></item>
          <item><para>The Windows build only supports Windows 2000 or
later (XP, Vista, Server 2003 and Server 2008).</para></item>
          <item><para>New option --enable-R-static-lib installs libR.a
which can be linked to a front-end via 'R CMD config --ldflags'. The
tests/Embedding examples now work with a static R
library.</para></item>
          <item><para>Netscape (which was discontinued in Feb 2008) is
no longer considered when selecting a browser.</para></item>
          <item><para>xdg-open (the freedesktop.org interface to
kfmclient/gnome-open/...) is considered as a possible browser, after
real browsers such as firefox, mozilla and opera.</para></item>
          <item><para>The search for tclConfig.sh and tkConfig.sh now
only looks in directories with names containing $(LIBnn) in the hope
of finding the version for the appropriate architecture (e.g. x86_64
or i386).</para></item>
          <item><para>libtool has been updated to version
2.2.</para></item>
          <item><para>Use of --with-system-zlib, --with-system-bzlib
or --with-system-pcre now requires version &gt;= 1.2.3, 1.0.5, 7.6
respectively, for security.</para></item>
        </items>

        <items name="Utilities">
          <item><para>Rdconv now removes empty sections including
alias and keyword entries, with a note.</para></item>
          <item><para>Keyword entries are no longer mandatory in Rd
files.</para></item>
          <item><para>R CMD INSTALL now also installs tangled versions
of all vignettes.</para></item>
          <item><para>R CMD check now warns if spaces or non-ASCII
characters are used in file paths, since these are not in general
portable.</para></item>
          <item><para>R CMD check (via massage-examples.pl) now checks
all examples with a 7 inch square device region on A4 paper, for
locale-independence and to be similar to viewing examples on an
on-screen device.</para>
          <para>If a package declares an encoding in the DESCRIPTION
file, the examples are assumed to be in that encoding when running the
tests. (This avoids errors in running latin1 examples in a UTF-8
locale.)</para></item>
          <item><para>R CMD check uses pdflatex (if available) to
check the typeset version of the manual, producing PDF rather than
DVI. (This is a better check since the package reference manuals on
CRAN are in PDF.)</para></item>
          <item><para>R CMD Rd2dvi gains a --encoding argument to be
passed to R CMD Rdconv, to set the default encoding for conversions.
If this is not supplied and the files are package sources and the
DESCRIPTION file contains an Encoding field, that is used for the
default encoding.</para></item>
          <item><para>available.packages() (and hence
install.packages() etc) now supports subdirectories in a repository,
and tools::write_PACKAGES() can now produce PACKAGES files including
subdirectories.</para></item>
          <item><para>The default for 'stylepath' in Sweave's
(default) RweaveLatex driver can be set by the environment variable
SWEAVE_STYLEPATH_DEFAULT: see ?RweaveLatex.</para></item>
        </items>

        <items name="C-level Facilities">
          <item><para>Both the Unix and Windows interfaces for
embedding now make use of 'const char *' declarations where
appropriate.</para></item>
          <item><para>Rprintf() and REprintf() now use 'const char *'
for their format argument -- this should reduce warnings when called
from C++.</para></item>
          <item><para>There is a new description of the interface for
graphics devices in the 'R Internals' manual, and several new entry
points. The API has been updated to version R_GE_version = 5, and
graphics devices will need to be updated accordingly.</para></item>
          <item><para>Graphics devices can now select to be sent text
in UTF-8, even if the current locale is not UTF-8 (and so enable text
entered in UTF-8 to be plotted). This is used by postscript(), pdf()
and the windows() family of devices, as well as the new cairo-based
devices.</para></item>
          <item><para>More Lapack routines are available (and declared
in R_Ext/Lapack.h), notably for (reciprocal) condition number
estimation of complex matrices.</para></item>
          <item><para>Experimental utility R_has_slot supplementing
R_do_slot.</para></item>
          <item><para>There is a new public interface to the encoding
info stored on CHARSXPs, getCharCE and mkCharCE using the enumeration
type cetype_t.</para></item>
          <item><para>A new header 'R_ext/Visibility.h' contains some
definitions for controlling the visibility of entry points, and how to
control visibility is now documented in 'Writing R Extensions'.
</para></item>
        </items>

        <items name="Bug Fixes">
          <item><para>pt(x, df) is now even more accurate in some
cases (e.g. 12 instead of 8 significant digits), when x^2 &lt;&lt; df,
thanks to a remark from Ian Smith, related to PR#9945.</para></item>
          <item><para>co[rv](use = "complete.obs") now always gives an
error if there are no complete cases: they used to give NA if method =
"pearson" but an error for the other two methods. (Note that this is
pretty arbitrary, but zero-length vectors always give an error so it
is at least consistent.)</para>
          <para>Since sd(na.rm=TRUE) and var(na.rm=TRUE) both call
cov(use = "complete.obs"), this applies also to them.</para>
          <para>cor(use="pair") used to give diagonal 1 even if the
variable was completely missing for the rank methods but NA for the
Pearson method: it now gives NA in all cases.</para>
          <para>cor(use="pair") for the rank methods gave a matrix
result with dimensions &gt; 0 even if one of the inputs had 0
columns.</para></item>
          <item><para>Supplying edit.row.names = TRUE when editing a
matrix without row names is now an error and not a segfault.
(PR#10500)</para></item>
          <item><para>The error handler in the parser reported
unexpected &amp; as &amp;&amp; and | as ||.</para></item>
          <item><para>ps.options(reset = TRUE) had not reset for a
long time.</para></item>
          <item><para>paste() and file.path() no longer allow
NA_character_ for their 'sep' and 'collapse' arguments.</para></item>
          <item><para>by() failed for 1-column matrices and
dataframes. (PR#10506) However, to preserve the old behaviour, the
default method when operating on a vector still passes subsets of the
vector to FUN, and this is now documented.</para></item>
          <item><para>Better behaviour of str.default() for
non-default 'strict.width' (it was calling str() rather than
str.default() internally); also, more useful handling of
options("str").</para></item>
          <item><para>wilcox.test(exact=FALSE, conf.int=TRUE) could
fail in some extreme two-sample problems.</para></item>
          <item><para>par(pch=) would accept a multi-byte string but
only use the first byte. This would lead to incorrect results in an
MBCS locale if a non-ASCII character was supplied.</para></item>
          <item><para>There are some checks for valid C-style formats
in, e.g. png(filename=). (PR#10571)</para></item>
          <item><para>vector() was misinterpreting some double
'length' values, e.g, NaN and NA_real_ were interpreted as zero. Also,
invalid types of 'length' were interpreted as -1 and hence reported as
negative. (length&lt;- shared the code and hence the same
misinterpretations.)</para></item>
          <item><para>A basic class "S4" was added to correspond to
the "S4" object type, so that objects with this type will print, etc.
The class is VIRTUAL, since all actual S4 objects must have a real
class.</para></item>
          <item><para>Classes with no slots that contain only VIRTUAL
classes are now VIRTUAL, as was intended but confused by having an
empty S4 object as prototype. ## backed out temporarily
##</para></item>
          <item><para>format.AsIs() discarded dimnames, causing
dataframes with matrix variables to be printed without using the
column names, unlike what happens in S-PLUS (Tim Hesterberg,
PR#10730).</para></item>
          <item><para>xspline() and grid::grid.xspline() work in
device coordinates and now correct for anisotropy in the device
coordinate system.</para></item>
          <item><para>grid.locator() now indicates to the graphics
device that it is is in 'graphics input' mode (as locator() and
identify() always have). This means that devices can now indicate the
'graphics input' mode by e.g. a change of cursor.</para></item>
          <item><para>Locales without encoding specification and
non-UTF-8 locales now work properly on Mac OS X. Note that locales
without encoding specification always use UTF-8 encoding in Mac OS X
(except for specials "POSIX" and "C") - this is different from other
operating systems.</para></item>
          <item><para>iconv() now correctly handles to="" and from=""
on Mac OS X.</para></item>
          <item><para>In diag()'s argument list, drop the explicit
default (' = n') for 'ncol' which is ugly when making diag()
generic.</para></item>
          <item><para>S4 classes with the same name from different
packages were not recognized because of a bug in caching the new
definition.</para></item>
          <item><para>jpeg() and png() no longer maintain a display
list, as they are not interactive devices.</para></item>
          <item><para>Using attr(x, "names") &lt;- value (instead of
the correct names&lt;-) with 'value' a pairlist (instead of the
correct character vector) worked incorrectly. (PR#10807)</para></item>
          <item><para>Using [&lt;- to add a column to a data frame
dropped other attributes whereas [[&lt;- and $&lt;- did not: now all
preserve attributes. (PR#10873)</para></item>
          <item><para>File access functions such as file.exists(),
file.info(), dirname() and unlink() now treat an NA filename as a
non-existent file and not the file "NA".</para></item>
          <item><para>r&lt;foo&gt;(), the random number generators,
are now more consistent in warning when NA's (specifically NaN's) are
generated.</para></item>
          <item><para>rnorm(n, mu = Inf) now returns rep(Inf, n)
instead of NaN; similar changes are applied to rlnorm(), rexp(),
etc.</para></item>
          <item><para>[l]choose() now warns when rounding non-integer
'k' instead of doing so silently. (May help confused users such as
PR#10766.)</para></item>
          <item><para>gamma() was warning incorrectly for most
negative values as being too near a negative integer. This also
affected other functions making use of its C-level
implementation.</para></item>
          <item><para>dumpMethod() and dumpMethods() now work
again.</para></item>
          <item><para>package.skeleton() now also works for code_files
with only metadata (e.g. S4 setClass) definitions; it handles S4
classes and methods, producing documentation and NAMESPACE exports if
requested.</para></item>
          <item><para>Some methods package utilities
(implicitGeneric(), makeGeneric()) will be more robust in dealing with
primitive functions (not a useful idea to call them with primitives,
though)</para></item>
          <item><para>Making a MethodsList from a function with no
methods table will return an empty list, rather than cause an error
(questionably a bug, but caused some obscure failures).</para></item>
          <item><para>setAs() now catches 2 arguments in the method
definition, if they do not match the arguments of
coerce().</para></item>
          <item><para>S4 methods with missing arguments in the
definition are handled correctly  when non-signature arguments exist,
and check for conflicting local names in the method
definition.</para></item>
          <item><para>qgamma() and qchisq() could be inaccurate for
small p, e.g. qgamma(1.2e-10, shape = 19) was 2.52 rather than
2.73.</para></item>
          <item><para>dbeta(.., ncp) is now more accurate for large
ncp, and typically no longer underflows for give.log =
TRUE.</para></item>
          <item><para>coerce() is now a proper S4 object and so prints
correctly.</para></item>
          <item><para>@ now checks it is being applied to an S4
object, and if not gives a warning (which will become an error in
2.8.0).</para></item>
          <item><para>dump() and friends now warn that all S4 objects
(even those based on vectors) are not source()able, with a stronger
wording.</para></item>
          <item><para>read.dcf(all = TRUE) was leaking
connections.</para></item>
          <item><para>scan() with a non-default separator could skip
nul bytes, including those entered as \0 with allowEscapes=TRUE. This
was different from the default separator.</para></item>
          <item><para>determinant(matrix(,0,0)) now returns a correct
"det" result; also value 1 or 0 depending on 'logarithm', rather than
numeric(0).</para></item>
          <item><para>Name space 'grDevices' was not unloading its DLL
when the name space was unloaded.</para></item>
          <item><para>getNativeSymbolInfo() was unaware of
non-registered Fortran names, because one of the C support routines
ignored them.</para></item>
          <item><para>load() again reads correctly character strings
with embedded nuls. (This was broken in 2.6.x, but worked in earlier
versions.)</para></item>
        </items>
      </change>

      <change from="2.6.1" to="2.6.2">
        <items name="New Features">
          <item><para>colnames(DF) is now also fast for large
dataframes DF with automatic row.names. Note that the correct usage
is names(DF). (PR#10470)</para></item>
          <item><para>tools::texi2dvi() works around the failure of
'texi2dvi --quiet' to be quiet in texinfo 4.11.</para></item>
          <item><para>On Linux, parallel 32/64-bit installations are
supported using multilib.</para></item>
        </items>

        <items name="Bug Fixes">
          <item><para>A compilation problem on one system where glob
was not found has been corrected. (PR#10468)</para></item>
          <item><para>The "profile.nls" method of plot() was losing
the x axis labels.</para></item>
          <item><para>array() computed the total number of entries in
the array before coercing the dimensions to integer. (Reported by
Allen McIntosh.)</para></item>
          <item><para>persp() misreported errors in the y
parameter.</para></item>
          <item><para>source("clipboard", echo=TRUE) and
file("clipboard", open="rt") gave spurious errors. </para></item>
          <item><para>attributes&lt;-() stripped any existing
attributes before checking that all elements of the right-hand side
had names.</para></item>
          <item><para>rbinom(n, size, *) gave NaN when 'size &gt;
.Machine$integer.max'.</para></item>
          <item><para>print.summary.lm() is now consistent in the
capitalization of "R-squared".</para></item>
          <item><para>confint() misreported on some rank-deficient
lm() models. (PR#10496)  This could also occur in the default
method.</para></item>
          <item><para>\code{\var{&lt;name&gt;}} was not rendered
correctly to latex in Rd files for non-alphabetic arguments
&lt;name&gt;.</para></item>
          <item><para>In 2.6.1, curve(*, add=TRUE) used a wrong
default 'xlim' when x coordinates were logged.</para></item>
          <item><para>The Java-based search in help.start() now only
requires a JVM &gt;= 1.4 (2.6.1 accidentally required &gt;=
1.5).</para></item>
          <item><para>The default method for range() was omitting
'na.rm' for non-numeric objects such as those of class "Date".
(PR#10508)</para></item>
          <item><para>cut(x, breaks=&lt;n&gt;) misbehaved on a
constant vector of negative values.</para></item>
          <item><para>bxp(), the plotting engine of boxplot(), no
longer plots staple ticks multiple times. (PR#10499)</para></item>
          <item><para>The automatic detection of the domain for
message translation was not working correctly for messages in
message(), warning() and stop() in packages other than
'base'.</para></item>
          <item><para>The profile.nls() function misbehaved when
encountering non-convergence of the "port" algorithm.</para></item>
          <item><para>Under certain rare circumstances in R 2.6.x,
log(), round() and trunc() could alter their arguments in the caller.
This involved passing of empty '...' arguments, and was spotted when
using apply(x, 2, log).</para></item>
          <item><para>par() no longer warns unnecessarily when asked
to set new=FALSE on an unused graphics device.</para></item>
          <item><para>plot.formula() was not passing on '...' when
used with a one-sided formula. plot.formula() was not accepting
expressions for annotations passed to title().
(PR#10525)</para></item>
          <item><para>pchisq(x, df=0, ncp=L) now returns the correct
limit exp(-L/2) for x=0 and is no longer returning NaN for x &gt; 0, L
&lt; 80. (PR#10551)</para></item>
          <item><para>Non-ASCII characters were only working correctly
in Hershey fonts if these were specified by the 'vfont' argument to
text() and not if specified as a font family.</para></item>
          <item><para>There were several errors in Hershey$allowed,
but the help page listed the allowed combinations
correctly.</para></item>
          <item><para>text() no longer attempts to use 'vfont' with an
expression for 'labels' (it was documented not to work).</para></item>
          <item><para>fisher.test(simulate.p.value = TRUE) gave
incorrect answers in some extremely degenerate problems.
(PR#10558)</para></item>
          <item><para>src/extra/pcre has been updated to PCRE 7.5
(bugfix release).</para></item>
          <item><para>capture.output() completes an incomplete final
line of output when file = NULL. (PR#10534)</para></item>
          <item><para>capture.output() now returns invisibly if output
is written to a file/connection.</para></item>
          <item><para>format.AsIs() did not remove the "AsIs" class
and so could go into an infinite loop.</para></item>
          <item><para>summary.mlm() lost the names of the coefficients
when there was only one.</para></item>
          <item><para>Rdconv was not marking examples files with an
encoding if this was known from the package's DESCRIPTION
file.</para></item>
          <item><para>readChar() from a raw vector was reading a
number of bytes, not characters.</para></item>
          <item><para>slotNames() was erroneously treating classes
that extend "character" as strings.</para></item>
          <item><para>R no longer ignores SIGPIPE signals even in
processes launched by system(). Instead PR#1959 is handled by a
simple error handler which will give an error message in circumstances
where none was given before.</para></item>
          <item><para>The AIC() S4 generic in package stats4 no longer
disables dispatch of S3 methods for AIC().</para></item>
          <item><para>The conflicts check in library() excluded all S4
generics, even where they were unrelated to the function masked. It
is now more selective (although still too generous to S4
generics).</para></item>
          <item><para>proc.time() was missing a protect and could
misbehave if provoked by gctorture(). (PR#10600)</para></item>
          <item><para>The cut() and hist() methods for dates and
datetimes are now more accurate for intervals of "months" and
"years"</para></item>
          <item><para>url()/download.file() could segfault if the HTTP
interaction involved a redirect to an address starting with '/' on the
same server.</para></item>
          <item><para>Memory allocations used in format() and in an
internal utility function could be off by one byte.
(PR#10635)</para></item>
          <item><para>isoreg(x, y) no longer segfaults when y has
NAs.</para></item>
          <item><para>split(x, g) always returns a list as documented.
(It used to return NULL for a zero-length 'x'.)</para></item>
          <item><para>tapply(x, g, ...) misbehaved if the args were of
zero length. (PR#10644)</para></item>
          <item><para>hist.POSIXt(*, xaxt = "n") no longer suppresses
the y-axis.</para></item>
          <item><para>strptime() crashed under certain locales on Mac
OS X.</para></item>
          <item><para>gregexpr() no longer segfaults when "" is given
as the search pattern.</para></item>
          <item><para>matplot(x, *) with default 'pch' did not plot
columns from column number 37 on (because the default pch was NA for
those). (PR#10676)</para></item>
          <item><para>print.htest() lost output when used within
sink(file, split=TRUE).</para></item>
          <item><para>Setting par(col.main=) also set par("col") to
the same colour.</para></item>
          <item><para>Anonymous fifos were broken
(again).</para></item>
        </items>
      </change>

      <change from="2.6.0" to="2.6.1">
        <items name="New Features">
          <item><para>The "data.frame" and "factor" methods for [[ now
support the 'exact' argument introduced in 2.6.0.</para></item>
          <item><para>plot.lm() gains a new argument 'cex.caption' to
allow the size of the captions to be controlled.</para></item>
          <item><para>A series of changes make the CHARSXP cache
introduced in 2.6.0 faster (and in some cases many times faster) in
sessions with a large number (e.g. a million) of unique character
strings, and also if there are many empty strings.</para></item>
          <item><para>embedFonts(), bitmap() and dev2bitmap()
explicitly turn off auto-rotation in Ghostscript when generating
PDF.</para></item>
          <item><para>The canonical architecture is no longer checked
when loading packages using a non-empty sub-architecture, since it is
possible to (e.g.) build packages for i386-pc-linux-gnu on both that
architecture and on x86_64-unknown-linux-gnu.</para></item>
          <item><para>Deparsing will (if option warnIncomplete is set)
warn on strings longer than the parser limit (8192
bytes).</para></item>
          <item><para>url() now uses the UserAgent header in http
transactions in the same way as download.file() (making use of option
"HTTPUserAgent").</para></item>
        </items>

        <items name="Bug Fixes">
          <item><para>iconv() is again able to translate character
strings with embedded nuls (such as those in UCS-2).</para></item>
          <item><para>new.packages() and update.packages() failed when
called on an empty library, since old.packages() threw an error.
old.packages() now returns NULL (as documented) in that
case.</para></item>
          <item><para>Builds on Mac OS X 10.4 or higher now allocate
enough space in the binary headers to relocate dependent libraries
into the framework.</para></item>
          <item><para>R CMD build now computes the exclusion list on
the copy it makes: this avoids problems if the original sources
contain symbolic links (which are resolved in the copy).</para></item>
          <item><para>object.size() had slightly too low a size for
objects of type "S4".</para></item>
          <item><para>symbol() in plotmath expressions was only
accepting valid character strings, which made it impossible to specify
symbols such as aleph (obtained by symbol("\300")) in a UTF-8
locale.</para></item>
          <item><para>An event handling issue caused autorepeat
functions to misbehave with tcltk (notably scrollbars).</para></item>
          <item><para>plot(sin, -5, 5) gives ylab 'sin(x)' again,
where it resulted in 'x(x)' in 2.6.0. Further,  plot(sin)  again
plots from [0,1] also in cases where a previously used coordinate
system differs.</para></item>
          <item><para>curve() with unspecified 'from', 'to' and 'xlim'
now reuses the previous x limits, and not slightly larger
ones.</para></item>
          <item><para>It was intended that R code filenames in
packages should start with an ASCII letter or digits (and R CMD
INSTALL uses that), but the test used in R CMD build ([A-Za-z0-9]) was
locale-specific (and excluded t to y in Estonian, for example).
(PR#10351)</para></item>
          <item><para>'R CMD build' could misbehave when faced with
files with CRLF line endings *and* no line ending on the final line of
the file, removing the last byte of the file.</para></item>
          <item><para>DF[i, j] failed in 2.6.0 if j was a logical
vector selecting a single column.</para></item>
          <item><para>Unix x11() would fail if a valid 'display' was
specified but DISPLAY was unset. (PR#10379)</para></item>
          <item><para>postscript() was not always ignoring
.Postscript.Options in the workspace (where it should not have
occurred).</para></item>
          <item><para>help.search() would give an error if it found a
badly installed package, even if 'package' was not
specified.</para></item>
          <item><para>tclServiceMode() (package tcltk) now works under
Unix-alikes. (Although documented, it used only to work under
Windows.)</para></item>
          <item><para>As Mac OS X 10.5.x comes with incompatible
/bin/sh shell, we force SHELL=/bin/bash (which is ok) in that case.
[Only for 2.6.x: another solution is used in 2.7.0.]</para></item>
          <item><para>Deliberately using malformed source attributes
no longer causes deparsing/printing of functions to crash R.
(PR#10437)</para></item>
          <item><para>R CMD check and R CMD INSTALL now work with
(some) directory names containing spaces.</para></item>
          <item><para>choose(n, k) gave incorrect values for negative
n and small k.</para></item>
          <item><para>plot.ts(x,y) could use wrong default
labels;</para></item>
          <item><para>reshape() got column names out of sync with
contents in some cases; found by Antonio, Fabio Di
Narzo.</para></item>
          <item><para>ar(x) for short 'x' (i.e. length &lt;= 10) could
fail because the default 'order.max' was &gt;= length(x) which is
non-sensical.</para></item>
          <item><para>Keyboard events in getGraphicsEvent() could
cause stack imbalance errors. (PR#10453)</para></item>
        </items>
      </change>

      <change from="2.5.1patched" to="2.6.0">
        <items name="SIGNIFICANT User-visible Changes">
          <item><para>integrate(), nlm(), nlminb(), optim(),
optimize() and uniroot() now have '...' much earlier in their argument
list. This reduces the chances of unintentional partial matching but
means that the later arguments must be named in full.</para></item>
          <item><para>The default type for nchar() is now "chars".
This is almost always what was intended, and differs from the previous
default only for non-ASCII strings in a MBCS locale. There is a new
argument 'allowNA', and the default behaviour is now to throw an error
on an invalid multibyte string if type="chars" or
type="width".</para></item>
          <item><para>Connections will be closed if there is no R
object referring to them. A warning is issued if this is done, either
at garbage collection or if all the connection slots are in
use.</para></item>
        </items>

        <items name="New Features">
          <item><para>abs(), sign(), sqrt(), floor(), ceiling(), exp()
and the gamma, trig and hyperbolic trig functions now only accept one
argument even when dispatching to a Math group method (which may
accept more than one argument for other group members).</para></item>
          <item><para>abbreviate() gains a 'method' argument with a
new option "both.sides" which can make shorter
abbreviations.</para></item>
          <item><para>aggregate.data.frame() no longer changes the
group variables into factors, and leaves alone the levels of those
which are factors. (Inter alia grants the wish of
PR#9666.)</para></item>
          <item><para>The default 'max.names' in all.names() and
all.vars() is now -1 which means unlimited. This fixes
PR#9873.</para></item>
          <item><para>as.vector() and the default methods of
as.character(), as.complex(), as.double(), as.expression(),
as.integer(), as.logical() and as.raw() no longer duplicate in most
cases where the object is unchanged. (Beware: some code has been
written that invalidly assumes that they do duplicate, often when
using .C/.Fortran(DUP=FALSE).)</para></item>
          <item><para>as.complex(), as.double(), as.integer(),
as.logical() and as.raw() are now primitive and internally generic for
efficiency. They no longer dispatch on S3 methods for as.vector()
(which was never documented). as.real() and as.numeric() remain as
alternative names for as.double().</para>
          <para>expm1(), log(), log1p(), log2(), log10(), gamma(),
lgamma(), digamma() and trigamma() are now primitive. (Note that
logb() is not.)</para>
          <para>The Math2 and Summary groups (round, signif, all,
any, max, min, sum, prod, range) are now primitive.</para>
          <para>See under METHODS PACKAGE below for some
consequences for S4 methods.</para></item>
          <item><para>apropos() now sorts by name and not by position
on the search path.</para></item>
          <item><para>attr() gains an 'exact = TRUE' argument to
disable partial matching.</para></item>
          <item><para>bxp() now allows 'xlim' to be specified.
(PR#9754)</para></item>
          <item><para>C(f, SAS) now works in the same way as C(f,
treatment), etc.</para></item>
          <item><para>chol() is now generic.</para></item>
          <item><para>dev2bitmap() has a new option to go via PDF and
so allow semi-transparent colours to be used.</para></item>
          <item><para>dev.interactive() regards devices with the
displaylist enabled as interactive, and packages can register the
names of their devices as interactive via
deviceIsInteractive().</para></item>
          <item><para>download.packages() and available.packages()
(and functions which use them) now support in 'repos' or 'contriburl'
either file: plus a general path (including drives on a UNC path on
Windows) or a file:/// URL in the same way as url().</para></item>
          <item><para>dQuote() and sQuote() are more flexible, with
rendering controlled by the new option 'useFancyQuotes'. This
includes the ability to have TeX-style rendering and directional
quotes (the so-called 'smart quotes') on Windows. The default is to
use directional quotes in UTF-8 locales (as before) and in the Rgui
console on Windows (new).</para></item>
          <item><para>duplicated() and unique() and their methods in
base gain an additional argument 'fromLast'.</para></item>
          <item><para>fifo() no longer has a default 'description'
argument. fifo("") is now implemented, and works in the same way as
file("").</para></item>
          <item><para>file.edit() and file.show() now tilde-expand
file paths on all interfaces (they used to on some and not
others).</para></item>
          <item><para>The find() argument is now named 'numeric' and
not 'numeric.': the latter was needed to avoid warnings about name
clashes many years ago, but partial matching was used.</para></item>
          <item><para>stats:::.getXlevels() confines attention to
factors since some users expected R to treat unclass(&lt;a factor&gt;)
as a numeric vector.</para></item>
          <item><para>grep(), strsplit() and friends now warn if
incompatible sets of options are used, instead of silently using the
documented priority.</para></item>
          <item><para>gsub()/sub() with perl = TRUE now preserves
attributes from the argument x on the result.</para></item>
          <item><para>is.finite() and is.infinite() are now S3 and S4
generic.</para></item>
          <item><para>jpeg(), png(), bmp() (Windows), dev2bitmap() and
bitmap() have a new argument 'units' to specify the units of 'width'
and 'height'.</para></item>
          <item><para>levels() is now generic (levels&lt;- has been
for a long time).</para></item>
          <item><para>Loading serialized raw objects with load() is
now considerably faster.</para></item>
          <item><para>New primitive nzchar() as a faster alternative
to nchar(x) &gt; 0 (and avoids having to convert to wide chars in a
MBCS locale and hence consider validity).</para></item>
          <item><para>The way old.packages() and hence
update.packages() handle packages with different versions in multiple
package repositories has been changed. The first package encountered
was selected, now the one with highest version number.</para></item>
          <item><para>optim(method = "L-BFGS-B") now accepts
zero-length parameters, like the other methods. Also, method = "SANN"
no longer attempts to optimize in this case.</para></item>
          <item><para>New options 'showWarnCalls' and 'showErrorCalls'
to give a concise traceback on warnings and errors.
showErrorCalls=TRUE is the default for non-interactive sessions.
Option 'showNCalls' controls how abbreviated the call sequence
is.</para></item>
          <item><para>New options 'warnPartialMatchDollar',
'warnPartialMatchArgs' and 'warnPartialMatchAttr' to help detect the
unintended use of partial matching in $, argument matching and attr()
respectively.</para></item>
          <item><para>A device named as a character string in
options(device =) is now looked for in the grDevices name space if it
is not visible from the global environment.</para></item>
          <item><para>pmatch(x, y, duplicates.ok = TRUE) now uses
hashing and so is much faster for large x and y when most matches are
exact.</para></item>
          <item><para>qr() is now generic.</para></item>
          <item><para>It is now a warning to have an non-integer
object for .Random.seed: this indicates a user had been playing with
it, and it has always been documented that users should only save and
restore it.</para></item>
          <item><para>New higher-order functions Reduce(), Filter()
and Map().</para></item>
          <item><para>[g]regexpr() gain an 'ignore.case' argument for
consistency with grep(). (This does change the positional matching of
arguments, but no instances of positional matching beyond the second
were found.)</para></item>
          <item><para>relist() utility, an S3 generic with several
methods, providing an 'inverse' for unlist();</para></item>
          <item><para>require() now returns invisibly.</para></item>
          <item><para>The interface to reshape() has been revised,
allowing some simplified forms that did not work before, and somewhat
improved error handling. A new argument 'sep' has been introduced to
replace simple usages of 'split' (the old features are
retained).</para></item>
          <item><para>rmultinom() uses a high-precision accumulator
where available, and so is more likely to give the same result on
different platforms (although it is still possible to get different
results, and the result may differ from previous versions of
R).</para></item>
          <item><para>row() and col() now work on matrix-like objects
such as data frames, not just matrices.</para></item>
          <item><para>Rprof() allows smaller values of 'interval' on
machines that support it: for example modern Linux systems support
interval = 0.001.</para></item>
          <item><para>sample() now requires its first argument 'x' to
be numeric (in the sense of is.numeric()) as well as of length 1 and
&gt;= 1 before it is regarded as shorthand for 1:x.</para></item>
          <item><para>sessionInfo() now provides details about package
name spaces that are loaded but not attached. The output of
sessionInfo has been improved to make it easier to read when it is
inadvertently wrapped after being pasted into an email
message.</para></item>
          <item><para>setRepositories() has a new argument 'ind' to
allow selections to be made programmatically.</para></item>
          <item><para>sprintf() no longer has a output string length
limit.</para></item>
          <item><para>storage.mode&lt;- is now primitive, and hence
makes fewer copies of an object (none if the mode is unchanged). It
is a little less general than mode&lt;-, which remains available.
(See also the entry under DEFUNCT below.)</para></item>
          <item><para>sweep() gains an argument 'check.margin = TRUE'
which warns about mismatched dimensions.</para></item>
          <item><para>The mathematical annotation facility (plotmath)
now recognises a symbol() function which forces the font to be a
symbol font. This allows access to all characters in the Adobe Symbol
encoding within plotmath expressions.</para></item>
          <item><para>For OSes that cannot unset environment
variables, Sys.unsetenv() sets the value to "", with a
warning.</para></item>
          <item><para>New function Sys.which(), an interface to
'which' on Unix-alikes and an emulation on Windows.</para></item>
          <item><para>On Unix-alikes, system(, intern = TRUE) reports
on very long lines that may be truncated, giving the line number of
the content being read.</para></item>
          <item><para>termplot() has a default for 'ask' that uses
dev.interactive(). It allows 'ylim' to be set, or computed to cover
all the plots to be made (the new default) or computed for each plot
(the previous default).</para></item>
          <item><para>uniroot(f, *) is slightly faster for non-trivial
f() because it computes f(lower) and f(upper) only once, and it has
new optional arguments 'f.lower' and 'f.upper' by which the caller can
pass these.</para></item>
          <item><para>unlink() is now internal, using common POSIX
code on all platforms.</para></item>
          <item><para>unsplit() now works with lists of
dataframes.</para></item>
          <item><para>The vcov() methods for classes "gls" and "nlme"
have migrated to package 'nlme'.</para></item>
          <item><para>vignette() has a new argument 'all' to choose
between showing vignettes in attached packages or in all installed
packages.</para></item>
          <item><para>New function within(), which is like with(),
except that it returns modified versions back of lists and data
frames.</para></item>
          <item><para>X11(), postscript() (and hence bitmap()),
xfig(), jpeg(), png() and the Windows devices win.print(),
win.metafile() and bmp() now warn (once at first use) if
semi-transparent colours are used (rather than silently treating them
as fully transparent).</para></item>
          <item><para>New function xspline() to provide base graphics
support of X-splines (cf grid.xspline).</para></item>
          <item><para>New function xyTable() does the 2D gridding
"computations" used by sunflowerplot().</para></item>
          <item><para>conversion to HTML and CHM now makes use of
classes, which are set in the stylesheets. Editing R.css will change
the styles used for \env, \option, \pkg etc. (CHM styles are set at
compilation time.)</para></item>
          <item><para>The documented arguments of '%*%' have been
changed to be x and y, to match S and the implicit S4
generic.</para></item>
          <item><para>If members of the Ops group (the arithmetic,
logical and comparison operators) and '%*%' are called as functions,
e.g. '&gt;'(x, y), positional matching is always used. (It used to be
the case that positional matching was used for the default methods,
but names would be matched for S3 and S4 methods and in the case of
'!' the argument name differed between S3 and S4
methods.)</para></item>
          <item><para>Imports environments of name spaces are named
(as "imports:foo"), and so are known e.g. to
environmentName().</para></item>
          <item><para>Package 'stats4' uses lazy-loading not SaveImage
(which is now deprecated).</para></item>
          <item><para>Installing help for a package now parses the .Rd
file only once, rather than once for each type.</para></item>
          <item><para>PCRE has been updated to version
7.2.</para></item>
          <item><para>bzip2 has been updated to version
1.0.4.</para></item>
          <item><para>gettext has been updated to version
0.16.1.</para></item>
          <item><para>There is now a global CHARSXP cache,
R_StringHash. CHARSXPs are no longer duplicated and must not be
modified in place. Developers should strive to only use mkChar (and
mkString) for creating new CHARSXPs and avoid use of allocString. A
new macro, CallocCharBuf, can be used to obtain a temporary char
buffer for manipulating character data.</para></item>
          <item><para>The internal equivalents of as.complex,
as.double, as.integer and as.logical used to handle length=1 arguments
now accept character strings (rather than report that this is
'unimplemented').</para></item>
          <item><para>Lazy-loading a package is now substantially more
efficient (in memory saved and load time).</para></item>
          <item><para>Various performance improvements lead to a 45%
reduction in the startup time without 'methods' (and one-sixth with -
'methods' now takes 75% of the startup time of a default
session).</para></item>
          <item><para>The [[ subsetting operator now has an argument
'exact' that allows programmers to disable partial matching (which
will in due course become the default). The default value is exact=NA
which causes a warning to be issued when partial matching occurs.
When exact = TRUE, no partial matching will be performed. When exact
= FALSE, partial matching can occur and no warning will be
issued.</para></item>
          <item><para>Many of the C-level warning / error messages
(e.g. from subscripting) have been re-worked to give more detailed
information on either the location or the cause of the
problem.</para></item>
          <item><para>The S3 and S4 Math groups have been harmonized.
Functions log1p(), expm1(), log10() and log2() are members of the S3
group, and sign(), log1p(), expm1(), log2(), cummax(), cummin(),
digamma(), trigamma() and trunk() are members of the S4 group.
gammaCody() is no longer in the S3 Math group. They are now all
primitive.</para></item>
          <item><para>The initialization of the random-number stream
makes use of the sub-second part of the current time where
available.</para></item>
          <item><para>Initialization of the 1997 Knuth TAOCP generator
is now done in R code, avoiding some C code whose licence status has
been questioned.</para></item>
          <item><para>The reporting of syntax errors has been made
more user- friendly.</para></item>
        </items>

        <items name="METHODS PACKAGE">
          <item><para>Packages using 'methods' have to have been
installed in R 2.4.0 or later (when various internal representations
were changed).</para></item>
          <item><para>Internally generic primitives no longer dispatch
S4 methods on S3 objects.</para></item>
          <item><para>load() and restoring a workspace attempt to
detect and warn on the loading of pre-2.4.0 S4 objects.</para></item>
          <item><para>Making functions primitive changes the semantics
of S4 dispatch: these no longer dispatch on classes based on types but
do dispatch whenever the function in the base name space is
called.</para>
          <para>This applies to as.complex(), as.integer(),
as.logical(), as.numeric(), as.raw(), expm1(), log(), log1p(), log2(),
log10(), gamma(), lgamma(), digamma() and trigamma(), as well as the
Math2 and Summary groups.</para>
          <para>Because all members of the group generics are now
primitive, they are all S4 generic and setting an S4 group generic
does at last apply to all members and not just those already made S4
generic.</para>
          <para>as.double() and as.real() are identical to
as.numeric(), and now remain so even if S4 methods are set on any of
them. Since 'as.numeric' is the traditional name used in S4, currently
methods must be exported from a NAMESPACE for 'as.numeric'
only.</para></item>
          <item><para>The S4 generic for '!' has been changed to have
signature (x) (was (e1)) to match the documentation and the S3
generic. setMethod() will fix up methods defined for (e1), with a
warning.</para></item>
          <item><para>The "structure" S4 class now has methods that
implement the concept of structures as described in the Blue
Book--that element-by-element functions and operators leave structure
intact unless they change the length. The informal behavior of R for
vectors with attributes was inconsistent.</para></item>
          <item><para>The implicitGeneric() function and relatives
have been added to specify how a function in a package should look
when methods are defined for it. This will be used to ensure that
generic versions of functions in R core are consistent.</para></item>
          <item><para>Error messages generated by some of the
functions in the methods package provide the name of the generic to
provide more contextual information.</para></item>
          <item><para>It is now possible to use
setGeneric(useAsDefault = FALSE) to define a new generic with the name
of a primitive function (but having no connection with the
primitive).</para></item>
          <item><para>showMethods() has a "smart" default for
'inherited' such that showMethods(&lt;genfun&gt;, incl = TRUE)
becomes a useful short cut.</para></item>
        </items>

        <items name="Deprecated and Defunct">
          <item><para>$ on an atomic vector now gives a warning that
it is 'invalid'. It remains deprecated, but may be removed in R &gt;=
2.7.0.</para></item>
          <item><para>storage.mode(x) &lt;- "real" and storage.mode(x)
&lt;- "single" are defunct: use instead storage.mode(x) &lt;- "double"
and mode(x) &lt;- "single".</para></item>
          <item><para>In package installation, SaveImage: yes is
deprecated in favour of LazyLoad: yes.</para></item>
          <item><para>seemsS4Object (methods package) is deprecated in
favour of isS4().</para></item>
          <item><para>It is planned that [[exact=TRUE]] will become
the default in R 2.7.0.</para></item>
        </items>

        <items name="Utilities">
          <item><para>checkS3methods() (invoked by R CMD check) now
checks the arguments of methods for primitive members of the S3 group
generics.</para></item>
          <item><para>R CMD check now does a recursive copy on the
'tests' directory.</para></item>
          <item><para>R CMD check now warns on non-ASCII .Rd files
without an \encoding field, rather than just on ones that are
definitely not from an ISO-8859 encoding. This agrees with the
long-standing stipulation in 'Writing R Extensions', and catches some
packages with UTF-8 man pages.</para></item>
          <item><para>R CMD check now warns on DESCRIPTION files with
a non-portable Encoding field, or with non-ASCII data and no Encoding
field.</para></item>
          <item><para>R CMD check now loads all the 'Suggests' and
'Enhances' dependencies to reduce warnings about non-visible objects,
and also emulates standard functions (such as shell()) on alternative
R platforms.</para></item>
          <item><para>R CMD check now (by default) attempts to latex
the vignettes rather than just weave and tangle them: this will give a
NOTE if there are latex errors.</para></item>
          <item><para>R CMD check computations no longer ignore Rd
\usage entries for functions for extracting or replacing parts of an
object, so S3 methods should use the appropriate \method{}
markup.</para></item>
          <item><para>R CMD check now checks for CR (as well as CRLF)
line endings in C/C++/Fortran source files, and for non-LF line
endings in Makefile[.in] and Makevars[.in] in the package 'src'
directory. R CMD build will correct non-LF line endings in source
files and in the make files mentioned.</para></item>
          <item><para>Rdconv now warns about unmatched braces rather
than silently omitting sections containing them. Rdconv now renders
(rather than ignores) \var{} inside \code{} markup in latex
conversion. R CMD  Rdconv gains a --encoding argument to set the
default encoding for conversions.</para></item>
          <item><para>The list of CRAN mirrors now has a new (manually
maintained) column "OK" which flags mirrors that seem to be OK, only
those are used by chooseCRANmirror(). The now exported function
getCRANmirrors() can be used to get all known mirrors or only the ones
that are OK.</para></item>
          <item><para>R CMD SHLIB gains arguments --clean and
--preclean to clean up intermediate files after and before
building.</para></item>
          <item><para>R CMD config now knows about FC and FCFLAGS
(used for F9x compilation).</para></item>
          <item><para>R CMD Rdconv now does a better job of rendering
quotes in titles in HTML, and \sQuote and \dQuote into text on
Windows.</para></item>
        </items>

        <items name="C-LEVEL FACILITIES">
          <item><para>New utility function alloc3DArray similar to
allocMatrix.</para></item>
          <item><para>The entry point R_seemsS4Object in Rinternals.h
has not been needed since R 2.4.0 and has been removed. Use
IS_S4_OBJECT instead.</para></item>
          <item><para>Applications embedding R can use
R_getEmbeddingDllInfo() to obtain DllInfo for registering symbols
present in the application itself.</para></item>
          <item><para>The instructions for making and using standalone
libRmath have been moved to the R Installation and Administration
manual.</para></item>
          <item><para>CHAR() now returns (const char *) since CHARSXPs
should no longer be modified in place. This change allows compilers
to warn or error about improper modification.</para></item>
          <item><para>acopy_string is a (provisional) new helper
function that copies character data and returns a pointer to memory
allocated using R_alloc. This can be used to create a copy of a
string stored in a CHARSXP before passing the data on to a function
that modifies its arguments.</para></item>
          <item><para>asLogical, asInteger, asReal and asComplex now
accept STRSXP and CHARSXP arguments, and asChar accepts
CHARSXP.</para></item>
          <item><para>New entry point R_GE_str2col listed in
R_ext/GraphicsEngine.h for external graphics device
developers.</para></item>
          <item><para>doKeybd and doMouseevent are now exported in
GraphicsDevice.h.</para></item>
          <item><para>R_alloc now has first argument of type 'size_t'
to support 64-bit platforms (e.g. Win64) with a 32-bit 'long'
type.</para></item>
          <item><para>The type of the last two arguments of
getMatrixDimnames (non-API but mentioned in R-exts.texi and in
Rinternals.h) has been changed to 'const char **' (from char
**).</para></item>
          <item><para>R_FINITE now always resolves to the function
call R_finite in packages (rather than sometimes substituting
isfinite). This avoids some issues where R headers are called from
C++ code using features tested on the C compiler.</para></item>
          <item><para>The advice to include R headers from C++ inside
extern "C" {} has been changed. It is nowadays better *not* to wrap
the headers, as they include other headers which on some OSes should
not be wrapped.</para></item>
          <item><para>Rinternals.h no longer includes a substantial
set of C headers. All but ctype.h and errno.h are included by R.h
which is supposed to be used before Rinternals.h.</para></item>
          <item><para>Including C system headers can be avoided by
defining NO_C_HEADERS before including R headers. This is intended to
be used from C++ code, and you will need to include C++ equivalents
such as &lt;cmath&gt; before the R headers.</para></item>
        </items>

        <items name="INSTALLATION">
          <item><para>The 'test-Lapack' test is now part of 'make
check'.</para></item>
          <item><para>The 'stat' system call is now required, along
with 'opendir' (which had long been used but not tested for). ('make
check' would have failed in earlier versions without these
calls.)</para></item>
          <item><para>'evince' is now considered as a possible PDF
viewer.</para></item>
          <item><para>'make install-strip' now also strips the DLLs in
the standard packages.</para></item>
          <item><para>Perl 5.8.0 (released in July 2002) or later is
now required. (R 2.4.0 and later have in fact required 5.6.1 or
later.)</para></item>
          <item><para>The C function 'finite' is no longer used: we
expect a C99 compiler which will have 'isfinite'. (If that is
missing, we test separately for NaN, Inf and -Inf.)</para></item>
          <item><para>A script/executable 'texi2dvi' is now required
on Unix-alikes: it is part of the texinfo distribution.</para></item>
          <item><para>Files texinfo.tex and txi-en.tex are no longer
supplied in doc/manual (as the latest versions have an incompatible
licence). You will need to ensure that your texinfo and/or TeX
installations supply them.</para></item>
          <item><para>wcstod is now required for MBCS
support.</para></item>
          <item><para>There are some experimental provisions for
building on Cygwin.</para></item>
        </items>

        <items name="Package Installation">
          <item><para>The encoding declared in the DESCRIPTION file is
now used as the default encoding for .Rd files.</para></item>
          <item><para>A standard for specifying package license
information in the DESCRIPTION License field was introduced, see
'Writing R Extensions'. In addition, files LICENSE or LICENCE in a
package top-level source directory are now installed (so putting
copies into the 'inst' subdirectory is no longer
necessary).</para></item>
          <item><para>install.packages() on a Unix-alike now updates
doc/html/packages.html only if packages are installed to .Library (by
that exact name).</para></item>
          <item><para>R CMD INSTALL --clean now runs SHLIB --clean to
do the clean up (unless there is a src/Makefile), and this will remove
$(OBJECTS) (which might have been redefined in
Makevars).</para></item>
          <item><para>R CMD INSTALL --preclean cleans up the sources
after a previous installation (as if that had used --clean) before
attempting to install.</para></item>
          <item><para>R CMD INSTALL will now run R CMD SHLIB in the
'src' directory if src/Makevars is present, even if there are no
source files with known extensions.</para></item>
          <item><para>If there is a file src/Makefile, src/Makevars is
now ignored (it could be included by src/Makefile if desired), and it
is preceded by etc/Makeconf rather than share/make/shlib.mk. Thus the
makefiles read are R_HOME/etc/Makeconf, src/Makefile in the package
and then any personal Makevars files.</para></item>
          <item><para>R CMD SHLIB used to support the use of 'OBJS' in
Makevars, but this was changed to 'OBJECTS' in 2001. The undocumented
alternative of 'OBJS' has finally been removed.</para></item>
          <item><para>R CMD check no longer issues a warning about no
data sets being present if a lazyload db is found (as determined by
the presence of Rdata.rdb, Rdata.rds, and Rdata.rdx in the 'data'
subdirectory.</para></item>
        </items>

        <items name="Bug Fixes">
          <item><para>charmatch() and pmatch() used to accept
non-integer values for 'nomatch' even though the return value was
documented to be integer. Now 'nomatch' is coerced to integer (rather
than the result being coerced to the type of 'nomatch').</para></item>
          <item><para>match.call() no longer 'works' outside a
function unless 'definition' is supplied. (Under some circumstances
it used to 'work', matching itself.)</para></item>
          <item><para>The formula methods of boxplot, cdplot, pairs
and spineplot now attach 'stats' so that model.frame() is visible
where they evaluate it.</para></item>
          <item><para>Date-time objects are no longer regarded as
numeric by is.numeric().</para></item>
          <item><para>methods("Math") did not work if 'methods' was
not attached.</para></item>
          <item><para>readChar() read an extra empty item (or more
than one) beyond the end of the source; in some conditions it would
terminate early when reading an item of length 0.</para></item>
          <item><para>Added a promise evaluation stack so interrupted
promise evaluations can be restarted.</para></item>
          <item><para>R.version[1:10] now nicely prints.</para></item>
          <item><para>In the methods package, prototypes are now
inherited for the .Data "slot"; i.e., for classes that contain one of
the basic data types.</para></item>
          <item><para>&lt;data frame&gt;[[i, j]] now works if 'i' is
character.</para></item>
          <item><para>write.dcf() no longer writes NA fields
(PR#9796), and works correctly on empty descriptions.</para></item>
          <item><para>pbeta(x, log.p = TRUE) now has improved accuracy
in many cases, and so have functions depending on it such as pt(),
pf() and pbinom().</para></item>
          <item><para>mle() had problems with the L-BFGS-B in the
no-parameter case and consequentially also when profiling 1-parameter
models</para></item>
          <item><para>Two bugs fixed in methods that in involve the
"..." argument in the generic function: previously failed to catch
methods that just dropped the "..."; and use of callGeneric() with no
arguments failed in some circumstances when "..." was a formal
argument.</para></item>
          <item><para>sequence() now behaves more reasonably, although
not back-compatibly for zero or negative input.</para></item>
          <item><para>nls() now allows more peculiar but reasonable
ways of being called, e.g., with data=list(&lt;uneven lengths&gt;) or
a model without variables.</para></item>
          <item><para>match.arg() was not behaving as documented when
several.ok=TRUE (PR#9859), gave spurious warnings when 'arg' had the
wrong length and was incorrectly documented (exact matches are
returned even when there is more than one partial
match).</para></item>
          <item><para>The data.frame method for split&lt;-() was
broken.</para></item>
          <item><para>The test for -D__NO_MATH_INLINES was badly
broken and returned true on all non-glibc platforms and false on all
glibc ones (whether they were broken or not).</para></item>
          <item><para>LF was missing after the last prompt when
--quiet was used without --slave. Use --slave when no final LF is
desired.</para></item>
          <item><para>Fixed bug in initialisation code in 'grid'
package for determining the boundaries of shapes. Problem reported by
Hadley Wickham;  symptom was error message: "Polygon edge not
found".</para></item>
          <item><para>str() is no longer slow for large POSIXct
objects. Its output is also slightly more compact for such objects;
implementation via new optional argument 'give.head'.</para></item>
          <item><para>strsplit(*, fixed=TRUE), potentially iconv() and
internal string formatting is now faster for large strings, thanks to
report PR#9902.</para></item>
          <item><para>de.restore() gave a spurious warning for
matrices (Ben Bolker)</para></item>
          <item><para>plot(fn, xlim=c(a,b)) would not set "from" and
"to" properly when plotting a function. The argument lists to curve()
and plot.function() have been modified slightly as part of the
fix.</para></item>
          <item><para>julian() was documented to work with POSIXt
origins, but did not work with POSIXlt ones. (PR#9908)</para></item>
          <item><para>Dataset HairEyeColor has been corrected to agree
with Friendly (2000): the change involves the breakdown of the Brown
hair / Brown eye cell by Sex, and only totals over Sex are given in
the original source.</para></item>
          <item><para>Trailing spaces are now consistently stripped
from \alias{} entries in .Rd files, and this is now documented.
(PR#9915)</para></item>
          <item><para>.find.packages(), packageDescription() and
sessionInfo() assumed that attached environments named "package:foo"
were package environments, although misguided users could use such a
name in attach().</para></item>
          <item><para>spline() and splinefun() with method =
"periodic" could return incorrect results when length(x) was 2 or
3.</para></item>
          <item><para>getS3method() could fail if the method name
contained a regexp metacharacter such as "+".</para></item>
          <item><para>help(&lt;a character vector&gt;) now uses the
name and not the value of the vector unless it has length exactly one,
so e.g. help(letters) now gives help on 'letters'. (Related to
PR#9927)</para></item>
          <item><para>Ranges in chartr() now work better in CJK
locales</para></item>
        </items>
      </change>

      <change from="2.5.1" to="2.5.1patched">
        <items name="INSTALLATION">
          <item><para>doc/manual now includes the texinfo support file
epsf.tex which basic TeX installations often omit.</para></item>
        </items>

        <items name="Bug Fixes">
          <item><para>Attempting to do in-memory serialization of an
object requiring more than 1Gb might have failed.</para></item>
          <item><para>Using formals&lt;- on a function whose body was
NULL worked incorrectly. (PR#9758)</para></item>
          <item><para>logb() is now strictly a wrapper for log(), so
if S4 methods are set on log(), logb() will also dispatch on
them.</para></item>
          <item><para>conflicts(where=) did not work correctly.
(PR#9760)</para></item>
          <item><para>log(x, base) was intended to handle complex
'base' even for real 'x', but there was a typo in the code to do
so.</para></item>
          <item><para>Syntax errors would sometimes misreport the
error context.</para></item>
          <item><para>qt(p, df=1) is now also correct for very small
p. (PR#9804) qt(p, df=2) ditto; also is more accurate for  0 &lt; |p -
0.5| &lt;&lt; 1. qt(*, log.p=TRUE) now is finite and monotone (again!)
where possible.</para></item>
          <item><para>Several functions including those making use of
printCoefmat(), layout() and sortedXyData() now work correctly with
non-default settings of options("OutDec").</para></item>
          <item><para>S4 method dispatch for group generics (and %*%)
failed to pass arguments to methods as promises and so in some
circumstances methods could change their arguments. (Seen for the
'Math' group with package Matrix.)</para></item>
          <item><para>The print() method for "ts" now handles
quarterly and monthly series which do not start at the beginning of a
quarter or month respectively.</para></item>
          <item><para>Deserializing raw objects saved using save(...,
ascii=TRUE) now works correctly.</para></item>
          <item><para>ISOLatin7 encoding for postscript/PDF has been
corrected. (PR#9845)</para></item>
          <item><para>rbind(x,y) and cbind(x,y) did not dispatch
properly when x and y had multiple S3-style classes.</para></item>
          <item><para>The workaround for seeking on &gt; 2Gb files did
not work correctly on Unix-alike 32-bit systems.
(PR#9883)</para></item>
          <item><para>We had identical(NaN, NA_real_) !=
identical(NA_real_, NaN)</para></item>
        </items>
      </change>

      <change from="2.5.0" to="2.5.1">
        <items name="New Features">
          <item><para>density(1:20, bw = "SJ") now works as bw.SJ()
now tries a larger search interval than the default (lower, upper) if
it does not find a solution within the latter.</para></item>
          <item><para>The output of library() (no arguments) is now
sorted by library trees in the order of .libPaths() and not
alphabetically.</para></item>
          <item><para>R_LIBS_USER and R_LIBS_SITE feature possible
expansion of specifiers for R version specific information as part of
the startup process.</para></item>
          <item><para>C-level warning calls now print a more
informative context, as C-level errors have for a while.</para></item>
          <item><para>There is a new option "rl_word_breaks" to
control the way the input line is tokenized in the readline-based
terminal interface for object- and file-name completion. This allows
it to be tuned for people who use their space bar vs those who do not.
The default now allows filename-completion with +-* in the
filenames.</para></item>
          <item><para>If the srcfile argument to parse() is not NULL,
it will be added to the result as a "srcfile" attribute.</para></item>
          <item><para>It is no longer possible to interrupt
lazy-loading (which was only at all likely when lazy-loading
environments), which would leave the object being loaded in an
unusable state. This is a temporary measure: error-recovery when
evaluating promises will be tackled more comprehensively in
2.6.0.</para></item>
        </items>

        <items name="INSTALLATION">
          <item><para>'make check' will work with --without-iconv, to
accommodate building on AIX where the system iconv conflicts with
libiconv and is not compatible with R's requirements.</para></item>
          <item><para>There is support for 'DESTDIR': see the R-admin
manual.</para></item>
          <item><para>The texinfo manuals are now converted to HTML
with a style sheet: in recent versions of makeinfo the markup such
as @file was being lost in the HTML rendering.</para></item>
          <item><para>The use of inlining has been tweaked to avoid
warnings from gcc &gt;= 4.2.0 when compiling in C99 mode (which is the
default from configure).</para></item>
        </items>

        <items name="Bug Fixes">
          <item><para>as.dendrogram() failed on objects of class
"dendrogram".</para></item>
          <item><para>plot(type ="s") (or "S") with many (hundreds of
thousands) of points could overflow the stack.
(PR#9629)</para></item>
          <item><para>Coercing an S4 classed object to "matrix" (or
other basic class) failed to unset the S4 bit.</para></item>
          <item><para>The 'useS4' argument of print.default() had been
broken by an unrelated change prior to 2.4.1. This allowed print()
and show() to bounce badly constructed S4 objects between themselves
indefinitely.</para></item>
          <item><para>Prediction of the seasonal component in
HoltWinters() was one step out at one point in the
calculations.</para></item>
          <item><para>decompose() incorrectly computed the 'random'
component for a multiplicative fit.</para></item>
          <item><para>Wildcards work again in unlink() on Unix-alikes
(they did not in 2.5.0).</para></item>
          <item><para>When qr() used pivoting, the coefficient names
in qr.coef() were not pivoted to match. (PR#9623)</para></item>
          <item><para>UseMethod() could crash R if the first argument
was not a character string.</para></item>
          <item><para>R and Rscript on Unix-alikes were not accepting
spaces in -e arguments (even if quoted).</para></item>
          <item><para>Hexadecimal integer constants (e.g. 0x10L) were
not being parsed correctly on platforms where the C function atof did
not accept hexadecimal prefixes (as required by C99, but not
implemented in MinGW as used by R on Windows).
(PR#9648)</para></item>
          <item><para>libRlapack.dylib on Mac OS X had no version
information and sometimes an invalid identification
name.</para></item>
          <item><para>Rd conversion of \usage treated '\\' as a single
backslash in all but latex: it now acts consistently with the other
verbatim-like environments (it was never 'verbatim' despite the
documentation).</para>
          <para>\code{\.} is now rendered as '\.' in all formats, as
documented (it was not the case for latex conversion).</para>
          <para>codoc() (and checkDocStyle() and checkDocUsage())
now apply the same transformations to \usage as Rd conversion does, so
{, % and \\ in strings in usages will now be related correctly to the
help files.</para></item>
          <item><para>rbind() failed if the only data frame had 0
rows. (PR#9657)</para></item>
          <item><para>&lt;a data.frame&gt;[i, j] could sometimes
select the wrong column when j is numeric if there are duplicate
column names.</para></item>
          <item><para>sample(x, size, replace=TRUE, prob) had a memory
leak if 10000 &lt; size &lt;= 100000.</para></item>
          <item><para>x &lt;- cbind(1:2); rownames(x) &lt;-
factor(c("A",NA))  now longer segfaults.</para></item>
          <item><para>R CMD BATCH no longer assumes Sys.unsetenv() is
supported (it is not on older Solaris systems).</para></item>
          <item><para>median() returned a logical result when it was
'NA': it now returns an NA of appropriate type (e.g. integer or
double).</para></item>
          <item><para>grep(fixed = TRUE, perl = TRUE) ignored 'fixed',
although it was documented to ignore 'perl' Same for [g]regexpr and
[g]sub.</para></item>
          <item><para>getNamespaceExports("base") works
again.</para></item>
          <item><para>runmed(c(), 1) no longer
segfaults.</para></item>
          <item><para>qr.coef(QR, b) failed for an LAPACK-produced QR
if b was integer or for an over-determined system.</para></item>
          <item><para>qr.solve() for an under-determined system
produces a solution with 0 and not NA for columns which are
unused.</para></item>
          <item><para>segments() was not handling full transparency
correctly in PDF. (PR#9694) Nor was arrows().</para></item>
          <item><para>callGeneric() inside a method with extra
arguments {and hence currently defined via .local()} now
works.</para></item>
          <item><para>[g]sub(fixed=TRUE, useBytes=FALSE) could
substitute in the wrong place in an MBCS locale.</para></item>
          <item><para>gregexpr() could give incorrect answers in MBCS
locales for perl = TRUE or fixed = TRUE (unless useBytes =
TRUE).</para></item>
          <item><para>The legacy quartz() device no longer crashes in
locator() if the user attempts to close the window.</para></item>
          <item><para>"CGGStackRestore: gstack underflow" warning is
no longer shown in legacy quartz() device.</para></item>
          <item><para>formatC() now limits 'digits' to 50 to avoid
problems in C-level sprintf in some OSes.</para></item>
          <item><para>seq.int(x, y, by=z) gave 'x' (and not an error)
if 0 &gt; (y-x)/z &gt; -1.</para></item>
          <item><para>promptClass() now lists methods, including those
for generics in other attached packages.</para></item>
          <item><para>Connection-related functions such as readBin()
no longer crash when supplied with a non-connection
object.</para></item>
          <item><para>as.character.srcref() didn't handle bad srcref
objects cleanly.</para></item>
          <item><para>predict.nls() no longer requires 'newdata' to
contain exactly the variable names needed to fit the model: variables
used on the LHS only are no longer required and further variables are
allowed.</para></item>
          <item><para>plot.hclust() had a 'out by one' error, and
ignored the last object when computing the window region (and could
overrun arrays).</para></item>
          <item><para>deriv() was creating results with double (and
not integer) dims.</para></item>
          <item><para>The unserialize code (e.g. as called by load())
looked for a function findPackageEnv() to set a saved package
environment. This was missing, but is now supplied.</para></item>
          <item><para>[cr]bind could segfault when creating a list
matrix result.</para></item>
          <item><para>besselI(x, nu, exp=TRUE) and besselY(x, nu)
could give wrong answers for nu &lt; 0.</para></item>
          <item><para>[g]sub could confuse a trailing byte '\' for a
backreference in MBCSs where '\' can occur as a trailing byte (not
UTF-8 nor EUC-JP, but SJIS and the CJK character sets used on
Windows). (PR#9751)</para></item>
        </items>
      </change>

      <change from="2.4.1patched" to="2.5.0">
        <items name="User-visible Changes">
          <item><para>apropos(x) and find(x) now both only work for
character 'x', and hence drop all non-standard evaluation
behaviour.</para></item>
          <item><para>Data frames can have 'automatic' row names which
are not converted to dimnames by as.matrix(). (Consequently, e.g.,
t(.)  for such data frames has NULL column names.)  This change leads
to memory reductions in several places, but can break code which
assumes character dimnames for data frames derived from matrices. No
existing R object is regarded as having 'automatic' row names, and it
may be beneficial to recreate such objects via read.table() or
data.frame().</para></item>
          <item><para>Using $ on an atomic vector now raises a
warning, as does use on an S4 class for which a method has not been
defined.</para></item>
          <item><para>The Unix-alike readline terminal interface now
does command-completion for R objects, incorporating the functionality
formerly in package 'rcompletion' by Deepayan Sarkar. This can be
disabled by setting the environment variable R_COMPLETION=FALSE when
starting R (e.g. in ~/.Renviron). (Note that when this is enabled,
filename completion no longer works for file paths containing R
operators such as '+' and '-'.)</para></item>
        </items>

        <items name="New Features">
          <item><para>abbreviate() no longer has an 8191 byte limit on
the size of strings it can handle.</para></item>
          <item><para>abs(x) now returns integer for integer or
logical arguments.</para></item>
          <item><para>apropos() has a new argument 'ignore.case' which
defaults to TRUE, potentially matching more than
previously</para></item>
          <item><para>args(), str() and print() now give the argument
lists of primitive functions.</para></item>
          <item><para>as.matrix() gains the '...' argument that
several packages have assumed it always had (and S-PLUS
has).</para></item>
          <item><para>Manipulation of integers as roman numerals via
as.roman() in package utils.</para></item>
          <item><para>attr() no longer treats name = NA_character_ as
meaning name = "NA".</para></item>
          <item><para>binom.test() now allows a 'fuzz' for calculated
integer values in its x and n arguments.</para></item>
          <item><para>boxplot(*, notch = TRUE) now warns when notches
are outside hinges; related to PR#7690.</para></item>
          <item><para>New function callCC() providing a downward-only
version of Scheme's call with current continuation.</para></item>
          <item><para>capabilities() now has a "profmem" entry
indicating whether R has been compiled with memory
profiling.</para></item>
          <item><para>colnames&lt;-() and rownames&lt;-() now handle
data frames explicitly, so calling colnames&lt;- on a data frame no
longer alters the representation of the row names.</para></item>
          <item><para>commandArgs() has a new 'trailingOnly' argument
to be used in conjunction with --args.</para></item>
          <item><para>contour() now passes graphical parameters in
'...' to axis() and box().</para></item>
          <item><para>New data set 'crimtab' on Student(1908)'s 3000
criminals.</para></item>
          <item><para>cut.default() has a new argument
'ordered_result'.</para></item>
          <item><para>.deparseOpts() has two new options: "keepNA" to
ensure that different types (logical, integer, double, character and
complex) of NAs are distinguished, and "S_compatible" to suppress the
use of R-specific features such as 123L and to deparse integer values
of a double vector with a trailing decimal point.</para>
          <para>The 'keepInteger' option now uses the suffix 'L'
rather than as.integer() where possible (unless all entries are NA or
"S_compatible" is also set).</para>
          <para>Other deparse options can now be added to "all"
(which has not for some time actually switched on all options).</para>
          <para>Integer sequences m:n are now deparsed in that
form.</para></item>
          <item><para>deparse() and dput() now include "keepInteger"
and "keepNA" in their defaults for the 'control'
argument.</para></item>
          <item><para>detach() now takes another argument, unload,
which indicates whether or not to unload the package and then only
cleans up the S4 methods if the package successfully
unloads.</para></item>
          <item><para>There are new constants NA_integer_, NA_real_,
NA_complex_ and NA_character_ to denote NAs of those types, and they
will be used in deparsing in place of as.integer(NA) etc unless
.deparseOpts() includes "S_compatible".</para></item>
          <item><para>dev.print() now recognizes 'screen devices' as
all those with an enabled display list, rather than a hard-coded
set.</para></item>
          <item><para>Objects of class "difftime" are now handled more
flexibly. The units of such objects can now be accessed via a units()
function, which also has a replacement form, and there are conversion
methods to and from numeric, which also allow the specification of
units. Objects of this class can also be stored in data frames
now. A format() method has been added, and the print method was
revised.</para></item>
          <item><para>New function environmentName() to give the print
name of environments such as "namespace:base". This is now used by
str().</para></item>
          <item><para>New function env.profile() provides R level
access to summary statistics on environments. In a related patch,
new.env() now allows the user to specify an initial size for a hashed
environment.</para></item>
          <item><para>file() can read the X11 clipboard selection as
"X11_clipboard" on suitable X11-using systems.</para></item>
          <item><para>file("stdin") is now recognized, and refers to
the process's 'stdin' file stream whereas stdin() refers to the
console. These may differ, for example for a GUI console, an embedded
application of R or if --file= has been used.</para></item>
          <item><para>file_test() is now also available in package
utils. (It is now private in package tools.)</para></item>
          <item><para>file.show() gains an 'encoding'
argument.</para></item>
          <item><para>New functions formatUL() and formatOL() in
package utils for formatting unordered (itemize) and ordered
(enumerate) lists.</para></item>
          <item><para>The statistics reported when gcinfo(TRUE) are
now of the amounts used (in Mb) and not of the amounts free (which are
not really relevant when there are no hard limits, only gc trigger
points).</para></item>
          <item><para>New function get_all_vars() to retrieve all the
(untransformed) variables that the default method of model.frame()
would use to create the model frame.</para></item>
          <item><para>interaction() has a new argument
'lex.order'.</para></item>
          <item><para>initialize() (in methods) now tries to be
smarter about updating the new instance in place, thereby reducing
copying.</para></item>
          <item><para>install.packages(dependencies = NA) is a new
default, which is to install essential dependencies when installing
from repositories to a single library. As a result of this change,
update.packages() will install any new dependencies of the packages it
is updating (alongside the package in the same library tree). If 'lib'
is not specified or is specified of length one and the chosen location
is not a writable directory, install.packages() offers to create a
personal library directory for you if one does not already exist, and
to install there.</para></item>
          <item><para>is.atomic, is.call, is.character, is.complex,
is.double (== is.real), is.environment, is.expression, is.function,
is.integer, is.list, is.logical, is.null, is.object, is.pairlist,
is.recursive, is.single and is.symbol (== is.name) are no longer
internally S3 generic, nor can S4 methods be written for
them.</para></item>
          <item><para>The "factor" methods of is.integer and
is.numeric have been replaced by internal code.</para></item>
          <item><para>Added is.raw() for completeness.</para></item>
          <item><para>l10n_info() also reports if the current locale
is Latin-1.</para></item>
          <item><para>levels&lt;-(), names() and names&lt;-() now
dispatch internally for efficiency and so no longer have S3 default
methods.</para></item>
          <item><para>.libPaths() now does both tilde and glob
expansion.</para></item>
          <item><para>Functions lm(), glm() loess(), xtabs() and the
default method of model.frame() coerce their 'formula' argument (if
supplied) to a formula.</para></item>
          <item><para>max(), min() and range() now work with character
vectors.</para></item>
          <item><para>message() has a new argument 'appendLF' to
handle messages with and without newlines. There is a new message
class packageStartupMessage() that can be suppressed
separately.</para></item>
          <item><para>A new function, method.skeleton() writes a
skeleton version of a call to setMethod() to a file, with correct
arguments and format, given the name of the function and the method
signature.</para></item>
          <item><para>mode&lt;- and storage.mode&lt;- do slightly less
copying.</para></item>
          <item><para>nls.control(* , printEval = FALSE, warnOnly =
FALSE) are two new options to help better analyze (non-)convergence of
nls(),</para></item>
          <item><para>nls() and summary(nls()) now contain more
information and also print information about
convergence.</para></item>
          <item><para>options(device = ) now accepts a function object
as well as the name of a function.</para></item>
          <item><para>pdf() supports new values for 'paper' of "US"
(same as "letter"), "a4r" and "USr" (the latter two meaning rotated to
landscape). postscript() also accepts paper = "US".</para></item>
          <item><para>persp() now respects the graphical pars
'cex.axis', 'cex.lab', 'font.axis' and 'font.lab'.</para></item>
          <item><para>New faster internal functions pmax.int() and
pmin.int() for inputs which are atomic vectors without classes (called
by pmax/pmin where applicable). pmin/pmax are now more likely to work
with classed objects: they work with POSIXlt datetimes, for
example.</para></item>
          <item><para>postscript() now by default writes grey colors
(including black and white) via 'setgray', which gives more widely
acceptable output. There are options to write pure RGB, CMYK or gray
via the new argument 'colormodel'.</para></item>
          <item><para>rbind.data.frame() now ignores all zero-row
inputs, as well as zero-column inputs (which it used to do,
undocumented). This is because read.table() can create zero-row data
frames with NULL columns, and those cannot be extended.</para></item>
          <item><para>readChar() and writeChar() can now work with a
raw vector.</para></item>
          <item><para>read.table(), write.table() and allies have been
moved to package utils.</para></item>
          <item><para>rgb() now accepts the red, green and blue
components in a single matrix or data frame.</para></item>
          <item><para>New utility function RShowDoc() in package
'utils' to find and display manuals and other documentation
files.</para></item>
          <item><para>New .row_names_info() utility function finds the
number of rows efficiently for data frames; consequently,
dim.data.frame() has become very fast for large data frames with
'automatic' row names.</para></item>
          <item><para>RSiteSearch() now also allows to search postings
of the 'R-devel' mailing list.</para></item>
          <item><para>screeplot() is now (S3) generic with a default
method, thanks to a patch from Gavin Simpson.</para></item>
          <item><para>Experimental 'verbose' argument for
selectMethod(). Might be replaced later by a better interface for
method selection inspection.</para></item>
          <item><para>Added links to source files to the parsing
routines, so that source() can now echo the original source and
comments (rather than deparsing). This affects example() and Sweave()
as well.</para></item>
          <item><para>stack() and unstack() have been moved to package
utils.</para></item>
          <item><para>strptime() now sets the "tzone" attribute on the
result if tz != "".</para></item>
          <item><para>str.default() typically prints fewer entries of
logical vectors.</para></item>
          <item><para>The RweaveLatex driver for Sweave() now supports
two new options: expand=FALSE, to show chunk references in the output,
and concordance=TRUE, to output the concordance between input and
output lines.</para></item>
          <item><para>system() now takes the same set of arguments on
all platforms, with those which are not applicable being ignored with
a warning. Unix-alikes gain 'input' and 'wait', and Windows gains
'ignore.stderr'.</para></item>
          <item><para>system.time() and proc.time() now return an
object of class "proc_time" with a print() method that returns a
POSIX-like format with names.</para></item>
          <item><para>Sys.getenv() has a new argument 'unset' to allow
unset and set to "" to be distinguished (if the OS does). The results
of Sys.getenv() are now sorted (by name).</para></item>
          <item><para>New function Sys.glob(), a wrapper for the
POSIX.2 function glob(3) to do wildcard expansion (on systems which
have it, plus an emulation on Windows).</para></item>
          <item><para>Sys.setenv() is a new (and preferred) synonym
for Sys.putenv(). The internal C code uses the POSIX-preferred
'setenv' rather than 'putenv' where the former is
available.</para></item>
          <item><para>New function Sys.unsetenv() to remove
environment variables (on systems where unsetenv is implemented or
putenv can remove variables, such as on Windows).</para></item>
          <item><para>text(), mtext(), strheight(), strwidth(),
legend(), axis(), title(), pie(), grid.text() and textGrob() all
attempt to coerce non-language annotation objects (in the sense of
is.object) to character vectors. This is principally intended to
cover factors and POSIXt and Date objects, and is done via the new
utility function as.graphicsAnnot() in package
grDevices.</para></item>
          <item><para>tcltk:tk_select.list() now chooses the width to
fit the widest item.</para></item>
          <item><para>{re,un}tracemem() are now primitives for
efficiency and so migrate from 'utils' to 'base'.</para></item>
          <item><para>union(), interect(), setdiff() and setequal()
now coerce their arguments to be vectors (and they were documented
only to apply to vectors).</para></item>
          <item><para>uniroot() now works if the zero occurs at one of
the ends of the interval.</para></item>
          <item><para>There is a new function View() for viewing
matrix-like objects in a spreadsheet, which can be left up whilst R is
running.</para></item>
          <item><para>New function withVisible() allows R level access
to the visibility flag.</para></item>
          <item><para>zip.file.extract() has been moved to package
utils.</para></item>
          <item><para>A few more cases of subassignment work, e.g.
&lt;raw&gt;[] &lt;- &lt;list&gt; and &lt;vector&gt;[] &lt;-
&lt;expression&gt;, with suitable coercion of the LHS.</para></item>
          <item><para>There is a warning if \ is used unnecessarily in
a string when being parsed, e.g. "\." where probably "\\." was
intended. ("\." is valid, but the same as ".".)</para></item>
          <item><para>Introduced the suffix L for integer literals to
create integer rather than numeric values, e.g. 100L, 0x10L,
1e2L.</para></item>
          <item><para>Set the parser to give verbose error messages in
case of syntax errors.</para></item>
          <item><para>The class "LinearMethodsList" has been extended
and will be used to create list versions of methods, derived from the
methods tables (environments). The older recursive "MethodsList" class
will be deprecated (by the release of 2.5.0 if
possible).</para></item>
          <item><para>There are more flexible ways to specify the
default library search path. In addition to R_LIBS and .Library,
there are .Library.site (defaults to R_HOME/site-library) and
R_LIBS_USER (defaults to a platform- and version-specific directory in
~/R).</para></item>
          <item><para>LAPACK has been updated to version 3.1.0. This
should cause only small changes to the output, but do remember that
the sign of eigenvectors (and principal components) is
indeterminate.</para></item>
          <item><para>PCRE has been updated to version
7.0.</para></item>
          <item><para>Several functions handle row names more
efficiently:</para>
          <unorderedlist>
            <item><para>read.table() and read.DIF() make use of integer row
names where appropriate, and avoid at least one copy in assigning
them.</para></item>
            <item><para>data.frame() and the standard as.data.frame()
methods avoid generating long dummy row names and then discarding
them.</para></item>
            <item><para>expand.grid() and merge() generate compact
'automatic' row names.</para></item>
            <item><para>data.matrix() and as.matrix.data.frame() have a new
argument 'rownames.force' that by default drops 'automatic' row
names.</para></item>
          </unorderedlist></item>
          <item><para>&lt;data frame&gt;[i, j] is substantially more
memory-efficient when only a small part of the data frame is selected,
especially when (part of) a single column is selected.</para></item>
          <item><para>Command-line R (and Rterm.exe under Windows)
accepts the options '-f filename', '--file=filename' and '-e
expression' to follow other script interpreters. These imply
--no-save unless --save is specified.</para></item>
          <item><para>Invalid bytes in character strings in an MBCS
now deparse/print in the form "\xc1" rather than "&lt;c1&gt;", which
means they can be parsed/scanned.</para></item>
          <item><para>Printing functions (without source attributes)
and expressions now preserves integers (using the L suffix) and NAs
(using NA_real_ etc where necessary).</para></item>
          <item><para>The 'internal' objects .helpForCall, .tryHelp
and topicName are no longer exported from 'utils'.</para></item>
          <item><para>The internal regex code has been upgraded to
glibc 2.5 (from 2.3.6).</para></item>
          <item><para>Text help now attempts to display files which
have an \encoding section in the specified encoding via
file.show().</para></item>
          <item><para>R now attempts to keep track of character
strings which are known to be in Latin-1 or UTF-8 and print or plot
them appropriately in other locales. This is primarily intended to
make it possible to use data in Western European languages in both
Latin-1 and UTF-8 locales. Currently scan(), read.table(),
readLines(), parse() and source() allow encodings to be declared, and
console input in suitable locales is also recognized. New function
Encoding() can read or set the declared encodings for a character
vector.</para></item>
          <item><para>There have been numerous performance
improvements to the data editor on both Windows and X11. In
particular, resizing the window works much better on
X11.</para></item>
          <item><para>Packages graphics and grid no longer require
grDevices, as they might be used only with third-party
devices.</para></item>
        </items>

        <items name="Deprecated and Defunct">
          <item><para>symbol.C() and symbol.For() are defunct, and
have been replaced by wrappers that give a warning.</para></item>
          <item><para>Calling a builtin function with an empty
argument is now always an error.</para></item>
          <item><para>The autoloading of ts() is
defunct.</para></item>
          <item><para>The undocumented reserved word GLOBAL.ENV has
been removed. (It was yet another way to get the value of the symbol
.GlobalEnv.)</para></item>
          <item><para>The deprecated behaviour of structure() in
adding a class when specifying with "tsp" or "levels" attributes is
now defunct.</para></item>
          <item><para>unix() is now finally defunct, having been
deprecated for at least seven years.</para></item>
          <item><para>Sys.putenv() is now deprecated in favour of
Sys.setenv(), following the POSIX recommendation.</para></item>
          <item><para>Building R with --without-iconv is
deprecated.</para></item>
          <item><para>Using $ on an atomic vector is deprecated (it
was previously valid and documented to return NULL).</para></item>
          <item><para>The use of storage.mode&lt;- for other than
standard types (and in particular for value "single") is deprecated:
use mode&lt;- instead.</para></item>
        </items>

        <items name="INSTALLATION">
          <item><para>A suitable iconv (e.g. from glibc or GNU
libiconv) is required. For 2.5.x only you can build R without it by
configuring using --without-iconv.</para></item>
          <item><para>There is support again for building on AIX
(tested on 5.2 and 5.3)</para></item>
          <item><para>Autoconf 2.60 or later is used to create
'configure'. This makes a number of small changes, and incorporates
the changes to the detection of a C99-compliant C compiler backported
for 2.4.1.</para></item>
          <item><para>Detection of a Java development environment was
added such that packages don't need to provide their own Java
detection. Newly added make variables are JAVAC, JAVAH, JAR and
JAVA_CPPFLAGS. R CMD javareconf was updated to look for the
corresponding Java tools as well. In addition, Java detection honors
user-supplied environment variables JAVA_CPPFLAGS, JAVA_LIBS and
JAVA_LD_LIBRARY_PATH.</para></item>
          <item><para>Added workaround for reported non-POSIX sh on
OSF1. (PR#9375)</para></item>
          <item><para>'make install-strip' now works, stripping the
executables and also the shared libraries and modules on platforms
where 'libtool' knows how to do so.</para></item>
          <item><para>Building R as a shared library and standalone
nmath now installs pkg-config files 'libR.pc' and 'libRmath.pc'
respectively.</para></item>
          <item><para>Added test for insufficiently complete
implementation of sigaction.</para></item>
        </items>

        <items name="C-LEVEL FACILITIES">
          <item><para>Functions str2type, type2char and type2str are
now available in Rinternals.h.</para></item>
          <item><para>Added support for Objective C in R and packages
(if available).</para></item>
          <item><para>R_ParseVector() has a new 4th argument 'SEXP
srcfile' allowing source references to be attached to the returned
expression list.</para></item>
          <item><para>Added ptr_R_WriteConsoleEx callback which allows
consoles to distinguish between regular output and errors/warnings. To
ensure backward compatibility it is only used if ptr_R_WriteConsole is
set to NULL.</para></item>
        </items>

        <items name="Utilities">
          <item><para>Additional Sweave() internal functions are
exported to help writing new drivers, and RweaveLatexRuncode() is now
created using a helper function</para></item>
          <item><para>The following additional flags are accessible
from R CMD config: OBJC, OBJCFLAGS, JAR, JAVA, JAVAC, JAVAH,
JAVA_HOME, JAVA_LIBS and JAVA_CPPFLAGS.</para></item>
          <item><para>R CMD build now takes the package name from the
DESCRIPTION file and not from the directory. (PR#9266)</para></item>
          <item><para>checkS3methods() (and hence R CMD check) now
checks agreement with primitive internal generics, and checks for
additional arguments in methods where the generic does not have a
'...' argument.</para></item>
          <item><para>codoc() now knows the argument lists of
primitive functions.</para></item>
          <item><para>R CMD INSTALL and R CMD REMOVE now use as the
default library (if -l is not specified) the first library that would
be used if R were run in the current environment (and they run R to
find it).</para></item>
          <item><para>There is a new front-end Rscript which can be
used for #! scripts and similar tasks. See help("Rscript") and 'An
Introduction to R' for further details.</para></item>
          <item><para>R CMD BATCH (not Windows) no longer prepends
'invisible(options(echo = TRUE))' to the input script. This was the
default unless --slave is specified and the latter is no longer
overridden.</para>
          <para>On all OSes it makes use of the -f argument to R, so
file("stdin") can be used from BATCH scripts.</para>
          <para>On all OSes it reports proc.time() at the end of the
script unless q() is called with options to inhibit this.</para></item>
          <item><para>R CMD INSTALL now prepends the installation
directory (if specified) to the library search path.</para></item>
          <item><para>Package installation now re-encodes R files and
the NAMESPACE file if the DESCRIPTION file specifies an encoding, and
sets the encoding used for reading files in preparing for LazyData.
This will help if a package needs to be used in (say) both latin1 and
UTF-8 locales on different systems.</para></item>
          <item><para>R CMD check now reports on non-ASCII strings in
datasets. (These are a portability issue, which can be alleviated by
marking their encoding: see 'Writing R Extensions'.)</para></item>
          <item><para>Rdiff now converts CRLF endings in the target
file, and converts UTF-8 single quotes in either to ASCII
quotes.</para></item>
          <item><para>New recommended package 'codetools' by Luke
Tierney provides code-analysis tools. This can optionally be used by
'R CMD check' to detect problems, especially symbols which are not
visible.</para></item>
          <item><para>R CMD config now knows about LIBnn
.</para></item>
          <item><para>New recommended package 'rcompgen' by Deepayan
Sarkar provides support for command-line completion under the Unix
terminal interface (provided readline is enabled) and the Windows Rgui
and Rterm front ends.</para></item>
        </items>

        <items name="Bug Fixes">
          <item><para>gc() can now report quantities of 'Vcells' in
excess of 16Gb on 64-bit systems (rather than reporting
NA).</para></item>
          <item><para>Assigning class "factor" to an object now
requires it has integer (and not say double) codes.</para></item>
          <item><para>structure() ensures that objects with added
class "factor" have integer codes.</para></item>
          <item><para>The "formula" and "outer" attributes of datasets
'ChickWeight', 'CO2', 'DNase', 'Indometh', 'Loblolly', 'Orange' and
'Theoph' now have an empty environment and not the environment used to
dump the datasets in the package.</para></item>
          <item><para>Dataset 'Seatbelts' now correctly has class
c("mts", "ts").</para></item>
          <item><para>str() now labels classes on data frames more
coherently.</para></item>
          <item><para>Several 'special' primitives and .Internals
could return invisibly if the evaluation of an argument led to the
visibility flag being turned off. These included as.character(),
as.vector(), call(), dim(), dimnames(), lapply(), rep(), seq() and
seq_along(). Others (e.g. dput() and print.default()) could return
visibly when this was not intended.</para></item>
          <item><para>Several primitives such as dim() were not
checking the number of arguments supplied before method
dispatch.</para></item>
          <item><para>Tracing of primitive functions has been
corrected. It should now be the case that tracing either works or is
not allowed for all primitive functions. (Problems remain if you make
a primitive into a generic when it is being traced. To be fixed
later.)</para></item>
          <item><para>max.col() now omits infinite values in
determining the relative tolerance.</para></item>
          <item><para>R CMD Sweave and R CMD Stangle now respond to
--help and --version like other utilities.</para></item>
          <item><para>.libPaths() adds only existing directories (as
it was documented to, but could add non-directories).</para></item>
          <item><para>setIs() and setClassUnion() failed to find some
existing subclasses and produced spurious warnings, now
fixed.</para></item>
          <item><para>data.frame() ignored 'row.names' for 0-column
data frames, and no longer treats an explicit row.names=NULL
differently from the default value.</para></item>
          <item><para>identical() looked at the internal structure of
the 'row.names' attribute, and not the value visible at R
level.</para></item>
          <item><para>abline(reg) now also correctly works with
intercept-only lm models, and abline() warns more when it's called
illogically.</para></item>
          <item><para>warning() was truncating messages at
getOption("warning.length") - 1 (not as documented), with no
indication. It now appends '[... truncated]'.</para></item>
          <item><para>Stangle/Sweave were throwing spurious warnings
if options 'result' or 'strip.white' were unset.</para></item>
          <item><para>all.equal() was ignoring 'check.attributes' for
list and expression targets, and checking only attributes on raw
vectors. Logical vectors were being compared as if they were numeric,
(with a mean difference being quoted).</para></item>
          <item><para>Calculating the number of significant digits in
a number was itself subject to rounding errors for digits &gt;= 16.
The calculation has been changed to err on the side of slightly too
few significant digits (but still at least 15) rather than far too
many. (An example is print(1.001, digits=16).)</para></item>
          <item><para>unlink() on Unix-alikes failed for paths
containing spaces.</para></item>
          <item><para>substr() and friends treated NA 'start' or
'stop' incorrectly.</para></item>
          <item><para>merge(x, y, all.y = TRUE) would sometimes
incorrectly return logical columns for columns only in y when there
were no common rows.</para></item>
          <item><para>read.table(fn, col.names=) on an empty file
returned NULL columns, rather than logical(0) columns (which is what
results from reading a file with just a header).</para></item>
          <item><para>grid.[xy]axis(label=logical(0))
failed.</para></item>
          <item><para>expression() was unnecessarily duplicating
arguments.</para></item>
          <item><para>as.expression(&lt;list&gt;) returned a
single-element expression vector, which was not compatible with S: it
now copies lists element-by-element.</para></item>
          <item><para>supsmu(periodic = TRUE) could segfault.
(PR#9502)</para></item>
          <item><para>pmax/pmin called with only logical arguments did
not coerce to numeric, although they were documented to do so (as
max/min do).</para></item>
          <item><para>methods() did not know that cbind() and rbind()
are internally generic.</para></item>
          <item><para>dim(x) &lt;- NULL removed the names of x, but
this was always undocumented. It is not clear that it is desirable
but it is S-compatible and relied on, so is now
documented.</para></item>
          <item><para>which(x, arr.ind = TRUE) did not return a matrix
(as documented) if 'x' was an array of length 0.</para></item>
          <item><para>C-level duplicate() truncated CHARSXPs with
embedded nuls.</para></item>
          <item><para>Partial matching of attributes was not working
as documented in some cases if there were more than two partial
matches or if "names" was involved.</para></item>
          <item><para>data(package=character(0)) was not looking in
./data as documented.</para></item>
          <item><para>summary.mlm() failed if some response names were
"" (as can easily happen if cbind() is used).</para></item>
          <item><para>The postscript() and pdf() drivers shared an
encoding list but used slightly different formats. This caused
problems if both were used with the same non-default encoding in the
same session. (PR#9517)</para></item>
          <item><para>The data editor was not allowing Inf, NA and NaN
to be entered in numerical columns. It was intended to differentiate
between empty cells and NAs, but did not do so: it now does so for
strings.</para></item>
          <item><para>supsmu() could segfault if all cases had
non-finite values. (PR#9519)</para></item>
          <item><para>plnorm(x, lower.tail=FALSE) was returning the
wrong tail for x &lt;= 0. (PR#9520)</para></item>
          <item><para>which.min() would not report a minimum of +Inf,
and analogously for which.max(). (PR#9522)</para></item>
          <item><para>'R CMD check' could fail with an unhelpful error
when checking Rd files for errors if there was only one file and that
had a serious error. (PR#9459)</para></item>
          <item><para>try() has been reimplemented using tryCatch() to
solve two problems with the original implementation: (i) try() would
run non-NULL options("error") expressions for errors within a try, and
(ii) try() would catch user interrupts.</para></item>
          <item><para>str(obj) could fail when obj contained a
dendrogram.</para></item>
          <item><para>Using &lt;data frame&gt;[, &lt;last column&gt;]
&lt;- NULL failed (PR#9565)</para></item>
          <item><para>choose(n, k) could return non-integer values for
integer n and small k on some platforms.</para></item>
          <item><para>nclass.scott(x) and nclass.FD(x) no longer
return NaN when var(x) or IQR(x) (respectively) is zero.</para></item>
          <item><para>hist() now allows breaks = 1 (which the above
patch will return), but not breaks = Inf (which gave an obscure
error).</para></item>
          <item><para>strptime("%j") now also works for the first days
of Feb-Dec. (PR#9577)</para></item>
          <item><para>write.table() now recovers better if 'file' is
an unopened connection. (It used to open it for both the column names
and the data.)</para></item>
          <item><para>Fixed bug in mosaicplot(sort=) introduced by
undocumented change in R 2.4.1 (changeset r39655).</para></item>
          <item><para>contr.treatment(n=0) failed with a spurious
error message. (It remains an error.)</para></item>
          <item><para>as.numeric() was incorrectly documented: it is
identical to as.double.</para></item>
          <item><para>jitter(rep(-1, 3)) gave NaNs.
(PR#9580)</para></item>
          <item><para>max.col() was not random for a row of zeroes.
(PR#9542)</para></item>
          <item><para>ansari.test(conf.int=TRUE, exact=FALSE)
failed.</para></item>
          <item><para>trace() now works on S3 registered methods, by
modifying the version in the S3 methods table.</para></item>
          <item><para>rep(length=1, each=0) segfaulted.</para></item>
          <item><para>postscript() could overflow a buffer if used
with a long 'command' argument.</para></item>
          <item><para>The internal computations to copy complete
attribute lists did not copy the flag marking S4 objects, so the
copies no longer behaved like S4 objects.</para></item>
          <item><para>The C code of nlminb() was altering a variable
without duplicating it. (This did not affect nlminb() but would have
if the code was called from a different wrapper.)</para></item>
          <item><para>smooth(kind = "3RS3R") (the current default)
used .C(DUP = FALSE) but altered its input argument. (This was masked
by duplication in as.double.)</para></item>
          <item><para>The signature for the predefined S4 method for
as.character() was missing '...' .</para></item>
          <item><para>readBin(&lt;raw vector&gt;) could read beyond
the end of the vector when size-changing was involved.</para></item>
          <item><para>The C entry point PrintValue (designed to
emulate auto-printing) would not find show() for use on S4 objects,
and did not have the same search path (for show(), print() and print()
methods) as auto-printing. Also, auto-printing and print() of S4
objects would fail to find 'show' if the methods name space was loaded
but the package was not attached (or otherwise not in the search
path).</para></item>
          <item><para>print() (and auto-printing) now recognize S4
objects even when 'methods' is not loaded, and print a short summary
rather than dump the internal structure.</para></item>
          <item><para>Sweave and Stangle had problems due to partial
matching of code chunk names when run with split=TRUE.</para></item>
          <item><para>install.packages() on a source package now
ensures that R CMD INSTALL sees the same library search path as
install.packages() did when computing dependencies.</para></item>
          <item><para>density() now ensures its 'y' values are
non-negative. (PR#8876)</para></item>
          <item><para>is.finite() and is.infinite() (and many other
primitives) are not internally generic and so do not support S4
methods, which can no longer be set. (PR#7951)</para></item>
          <item><para>nls(algorithm = "port") now accepts a list
'start' argument, as for the other methods (and as
documented).</para></item>
          <item><para>Standard errors from the "ar" method of
predict() could be wrong for the last p predictions for models near
non-stationarity. (PR#9614)</para></item>
        </items>
      </change>

      <change from="2.4.1" to="2.4.1patched">
        <items name="New Features">
          <item><para>The Simplified Chinese translations have been
completed.</para></item>
        </items>

        <items name="Bug Fixes">
          <item><para>co.intervals() sometimes failed to cover the
largest value.</para></item>
          <item><para>tempfile() is now random across sessions as well
as within a session. (On some systems it would give the same hex
suffix at the start of each session.)</para></item>
          <item><para>Added infinite recursion test to internal
function isMissing. (PR#9426)</para></item>
          <item><para>The "Date" and "POSIXt" methods for cut() were
not choosing the first day of the year for breaks = "years". (In part,
PR#9433.)</para></item>
          <item><para>R is now able to deparse/print invalid multibyte
strings in MBCS locales (such as UTF-8) using hex escapes. This means
that e.g. demo(Hershey) works in all such locales.</para></item>
          <item><para>optimize() could give incorrect answers in some
rare problems with exact symmetry about the midpoint of the interval
supplied. (PR#9438)</para></item>
          <item><para>The residuals from an lm() fit with no
coefficients but an offset were incorrect.</para></item>
          <item><para>oneway.test() was expecting a literal formula
and did not accept a variable containing a formula.</para></item>
          <item><para>The legacy Quartz device (used by console R)
displayed its window outside the screen estate in some dual-head
setups. Now it will be always displayed in the center of the main
screen.</para></item>
          <item><para>read.ftable() was not functional on non-seekable
connections such as URLs.</para></item>
          <item><para>Some large memory allocations could cause
segfaults or crashes (e.g. followup to PR#9557).</para></item>
          <item><para>Sweave() would drop characters from the end of
chunk names ending in "R". (PR#9567)</para></item>
          <item><para>library(), i.e. its internal checkConflicts(),
now (again) prints "The following object(s) are masked .." only once
per masked package.</para></item>
          <item><para>methods:::cbind(x) {one argument} now works,
calling cbind2(x) when 'x' is an S4 object.</para></item>
        </items>
      </change>

      <change from="2.4.0" to="2.4.1">
        <items name="INSTALLATION">
          <item><para>The extraction of info from Subversion for an
SVN checkout now also works for svn &gt;= 1.4.0. However, on Windows
the 'Last Changed Date' will be in the local timezone, and not in GMT
as previously.</para></item>
          <item><para>configure uses code borrowed from autoconf 2.60
to try harder to ensure that a C99-compliant compiler is used. (It
does so by appending to CC.)  This avoids problems with systems such
as FC5 which override CFLAGS and thereby lose flags such as
-std=gnu99.</para></item>
        </items>

        <items name="New Features">
          <item><para>rainbow(), heat.colors(), terrain.colors(),
topo.colors() and cm.colors() all gain an 'alpha' argument to be
passed to hsv().</para></item>
          <item><para>dput() will give an incorrect representation of
the row names of a data frame with integer row names. This is now
corrected when the object is recreated.</para></item>
        </items>

        <items name="C-LEVEL FACILITIES">
          <item><para>Using STRICT_R_HEADERS applies to more reported
clashes with Windows headers, including Calloc and Realloc. These and
Free need to be prefixed by R_ when STRICT_R_HEADERS is
defined.</para></item>
        </items>

        <items name="Deprecated and Defunct">
          <item><para>The previously undocumented behaviour of
structure() in adding a class when specifying "tsp" or "levels"
attributes is now deprecated (with a warning).</para></item>
        </items>

        <items name="Bug Fixes">
          <item><para>Fixed warning() to use .dfltWarn intead of
.dfltStop for default handling (PR#9274).</para></item>
          <item><para>R would slow down when the product of the length
of a vector and the length of a character vector used to subset it
exceeded 2^31. (PR#9280)</para></item>
          <item><para>merge() now allows zero-row data
frames.</para></item>
          <item><para>add1.lm() had been broken by other changes for
weighted fits.</para></item>
          <item><para>axis.POSIXct() would sometimes give the wrong
labels.</para></item>
          <item><para>Help for a method call would fail.
(PR#9291)</para></item>
          <item><para>gzfile() returned an object of class "file" not
"gzfile". (PR#9271)</para></item>
          <item><para>load()ing from a connection had a logic bug in
when it closed the connection. (PR#9271)</para></item>
          <item><para>The lowess() algorithm is unstable if the MAD of
the residuals becomes (effectively) zero: R now terminates the
iterations at that point. (This may result in quite different
answers.)</para></item>
          <item><para>The 'delta' argument was incorrectly documented.
(PR#9264)</para></item>
          <item><para>abbreviate() would only work for strings of up
to 8191 bytes, but this was not checked. Now longer strings are
errors.</para></item>
          <item><para>Drawing X11 rotated text was buggy for VERY
small (negative) angle of rotation. (PR#9301)</para></item>
          <item><para>The X11 data editor would crash in an MBCS
locale if R was compiled with FC's CFLAGS that add buffer overflow and
stack-smashing detection.</para></item>
          <item><para>rect() was not accepting border=NA in some cases
involving cross-hatching.</para></item>
          <item><para>Fixes to S4 group generics to ensure that the
correct number of active arguments are in the signature of the group
and all members. Also a fix to keep the 'groupMembers' slot up to
date.</para></item>
          <item><para>S4 group generic "Logic" (with '&amp;', '|', but
not '!') has been created, following the green book (apart from
'!').</para></item>
          <item><para>removeClass() now takes care to remove any
subclass references to the deleted class.</para></item>
          <item><para>mle() (in stats4) might not have worked as
intended when the order of parameters in 'start' differed from that in
the log-likelihood. (PR#9313)</para></item>
          <item><para>dotchart() now properly restores par() settings
after itself.</para></item>
          <item><para>system() on Mac OS X was blocking arbitrary
signals during the call although only SIGPROF was meant to be
blocked.</para></item>
          <item><para>methods cached via callNextMethod() and
(sometimes) as() were being cached as directly specified although in
fact they were inherited. Caused problems in later search for
inherited methods.</para></item>
          <item><para>str() works properly for method definitions and
other S4-classed function objects.</para></item>
          <item><para>JAVA_LIBS are now set correctly on MacOS
X.</para></item>
          <item><para>Fix null-termination issue suspected of causing
crash with Fedora Extra RPMS (PR#9339, Justin Harrington, analysis and
fix from Bill Dunlap).</para></item>
          <item><para>Name spaces restored via a saved session
silently failed to cache their methods because the methods package was
not yet attached. Fixed by attaching methods before restoring
data.</para></item>
          <item><para>rbind()ing a list to a data frame generated
invalid row names, which were an error in 2.4.0.
(PR#9346)</para></item>
          <item><para>boxplot.stats(x) now returns the correct minimum
instead of an error for x &lt;- c(1,Inf,Inf,Inf), and hence boxplot(x)
"works".</para></item>
          <item><para>promptClass() now uses
\linkS4class{&lt;ClassName&gt;} instead of of
\link{&lt;ClassName&gt;-class}.</para></item>
          <item><para>gc() no longer reports nonsense values for the
number of used Vcells if the true value exceeds 2^31 (and hence over
16Gb of heap is in use): it now reports NA. (PR#9345)</para></item>
          <item><para>rapply() now detects more user errors in
supplying arguments. (PR#9349)</para></item>
          <item><para>boxplot() was ignoring argument 'boxfill'.
(PR#9352)</para></item>
          <item><para>plot.lm(which = 6, id.n = 0) did not work.
(PR#9333)</para></item>
          <item><para>.deparseOpts("delayPromises") was not matching
the C code, returning 64 rather than 32.</para></item>
          <item><para>bxp() could use partial matching on 'pars' when
finding defaults for some of its parameters, e.g. a setting of
'cex.axis' in 'pars' or inline was used to set a default for
'outcex'.</para></item>
          <item><para>acf() now allows lag.max = 0 except when
type="partial", and forces the lag 0 autocorrelation to 1.
(PR#9360)</para></item>
          <item><para>hist(*, include.lowest=., right=., plot=FALSE)
does not warn anymore, (PR#9356) and more.</para></item>
          <item><para>Some bugs in caching superclass/subclass
relations and in removing those relations on detach and on
removeClass() have been fixed.</para></item>
          <item><para>readBin() could return one too many strings if
'n' was an over-estimate. (PR#9361)</para></item>
          <item><para>A request for an opaque colour in the pdf()
device after a translucent one did not set the transparency back to
opaque in 2.4.0. Semi-transparent background colours were not being
plotted on the pdf() device.</para></item>
          <item><para>plot.lm(which=5) in the case of constant
leverage re-ordered the factor levels but not the residuals, so the
labelling by factor level was often incorrect.</para></item>
          <item><para>packBits() was not accepting a logical argument.
(PR#9374)</para></item>
          <item><para>make install was omitting doc/FAQ and
doc/RESOURCES.</para></item>
          <item><para>A two-sample t.test(x, y, var.equal=TRUE) did
not allow one of the groups to be of size one.</para></item>
          <item><para>The "ts" method for print() failed on some
corrupted objects of class "ts", e.g. those without a "tsp"
attribute.</para></item>
          <item><para>structure() reordered the "class" value given if
there was a "tsp" value specified.</para></item>
          <item><para>pairs() now does pass appropriate parts of '...'
to the 'diag.panel' argument. (PR#9384)</para></item>
          <item><para>plot.lm() was using an incorrect estimate of
dispersion for some GLMs (including family=binomial and
family=poisson). (PR#9316)</para></item>
          <item><para>Subsetting operators were setting R_Visible too
early, so assignments in arguments could make the result invisible.
(PR#9263)</para></item>
          <item><para>The tk-GUI was displaying a warning due to an
extra comma in the list of manuals (PR#9396)</para></item>
          <item><para>packageDescription() now gives an explicit error
on a corrupt DESCRIPTION file.</para></item>
          <item><para>There was a scoping issue with tcltk callbacks
given as unevaluated expressions. This has only been partially fixed,
a complete fix probably requires redesign.</para></item>
          <item><para>trace() had its return value documented
incorrectly and was sometimes visible when it should not have
been.</para></item>
          <item><para>pchisq() would sometimes use the wrong tail when
calculating non-central probabilities with lower.tail = FALSE.
(PR#9406)</para></item>
          <item><para>rm() could remove the wrong objects when passed
an expression. (PR#9399)  Now only names are allowed in the '...'
argument, and the incorrect documentation of what happened with
character objects is corrected.</para></item>
          <item><para>url() was not supporting 'encoding' except on
file:// URLs.</para></item>
        </items>
      </change>

      <change from="2.3.1patched" to="2.4.0">
        <items name="User-visible Changes">
          <item><para>The startup message now prints first the version
string and then the copyright notice (to be more similar to R
--version).</para></item>
          <item><para>save() by default evaluates promise objects.
The old behaviour (to save the promise and its evaluation environment)
can be obtained by setting the new argument 'eval.promises' to FALSE.
(Note that this does not apply to promises embedded in objects, only
to top-level objects.)</para></item>
          <item><para>The functions read.csv(), read.csv2(),
read.delim(), read.delim2() now default their 'comment.char' argument
to "". (These functions are designed to read files produced by other
software, which might use the # character inside fields, but are
unlikely to use it for comments.)</para></item>
          <item><para>The bindings in the base environment/name space
(currently the same thing) are now locked. This means that the values
of base functions cannot be changed except via assignInNamespace() and
similar tricks.</para></item>
          <item><para>[[ on a factor now returns a one-element factor
(and not an integer), as.list() on a factor returns a list of
one-element factors (and not of character vectors), and unlist() on a
list of factors returns a factor (and not an integer vector). These
changes may affect the results of sapply() and lapply() applied to
factors.</para></item>
          <item><para>mauchly.test() now returns the W statistic (for
comparability with SAS and SPSS), rather than the z (which was
accidentally not named in the output)</para></item>
          <item><para>sort(x, decreasing = FALSE, ...) is now a
generic function. This means that 'partial' is no longer the second
argument, and calls which used positional matching may be incorrect:
we try to detect them.</para></item>
          <item><para>See the section on 'Changes to S4 methods': all
packages depending on 'methods' need to be re-installed.</para></item>
        </items>

        <items name="New Features">
          <item><para>agrep(), grep(), strwrap(), strtrim(), substr()
and related functions now coerce arguments which should be character
via as.character() rather than internally (so method dispatch takes
place, e.g. for factors).</para>
          <para>chartr(), charfold(), tolower() and toupper()
now coerce their main argument if necessary to a character vector via
as.character().</para>
          <para>Functions which work element-by-element on character
vectors to give a character result now preserve attributes including
names, dims and dimnames (as suggested by the Blue Book p. 144). Such
functions include charfold(), chartr(), gsub(), strtrim(), sub(),
substr(), tolower() and toupper(). (Note that coercion of a
non-character argument may lose the attributes.)</para>
          <para>agrep(value = TRUE) preserves names for compatibility
with grep().</para>
          <para>nchar() has always preserved dims/dimnames
(undocumented before) and now also preserves names.</para></item>
          <item><para>.Deprecated and .Defunct take a new parameter,
msg, that allows for the specification of the message printed and
facilitates deprecation of calling sequences etc.</para></item>
          <item><para>.Fortran() will map 'name' to lower case, and
will work with 'name' containing underscores.</para></item>
          <item><para>The default is now .saveRDS(compress =
TRUE)</para></item>
          <item><para>The :: operator now also works for packages
without name spaces that are on the search path.</para></item>
          <item><para>[[ on a list does not duplicate the extracted
element unless necessary. (It did not duplicate in other cases, e.g.
a pairlist.)</para></item>
          <item><para>argsAnywhere() works like args() on non-exported
functions.</para></item>
          <item><para>as.data.frame() gains a '...'
argument.</para></item>
          <item><para>Added an as.data.frame() method for class
"ftable".</para></item>
          <item><para>as.list(&lt;an expression&gt;) is now handled by
internal code and no longer loses attributes such as
names.</para></item>
          <item><para>as.list(&lt;a list&gt;) no longer duplicates
(unnecessarily).</para></item>
          <item><para>as.POSIX[cl]t can now convert character strings
containing fractional seconds.</para></item>
          <item><para>attach() can now attach a copy of an
environment.</para></item>
          <item><para>available.packages() and installed.packages()
gain a 'fields' argument thanks to Seth Falcon.</para></item>
          <item><para>axis.POSIXct() uses a different algorithm for
ranges of 2 to 50 days that will mark days at midnight in the current
timezone (even if the graph crosses a DST change).</para></item>
          <item><para>body&lt;-() and formals&lt;-() default to envir
= environment(fun), that is they do not by default change the
environment. (Previously they changed it to
parent.frame().)</para></item>
          <item><para>New function combn(x, m, ..) for computing on
all combinations of size 'm' (for small 'm' !).</para></item>
          <item><para>The cumxxx() functions now handle
logical/integer arguments separately from numeric ones, and so return
an integer result where appropriate.</para></item>
          <item><para>data.frame() has a new argument
'stringsAsFactor'. This and the default for read.table(as.is=) are
set from the new global option 'stringsAsFactors' via the utility
function default.stringsAsFactors().</para></item>
          <item><para>dev.interactive() now has an optional argument
'orNone'.</para></item>
          <item><para>df() now has a noncentrality argument 'ncp',
based on a contribution by Peter Ruckdeschel.</para></item>
          <item><para>example() gains an argument 'ask' which defaults
to "TRUE when sensible", but the default can be overridden by setting
option 'example.ask'.</para></item>
          <item><para>expand.grid() now has an argument
'KEEP.OUT.ATTRS' which can suppress (the potentially expensive)
"out.attrs" attribute. It no longer returns an extraneous 'colnames'
attribute.</para></item>
          <item><para>The subset and subassign methods for factors now
handle factor matrices, and dim() can be set on a
factor.</para></item>
          <item><para>There is now a format() method for class
"ftable".</para></item>
          <item><para>head(x, n) and tail(x, n) now also work for
negative arguments,</para></item>
          <item><para>head.matrix() and tail.matrix() are no longer
hidden, to be used for building head() and tail() methods for other
classes.</para></item>
          <item><para>If help() finds multiple help files for a given
topic, a menu of titles is used to allow interactive
choice.</para></item>
          <item><para>help.search() now rebuilds the database if
'package' specifies a package not in the saved database.</para></item>
          <item><para>hist(*, plot = FALSE) now warns about unused
arguments.</para></item>
          <item><para>history() gains a 'pattern'
argument</para></item>
          <item><para>integer(0) now prints as that rather than
"numeric(0)" (it always deparsed as "integer(0)").</para></item>
          <item><para>interaction(..., drop=TRUE) now gives the same
result as interaction(...)[,drop=TRUE] (it used to sometimes give a
different order for the levels).</para></item>
          <item><para>lag.plot() produces a conventional plot (not
setting mfrow) if only one plot is to be produced.</para></item>
          <item><para>lapply() does much less copying. Vector X are
handled without duplication, and other types are coerced via
as.list(). (As a result, package 'boot' runs its examples 4%
faster.)</para></item>
          <item><para>lapply(&lt;a pairlist&gt;) now coerces to a list
(rather than traverse</para></item>
          <item><para>legend() has new parameters 'box.lwd' and
'box.lty'.</para></item>
          <item><para>lines() gains a simple method for isoreg()
results.</para></item>
          <item><para>load() no longer coerces pairlists to lists
(which was undocumented, but has been happening since
1998).</para></item>
          <item><para>make.link() now returns an object of class
"link-glm". The GLM families accept an object of this class for their
'link' argument, which allows user-specified link functions. Also,
quasi() allows user-specified variance functions.</para></item>
          <item><para>mapply() uses names more analogously to
lapply(), e.g..</para></item>
          <item><para>matplot() now accepts a 'bg' argument similarly
to plot.default() etc.</para></item>
          <item><para>median() is now generic, and its default method
uses mean() rather than sum() and so is more widely applicable (e.g.
to dates).</para></item>
          <item><para>Dummy functions memory.size() and memory.limit()
are available on Unix-alikes, for people who have not noticed that
documentation is Windows-specific.</para></item>
          <item><para>merge() works more efficiently when there are
relatively few matches between the data frames (for example, for 1-1
matching). The order of the result is changed for 'sort =
FALSE'.</para></item>
          <item><para>merge() now inserts row names as a character
column and not a factor: this makes the default sort order more
comprehensible.</para></item>
          <item><para>Raw, complex and character vectors are now
allowed in model frames (there was a previously undocumented
restriction to logical, integer and numeric types.). Character
vectors in a formula passed to model.matrix() are converted to factors
and coded accordingly.</para></item>
          <item><para>modifyList() utility, typically for housekeeping
nested lists.</para></item>
          <item><para>x &lt;- 1:20; y &lt;- rnorm(x); nls(y ~
A*exp(-x^2/sig)) no longer returns an unhelpful error message. In
this and similar cases, it now tries a wild guess for starting
values.</para></item>
          <item><para>Ops.difftime() now handles unary minus and
plus.</para></item>
          <item><para>Ops.Date() and Ops.POSIXt() now allow character
arguments (which are coerced to the appropriate class before
comparison, for Ops.POSIXt() using the current time
zone).</para></item>
          <item><para>There is a new option(max.contour.segments =
25000) which can be raised to allow extremely complex contour lines in
contour() and contourLines(). (PR#9205)</para></item>
          <item><para>options(max.print = N) where N defaults to 99999
now cuts printing of large objects after about N entries.
print(x, ..., max = N) does the same for the default method and those
building on print.default().</para>
          <para>options("menu.graphics") controls if graphical menus
should be used when available.</para>
          <para>options("par.ask.default") allows the default for
par("ask") to be set for a newly-opened device. (Defaults to FALSE,
the previous behaviour.)</para>
          <para>The way option("papersize") is set has been changed.
On platforms which support the LC_PAPER locale category, the setting
is taken first from the R_PAPERSIZE environment variable at run time,
then from the LC_PAPER category ("letter" for _US and _CA locales and
"a4" otherwise). On other platforms (including Windows and older
Unixen), the choice is unchanged.</para></item>
          <item><para>package.skeleton() gains arguments 'namespace'
and 'code_files'.</para></item>
          <item><para>par(ask=TRUE) now only applies to interactive R
sessions.</para></item>
          <item><para>parse() now returns up to 'n' expressions,
rather than fill the expressions vector with NULL. (This is now
compatible with S.)</para></item>
          <item><para>The 'version' argument for pdf() is now
increased automatically (with a warning) if features which need a
higher level are used.</para></item>
          <item><para>pie() now allows expressions for 'labels', and
empty slices.</para></item>
          <item><para>There is a new '%.%' operator for mathematical
annotations (plotmath) which draws a centred multiplication dot (a
\cdot in LaTeX), thanks to Uwe Ligges.</para></item>
          <item><para>predict.lm() gains a 'pred.var' argument.
(Wishlist PR#8877.)</para></item>
          <item><para>print.summary.{aov,glm,lm,nls} and
print.{aov,glm} make use of naprint() to report when na.action altered
the model frame.</para></item>
          <item><para>print.table(T, zero.print=ch) now also replaces
0 by ch when T is non-integer with integer entries.</para></item>
          <item><para>Recursive rapply() which is similar to lapply
but used recursively and can restrict the classes of elements to which
it is applied.</para></item>
          <item><para>r2dtable() has been moved to package
'stats'.</para></item>
          <item><para>New function read.DIF() to read Data Interchange
Format files, and (on Windows) this format from the
clipboard.</para></item>
          <item><para>New experimental function readNEWS() to read R's
own "NEWS" file and similarly formatted ones.</para></item>
          <item><para>readLines() has a new argument 'warn' to
suppress warnings: the default behaviour is still to
warn.</para></item>
          <item><para>reg.finalizer() has a new argument 'onexit' to
parallel the C-level equivalent R_RegisterFinalizerEx.</para></item>
          <item><para>rep() is now a primitive function and under some
conditions very much faster: rep.int() is still a little faster (but
does less). (Because it is primitive there are minor changes to the
call semantics: see the help page.)</para></item>
          <item><para>The 'row.names' of a data frame may be stored
internally as an integer or character vector. This can result in
considerably more compact storage (and more logical row names from
rbind) when the row.names are 1:nrow(x). However, such data frames
are not compatible with earlier versions of R: this can be ensured by
supplying a character vector as 'row.names'.</para>
          <para>row.names() will always return a character vector,
but direct access to the attribute may not.</para>
          <para>The internal storage of row.names = 1:n just records
'n', for efficiency with very long vectors.</para>
          <para>The "row.names" attribute must be a character or
integer vector, and this is now enforced by the C code.</para></item>
          <item><para>The "data.frame" and "matrix" methods for
rowsum() gain an 'na.rm' argument.</para></item>
          <item><para>Experimental support for memory-use profiling
via Rprof(), summaryRprof(), Rprofmem() and tracemem().</para></item>
          <item><para>save.image() [also called by sys.save.image()
and hence from q()] now defaults to saving compressed binary images.
To revert to the previous behaviour set option "save.image.defaults":
see ?save.image.</para></item>
          <item><para>There is a new primitive seq.int() which is
slightly more restricted than seq() but often very much faster, and
new primitives seq_along() and seq_len() which are faster
still.</para></item>
          <item><para>serialize(connection = NULL) now returns a raw
vector (and not a character string). unserialize() accepts both old
and new formats (and has since 2.3.0).</para></item>
          <item><para>setwd() now returns the previously current
directory (invisibly).</para></item>
          <item><para>The function sort() is now sort.int(), with a
new generic function sort() which behaves in the same way (except for
the order of its argument list) for objects without a class, and
relies on the '[' method for objects with a class (unless a specific
method has been written, as it has for class "POSIXlt").</para></item>
          <item><para>sort.list() now implements complex vectors
(PR#9039), and how complex numbers are sorted is now
documented.</para></item>
          <item><para>spline() and splinefun() now follow approx[fun]
to have an argument 'ties = mean' which makes them applicable also
when 'x' has duplicated values.</para></item>
          <item><para>str(x) does not print the S3 "class" attribute
when it is the same as 'mode' (which is printed anyway, possibly
abbreviated) and it puts it beside mode for atomic objects such as S3
class "table".</para></item>
          <item><para>str(&lt;data.frame&gt;) now outputs 'data.frame'
instead of `data.frame'; this may affect some strict (Package)
tests.</para></item>
          <item><para>str() now takes also its defaults for 'vec.len'
and 'digits.d' from options('str') which can be set by the new
strOptions().</para></item>
          <item><para>symnum() has a new argument 'numeric.x'
particularly useful for handling 0/1 data.</para></item>
          <item><para>Sys.getlocale() and Sys.setlocale() support
LC_MESSAGES, LC_PAPER and LC_MEASUREMENT if the platform
does.</para></item>
          <item><para>Sweave has a new options 'pdf.encoding' and
'pdf.version' for its Rweave driver.</para></item>
          <item><para>The character vector used by an output
textConnection() has a locked binding whilst the connection is
open.</para></item>
          <item><para>There is a new function textConnectionValue() to
retrieve the value of an output textConnection().</para></item>
          <item><para>traceback() gains a 'max.lines' argument.
.Traceback is no longer stored in the workspace.</para></item>
          <item><para>warning(immediate. = TRUE) now applies to
getOption("warn") &lt; 0 and not just == 0.</para></item>
          <item><para>warnings() is now an accessor function for
'last.warning' (which is no longer stored in the workspace) with a
print() method.</para></item>
          <item><para>The internal internet download functions have
some new features from libxml 2.6.26.</para></item>
          <item><para>There is an option "HTTPUserAgent" to set the
User Agent in R download requests etc.</para></item>
          <item><para>PCRE has been updated to version
6.7.</para></item>
          <item><para>The C function substituteList now has tail
recursion expanded out, so C stack overflow is less likely.
(PR#8141)</para></item>
          <item><para>The (somewhat soft) 1023/4 byte limit on command
lines is now documented in 'An Introduction to R'.</para></item>
          <item><para>The maximum number of open connections has been
increased from 50 to 128.</para></item>
          <item><para>There is a new manual 'R Internals' on R
internal stuctures plus the former appendices of 'Writing R
Extensions'.</para></item>
          <item><para>The autoloads introduced at the package
re-organization have been almost completely removed: the one that
remains is for ts().</para></item>
          <item><para>The setting of the various Java configuration
variables has been improved to refer to JAVA_HOME, and they are now
documented in the R-admin manual.</para></item>
          <item><para>It is (again) possible to calculate prediction
intervals from "lm" objects for the original data frame, now with a
warning that the intervals refer to future observations. Weighted
intervals have also been implemented, with user-specifiable weights.
Warnings are given in cases where the default behaviour might differ
from user expectations.</para></item>
        </items>

        <items name="CHANGES TO S4 METHODS">
          <item><para>The default prototype object for S4 classes will
have its own internal type in 2.4.0, as opposed to being an empty list
(the cause of several errors in the code up to 2.3.1). Note that old
binary objects, including class definitions, will be inconsistent with
the type, and should be recreated.</para></item>
          <item><para>S4 method dispatch has been completely revised
to use cached generic functions and to search for the best match among
inherited methods.</para></item>
          <item><para>Objects created from an S4 class are now marked
by an internal flag, tested by isS4() in R and by macro IS_S4_OBJECT()
in C. This is an efficient and reliable test, and should replace all
earlier heuristic tests.</para></item>
          <item><para>Some changes have been made to automatic
printing of S4 objects, to make this correspond to a call to show(),
as per 'Programming with Data'.</para></item>
          <item><para>S4 generic and class definitions are now cached
when the related package is loaded. This should improve efficiency
and also avoid anomalous situations in which a class or generic cannot
be found.</para></item>
          <item><para>trace() now creates a new S4 class for the
traced object if required. This allows tracing of user-defined
subclasses of "function".</para></item>
        </items>

        <items name="Deprecated and Defunct">
          <item><para>The re-named tcltk functions tkcmd, tkfile.tail,
tkfile.dir, tkopen, tkclose, tkputs, tkread are now
defunct.</para></item>
          <item><para>Argument 'col' of bxp() has been removed: use
'boxfill'.</para></item>
          <item><para>Use of NULL as an environment is now an
error.</para></item>
          <item><para>postscriptFont() is defunct: use
Type1Font().</para></item>
          <item><para>La.chol() and La.chol2inv() are defunct (they
were the same as the default options of chol() and
chol2inv).</para></item>
          <item><para>La.svd(method = "dgesvd") is
defunct.</para></item>
          <item><para>Files install.R and R_PROFILE.R in packages are
now ignored (with a warning).</para></item>
          <item><para>The following deprecated command-line options to
INSTALL have been removed (use the fields in the DESCRIPTION file
instead): -s --save --no-save --lazy --no-lazy --lazy-data
--no-lazy-data</para></item>
          <item><para>Graphical parameter 'tmag' is
obsolete.</para></item>
          <item><para>mauchley.test() (package 'stats') is now
defunct.</para></item>
          <item><para>symbol.C() and symbol.For() are deprecated.
They are required in S for use with is.loaded(), but are not so
required in R.</para></item>
          <item><para>load()ing an object saved in one of the formats
used prior to R 1.4.0 is deprecated. Such objects should be re-saved
in the current format.</para></item>
          <item><para>save(version = 1) is now
deprecated.</para></item>
        </items>

        <items name="C-LEVEL FACILITIES">
          <item><para>The convenience function ScalarLogical now
coerces all non-zero non-NA values to TRUE.</para></item>
          <item><para>The vector accessor functions such as INTEGER,
REAL and SET_VECTOR_ELT now check that they are called on the correct
SEXPTYPE (or at least on a compatible one). See `Writing R
Extensions' for the details and for a stricter test
regime.</para></item>
          <item><para>It is no longer possible to pass list variables
to .C(DUP = FALSE): it would have given rise to obscure garbage
collection errors.</para></item>
          <item><para>allocString is now a macro, so packages using it
will need to be reinstalled.</para></item>
          <item><para>R_ParseVector was returning with object(s)
protected in the parser if the status was PARSE_INCOMPLETE or
PARSE_ERROR.</para></item>
          <item><para>There is a new function Rf_endEmbeddedR to
properly terminate a session started by Rf_initEmbeddedR, and both are
now available on Windows as well as on Unix-alikes. These and related
functions are declared in a new header &lt;Rembedded.h&gt;. If
R_TempDir is set when embedded R is initialized it is assumed to point
to a valid session temporary directory: see `Writing R
Extensions'.</para></item>
          <item><para>There is a new interface allowing one package to
make C routines available to C code in other packages. The interface
consists of the routines R_RegisterCCallable and R_GetCCallable.
These functions are declared in &lt;R_ext/Rdynload.h&gt;. This
interface is experimental and subject to change. In addition, a
package can arrange to make use of header files in another (already
installed) package via the 'LinkingTo' field in the DESCRIPTION file:
see 'Writing R Extensions'.</para></item>
        </items>

        <items name="Utilities">
          <item><para>R CMD SHLIB now handles (as linker commands)
-L*, -l* and *.a.</para></item>
          <item><para>R CMD check now:</para>
          <unorderedlist>
            <item><para>warns if there are non-ASCII characters in the R
code (as these will likely be syntax errors in some
locale).</para></item>
            <item><para>tests Rd cross-references by default, and tests
for (syntactically) valid CITATION metadata.</para></item>
            <item><para>tests that the package can be loaded, and that
the package and name space (if there is one) can each be loaded in
startup code (before the standard packages are loaded).</para></item>
            <item><para>tests for empty 'exec' or 'inst'
directories.</para></item>
            <item><para>checks if $(FLIBS) is used when $(BLAS_LIBS)
is.</para></item>
            <item><para>checks that all packages (except non-S4-using
standard packages) used in ::, :::, library() and require() calls are
declared in the DESCRIPTION file, and 'methods' is declared if S4
classes or methods are set.</para></item>
            <item><para>throws an error if the standard packages 'methods'
and 'stats4' are imported from in the NAMESPACE file and not declared
in the DESCRIPTION file.</para></item>
          </unorderedlist></item>
          <item><para>The test script produced by massage-Examples.pl
no longer creates objects in the base environment.</para></item>
          <item><para>New utilties R CMD Stangle and R CMD Sweave for
extracting S/R code from and processing Sweave documentation,
respectively.</para></item>
          <item><para>The DESCRIPTION file of packages may contain an
'Enhances:' field.</para></item>
          <item><para>An R CMD javareconf script has been added to
allow Java configuration to be updated even after R has been
installed.</para></item>
        </items>

        <items name="Installation">
          <item><para>The C function realpath (used by
normalizePath()) is hidden on some systems and we try harder to find
it.</para></item>
          <item><para>There is a new option --enable-BLAS-shlib, which
compiles the BLAS into a dynamic library -lRblas and links against
that. For the pros and cons see the R-admin manual. The defaults are
now --without-blas (so you have explicitly to ask for an external
BLAS), and --enable-BLAS-shlib unless a usable external BLAS is found
or on AIX or on MacOS X 10.2 and earlier.</para></item>
          <item><para>MacOS X did not like having LSAME in both BLAS
and LAPACK libraries, so it is no longer part of the R-internal
LAPACK. We now require an external BLAS to provide LSAME: it seems
that nowadays all do.</para></item>
          <item><para>The configure test for 'whether mixed C/Fortran
code can be run' has been improved as on one system that test passed
but the Fortran run-time library was broken.</para></item>
          <item><para>A precious configure variable DEFS can be set to
pass defines (e.g. -DUSE_TYPE_CHECKING_STRICT) to C code when
compiling R.</para></item>
          <item><para>There is now a test for visible __libc_stack_end
on Linux systems (since it is not visible on some recent glibc's built
from the sources).</para></item>
          <item><para>MacOS X 10.4 and higher now use two-level
namespaces, single module in a shared library and allow undefined
symbols to be resolved at run-time. This implies that common symbols
are now allowed in package libraries. --enable-BLAS-shlib is supported
for internal BLAS, external BLAS framework and external static BLAS.
An external dynamic library BLAS is NOT supported. (But it can be
easily used by replacing internal BLAS library file later.) MacOS X
&lt; 10.4 does not support --enable-BLAS-shlib.</para></item>
          <item><para>Dynamic libraries and modules use a flat
namespace on MacOS X 10.4 and higher if either Xcode tools don't
support dynamic lookup (Xcode &lt; 2.3) or the FORCE_FLAT_NAMESPACE
environment variable is set. (The latter was introduced temporarily
for testing purposes and may go away anytime.)</para></item>
          <item><para>configure now defaults to 'run-time linking' on
AIX (and AIX &lt; 4.2 is no longer allowed), using -bexpall rather
than export/import files. If this works, it allows R to be built in
the same way as other Unix-alikes, including with R as a shared
library and with a shared BLAS.</para></item>
          <item><para>The "mac.binary" package type now defaults to
universal binary. If a repository supports architecture-specific Mac
binaries, they can be requested by using "mac.binary.xxx" in
contrib.url(), where xxx is the desired architecture.</para></item>
          <item><para>There is a new configure option
--enable-memory-profiling to enable memory profiling with tracemem,
Rprof, Rprofmem.</para></item>
        </items>

        <items name="Bug Fixes">
          <item><para>The name of a Fortran symbol reported to be
missing by .Fortran() is now the actual name. (What was reported to
be an 'entry point' was missing the common leading
underscore.)</para></item>
          <item><para>print() on a MBCS character string now works
properly a character at a time rather than a byte at time. (This does
not affect MBCSs like UTF-8 and the Windows DBCSes which have
non-ASCII lead bytes and always worked correctly.)</para></item>
          <item><para>glm() now recalculates the null deviance
whenever there is an offset (even if it is exactly zero to avoid a
discontinuity in that case, since the calculations with and without
offset are done by different algorithms).</para></item>
          <item><para>Amongst families, quasi() accepted an expression
for link and no other did. Now all accept an expression which
evaluates to a one-element character vector (although e.g. 'logit' is
taken as a name and not an expression).</para></item>
          <item><para>trace() now accepts arguments where= and
signature= for the old-style trace (no tracer or exit, edit==FALSE)
and just prints a message on entry. Also the undocumented feature of
where=function now works for generic functions as well.</para></item>
          <item><para>callNextMethod() failed for recursive use when
the methods had nonstandard argument lists. Now enforces the semantic
rule that the inheritance is fixed when the method containing the
callNextMethod() is installed.</para></item>
          <item><para>UseMethod() looked for the defining environment
of 'generic' as if it were the current function, although some
functions are generic for methods of a different
generic.</para></item>
          <item><para>Lookup for S3 methods is confined to functions:
previously a non-function 'fun.class' could have masked a function of
the same name.</para></item>
          <item><para>Line types (lty) specified as hex strings were
documented not to allow zero, but some devices accepted zero and
handled it in a device-dependent way. Now it is an error on all
devices. (PR#8914)</para></item>
          <item><para>Subassignment for a time series can no longer
extend the series: it used to attempt to but failed to adjust the tsp
attributes. Now window() must be used.</para></item>
          <item><para>Function AIC() in package 'stats4' was not
dispatching correctly on S4 classes via logLik() because of name space
issues.</para></item>
          <item><para>Subsetting LANGSXPs could break the
call-by-value illusion. (PR#7924)</para></item>
          <item><para>parse() with n &gt; 1 gave a syntax error if
fewer than n statements were available.</para></item>
          <item><para>parse() with n &gt; 1 gave strange results on
some syntax errors. (PR#8815)</para></item>
          <item><para>lag.plot() now respects graphical parameters for
the axes.</para></item>
          <item><para>Using a wrong link in family() now gives more
consistent error messages.</para></item>
          <item><para>sort.list(method="radix") works on factors
again.</para></item>
          <item><para>object.size() is more accurate for vector
objects (it takes into account the smaller header and also the fixed
sizes used in the node classes for small vector
objects).</para></item>
          <item><para>addmargins(T, ...) now returns a "table" when
'T' is a "table", as its help page has always suggested.</para></item>
          <item><para>remove() now explicitly precludes removing
variables from baseenv() and throws an error (this was previously
ignored).</para></item>
          <item><para>Saving the workspace at the end of a session now
works as has long been intended, that is it is saved only if something
has been added/deleted/changed during the current
session.</para></item>
          <item><para>The search for bindings in &lt;&lt;-, -&gt;&gt;
and assign(inherits=TRUE) was omitting the base package, although this
was not documented. Now the base package is included (but most
bindings there are locked).</para></item>
          <item><para>dweibull(0, shape) was NaN not Inf for shape
&lt; 1. Also, the help for dgamma and dweibull gave support as x &gt;
0, but returned non-zero values for x = 0. (PR#9080)</para></item>
          <item><para>Subsetting arrays no longer preserves attributes
(it was removed for matrices in 1998).</para></item>
          <item><para>The "factor" method of as.character() no longer
maps level "NA" to "&lt;NA&gt;" (a legacy of before there were NA
character strings).</para></item>
          <item><para>terms(keep.order=TRUE) was not returning a valid
"order" attribute.</para></item>
          <item><para>The DLL registration code was not freeing
.External symbols.</para></item>
          <item><para>The internet download routines expected URLs of
less than 4096 bytes, but did not check. Now this is checked, and
http:// URLs are allowed to be up to 40960 bytes.</para></item>
          <item><para>parse(n=-1) threw a stack-imbalance error, and
parse(n=3) did not cope correctly with EOF during input.</para></item>
          <item><para>Zero-column data frames had no names (rather
than character(0)).</para></item>
          <item><para>by() and acf() could get confused when they used
very long expressions as names.</para></item>
          <item><para>residuals(&lt;glm object&gt;, type="working")
was NA for cases with zero weight (whereas they are well-defined even
though the case was not used during the fitting) and the actual value
is now returned. This allows residuals to be computed from fits with
'y = FALSE'. The residuals in a fitted "glm" object are computed more
accurately: the previous formula was subject to
cancellation.</para></item>
          <item><para>loess() now checks the validity of its 'control'
argument.</para></item>
          <item><para>rownames(&lt;0-row matrix&gt;, do.NULL=FALSE)
was wrong. (PR#9136)</para></item>
          <item><para>apply() now works as documented when applied
over 2 or more margins with one of zero extent. (It used to drop
dimensions.)</para></item>
          <item><para>head() and tail() now also work row-wise for
"table" and "ftable" objects.</para></item>
          <item><para>NextMethod() could throw an error/crash if
called from a method that was called directly rather than from a
generic (so .Method was unset).</para></item>
          <item><para>order(x, na.last = NA) failed for a zero-length
x.</para></item>
          <item><para>grep(pat, x, value = TRUE, perl = L) preserved
names for L == TRUE &amp;&amp; !is.na(pat) but not otherwise. Now it
always does.</para></item>
          <item><para>[rc]bind() now find registered methods and not
just visible ones.</para></item>
          <item><para>Printing a factor no longer ignores attributes
such as names and dim/dimnames.</para></item>
          <item><para>Command-line arguments after --encoding were
ignored.</para></item>
          <item><para>The check for impossible confidence levels was
off by one in wilcox.test (PR#8557)</para></item>
          <item><para>[[ on an environment could create aliases.
(PR#8457)</para></item>
          <item><para>pt() with a very small (or zero) non-centrality
parameter could give an unduly stringent warning about 'full precision
was not achieved'. (PR#9171)</para></item>
          <item><para>writeChar() could segfault if 'nchars' was given
silly values.</para></item>
          <item><para>qt() and rt() did not work for vector 'ncp', and
qt() did not work for negative 'ncp'.</para></item>
          <item><para>ns() failed to work correctly when 'x' was of
length one.</para></item>
          <item><para>identical() ignored tags on pairlists (including
names of attributes) and required an identical ordering for attribute
values in their pairlists. Now names are compared on pairlists, and
attribute sets are treated as unordered.</para></item>
          <item><para>If they were unused arguments supplied to a
closure, only the first non-empty one was reported, despite the
message. Unmatched empty arguments (such as f(1,,) for a function of
one argument) were ignored. They are now an error.</para></item>
          <item><para>Calling a builtin with empty arguments used to
silently remove them (and this was undocumented). Now this is an
error unless builtin is c() or list() or there are only trailing empty
arguments, when it is a warning (for the time being: this will be made
an error in R 2.5.0).</para></item>
          <item><para>install.packages() ignored 'configure.args' if
the vector was unnamed.</para></item>
          <item><para>biplot() now works if there are missing values
in the data.</para></item>
          <item><para>biplot() now passes par() values to all four
axes (not just those on sides 1 and 2).</para></item>
          <item><para>[.acf now handles an empty first
index.</para></item>
          <item><para>Deparsing uses backticks more consistently to
quote non-syntactic names.</para></item>
          <item><para>Assigning to the symbol in a for() loop with a
list/expression/pairlist index could alter the index. Now the loop
variable is explicitly read-only. (PR#9216)</para></item>
          <item><para>Using old.packages() (and hence
update.packages()) on an empty (or non-existent) library failed with
an obscure message.</para></item>
          <item><para>plot.xy() could segfault if supplied with an
invalid 'col' argument. (PR#9221)</para></item>
          <item><para>menu() with graphics=TRUE attempted to use
Tcl/Tk on unix even if DISPLAY was not set (in which case Tk is not
available and so the attempt is bound to fail).</para></item>
          <item><para>The print() method for 'dist' objects prints a
matrix even for n = 2.</para></item>
          <item><para>The cumxxx functions were missing some PROTECTs
and so could segfault on long vectors (especially with names or where
coercion to numeric occurred).</para></item>
          <item><para>The X11() device no longer produces (apparently
spurious) 'BadWindow (invalid Window parameter)' warnings when run
from Rcmdr.</para></item>
          <item><para>legend() assumed that widths and heights of
strings were positive, which they need not be in user coordinates with
reversed axes. (In part, PR#9236)</para></item>
          <item><para>The plot() methods for "profile.nls" objects
could get confused if 'which' had been used in the profile() call.
(PR#9231)</para></item>
          <item><para>boxplot() did not passed named arguments (except
graphics parameters) to bxp() as documented. (PR#9183)</para></item>
          <item><para>Only genuinely empty statements act as 'return'
in the browser, not say those starting with a comment char.
(PR#9063)</para></item>
          <item><para>summary.mlm() incorrectly used accessor
functions to fake an "lm" object. (PR#9191)</para></item>
          <item><para>prettyNum() was not preserving attributes,
despite being explicitly documented to. (PR#8695)</para></item>
          <item><para>It was previously undocumented what happened if
a graphical parameter was passed in both '...' and 'pars' to boxplot()
and bxp(), and they behaved differently. Now those passed in '...'
have precedence in both cases.</para></item>
          <item><para>A failed subassignment could leave behind an
object '*tmp*'. The fix also sometimes gives better error
messages.</para></item>
          <item><para>Using SIGUSR1 on Unix now always terminates a
session, and no longer is caught by browser contexts and restarts
(such as try()).</para></item>
          <item><para>In the 'graphics' package, in-line 'font=5' was
being ignored.</para></item>
          <item><para>nls() looked for non-parameter arguments in a
function call in the wrong scope (from the body of nls).</para></item>
          <item><para>Printing of complex numbers could misbehave when
one of the parts was large (so scientific notation was used) and the
other was so much smaller that it had no significant digits and should
have been printed as zero (e.g. 1e80+3e44i).</para></item>
          <item><para>Using install.packages with type="mac.binary"
and target path starting with ~ failed with a cryptic message while
unpacking.</para></item>
          <item><para>getwd() now works correctly when the working
directory is unavailable (e.g. unreadable).</para></item>
          <item><para>The alternative hypothesis in wilcox.test() was
labelled by an unexplained quantity 'mu' which is now spelled
out.</para></item>
          <item><para>alternative hypothesis in ks.test() is clearer
both in the documentation and in the result. (PR#5360)</para></item>
        </items>
      </change>

      <change from="2.3.1" to="2.3.1patched">
        <items name="Bug Fixes">
          <item><para>help.search() incorrectly documented where the
data base was saved and what was in it.</para></item>
          <item><para>str(&lt;data.frame&gt;, strict.width=.) produced
an extraneous first line.</para></item>
          <item><para>Improve bessel[IJKY]() out-of-range checks; for
instance, besselI(0, nu) no longer warns.</para></item>
          <item><para>cbind() on some non-vector objects (e.g. names)
segfaulted.</para></item>
          <item><para>xy.coords(numeric(0)) gave a misleading error
message.</para></item>
          <item><para>INSTALL has been changed to avoid a few problems
with the base (not XPG4) Solaris sed.</para></item>
          <item><para>There were problems in src/main/printutils.c on
some platforms that did not have va_copy.</para></item>
          <item><para>[pq]unif allowed infinite ranges but handled
them inconsistently. (PR#8958)</para></item>
          <item><para>[pq]unif claimed to allow min == max but did not
do so.</para></item>
          <item><para>Subassignment within raw arrays of 3 or more
dimensions was not implemented.</para></item>
          <item><para>environment&lt;-() did not even check if
duplication was required.</para></item>
          <item><para>rt() was wrong for non-central t-distributions.
qt() was wrong for non-central distributions far enough in the left
tail. (PR#9050)</para></item>
          <item><para>R CMD Rdconv --type=Ssgm no longer drops a
\keyword{} if it is the only one. (PR#9051)</para></item>
          <item><para>poly(x, y, .., raw = TRUE) now does follow
'raw'.</para></item>
          <item><para>plot(0/ -1:1, type = "s") now works.
(PR#9046)</para></item>
          <item><para>write.table(row.names=FALSE) does now quote
column names. (PR#9044)</para></item>
          <item><para>rf() was wrong for non-central F (PR#9055). qf()
was wrong for non-central F with denominator df &gt;
1e8.</para></item>
          <item><para>The C function dummy_vfprint had a potential
memory leak. This showed up with some connections when used with
output of more than 100,000 bytes in a single call.</para></item>
          <item><para>vignette() did not work if more than one
vignette with the same name was installed  (PR#9069).</para></item>
          <item><para>mget() did not check that 'ifnotfound' was a
list, and worked incorrectly if it was a list of length &gt; 1. Now
'ifnotfound' is (if possible) coerced to a list.</para></item>
          <item><para>The internal check for conformance of time
series assumed that the 'tsp' attribute was integer, whereas it was
enforced to be numeric by the attribute-setting code.</para></item>
          <item><para>Sweave() did not treat \begin{document} in
comments correctly (PR#9073).</para></item>
          <item><para>diff(x) gave wrong result when x was "POSIXlt"
object.</para></item>
          <item><para>title() could crash R when passed a long
non-character vector. (PR#9115)</para></item>
          <item><para>Functions rgb(), hsv() and hcl() lost names
unless 'alpha' was specified. (In part, PR#9118)</para></item>
          <item><para>The residuals() method for "glm" failed unless
'y = TRUE' for the fit: it now works for "working" and "partial"
residuals and gives a useful error message for other types.
(PR#9124)</para></item>
          <item><para>R CMD Rdconv did not close the .Rd file, which
matters on Windows. (PR#9126)</para></item>
          <item><para>anova.mlm() could fail if applied to a single
model.</para></item>
          <item><para>stopifnot(&lt;FALSE-expr&gt;) now gives a better
message for a *long* expression.</para></item>
        </items>
      </change>

      <change from="2.3.0" to="2.3.1">
        <items name="New Features">
          <item><para>In lm() and glm(), offsets are allowed to be
length 1 (and if so are replicated to the number of
cases).</para></item>
          <item><para>The \uxxxx notation for Unicode characters in
input strings can now be used on any platform which supports MBCS,
even if the current locale is not MBCS (provided that the Unicode
character is valid in the current character set).</para></item>
          <item><para>The quasibinomial() family now allows the
"cauchit" link. (PR#8851)</para></item>
          <item><para>edit.data.frame() no longer (silently) coerces
character columns to factor.</para></item>
        </items>

        <items name="C-level Facilities">
          <item><para>The variables controlling stack checking are
made available via Rinterface.h to front-ends embedding R: see
'Writing R Extensions'</para></item>
          <item><para>R_SignalHandlers (defined in Rinterface.h) can
be set to 0 to suppress the R signal handlers in front-ends embedding
R.</para></item>
        </items>

        <items name="Installation Changes">
          <item><para>There have been a number of changes to help
installation on platforms that no one had beta-tested.</para>
          <unorderedlist>
            <item><para>Changes related to older header files,
e.g. on Redhat 8.0/9.</para></item>
            <item><para>Problems with 'make install' on older
(&lt;3) versions of bash on Solaris and elsewhere.</para></item>
            <item><para>AIX 5.2/gcc issues with needing -lm when
making modules X11 and vfonts.</para></item>
            <item><para>Some versions of Solaris and AIX had an
fcntl.h that redefined 'open' to be 'open64' and thereby broke
compilation of src/main/connections.c and elsewhere.</para></item>
          </unorderedlist></item>
          <item><para>'make uninstall' works better on a build using a
named subarchitecture.</para></item>
        </items>

        <items name="Bug Fixes">
          <item><para>min(), max(), sum() and prod() gave nonsensical
answers with an empty list or raw argument.</para></item>
          <item><para>sum() on a data frame did not allow multiple
arguments. (PR#8385)</para></item>
          <item><para>charmatch() and pmatch() did not specify they
applied only to character vectors. Now they do, and attempt to coerce
'x' and 'target' to character before attempting
matching.</para></item>
          <item><para>The Summary() methods for data.frame, Date,
POSIXct, POSIXlt and difftime all required an argument which can match
'x', although the generics did not.</para></item>
          <item><para>regexpr() now accepts 0-length 'text'
inputs.</para></item>
          <item><para>help.search() no longer errors out on a wrongly
installed package (with no "hsearch.rds" file).</para></item>
          <item><para>The LaTeX version of the package reference
manual was omitting some topics, and was not sorting the foo-package
topic first.</para></item>
          <item><para>Serializing (e.g. via save()) is better
protected against C stack overflow, which will now abort the
conversion but no longer crashes the R process on some
platforms.</para></item>
          <item><para>rbind()ing dataframes with a single row could
lead to a corrupt data frame (a problem with the fix to
PR#8506).</para></item>
          <item><para>plot(lm(y ~ 1)) now works also for 'which =
5'.</para></item>
          <item><para>dbeta(0, 1, a, 0) now correctly gives 'a'
(limit) instead of 0, and dbeta(0, a, b, ncp) now returns Inf instead
of NaN.</para></item>
          <item><para>demo(Hershey) was failing on the Cyrillic octal
codes in locales (e.g. UTF-8) in which these are
invalid.</para></item>
          <item><para>mean() on an integer (or logical) vector was
treating NAs as actual values (unless na.rm = TRUE).</para></item>
          <item><para>mean() on a complex vector was calculated
incorrectly in code to improve precision (PR#8842, John
Peters).</para></item>
          <item><para>Graphical parameters bg, cex, col, lty, and lwd
were being checked as being of length one even by functions such as
title() that ignored them. (Functions such as lines() and points()
allow them to be of length &gt; 1, so they might be passed through ...
to other high-level graphical functions which then used to reject
them.)</para></item>
          <item><para>str() now is fast again for large character
vectors.</para></item>
          <item><para>edit() would default the environment of a
function to .BaseEnv, instead of to .GlobalEnv.</para></item>
          <item><para>lm() and glm() coerce their 'weights' and
'offset' values to vector to avoid problems with specifying them as 1D
or n x 1 arrays.</para></item>
          <item><para>image() with one or both axes on log scales
would give a spurious warning; contour() would give an
error.</para></item>
          <item><para>legend() with log axes would place the title in
the wrong place.</para></item>
          <item><para>edit.data.frame() was not returning factors
edited with factor.mode="numeric" to factors.</para></item>
          <item><para>edit.matrix() tried to set rownames and colnames
from the original matrix even if the sizes had been altered, and
ignored changes made to the column names. 'edit.row.names' has a more
sensible default (if the rownames are non-NULL).</para></item>
          <item><para>bindingIsLocked() was returning invalid values
of a logical vector on some platforms.</para></item>
          <item><para>merge.data.frame() did not make the column names
unique (by appending elements of 'suffixes') when performing a
Cartesian product. (PR#8676)</para></item>
          <item><para>rbind.data.frame() matches up the names of
columns (which was undocumented), but failed to do so when checking if
it was dealing with a factor column. (PR#8868)</para></item>
          <item><para>If rbind() was used on data frames with
duplicated names it produced a corrupt data frame.</para></item>
          <item><para>dt(x, df, ncp= not.0) no longer gives erratic
values for |x| &lt; ~1e-12. (PR#8874)</para></item>
          <item><para>\code{\linkS4class{.}} now works.</para></item>
          <item><para>ccf() aligns time series by ts.intersect()
rather than ts.union() and so is less likely to need a non-default
na.action. (PR#8893)</para></item>
          <item><para>optim(method="CG") could return a value that did
not correspond to $par for very badly behaved functions on which the
second phase of the line search failed. (PR#8786)</para></item>
          <item><para>print.ts() could fail on a corrupt time series:
it now warns and does the best it can.</para></item>
        </items>
      </change>

      <change from="2.2.1" to="2.3.0">
        <items name="User-visible Changes">
          <item><para>In the grid package there are new 'arrow'
arguments to grid.line.to(), grid.lines(), and grid.segments()
(grid.arrows() has been deprecated).</para></item>
          <item><para>The new 'arrow' arguments have been added BEFORE
the 'name', 'gp' and 'vp' arguments so existing code that specifies
any of these arguments *by position* (not by name) will
fail.</para></item>
          <item><para>all.equal() is more stringent, see the PR#8191
bug fix below.</para></item>
          <item><para>The data frame argument to transform() is no
longer called 'x', but '_data'. Since this is an invalid name, it is
less likely to clash with names given to transformed variables.
(People were getting into trouble with transform(data,
x=y+z).)</para></item>
        </items>

        <items name="New Features">
          <item><para>arima.sim() has a new argument 'start.innov' for
compatibility with S-PLUS. (If not supplied, the output is unchanged
from previous versions in R.)</para></item>
          <item><para>arrows() has been changed to be more similar to
segments(): for example col=NA omits the arrow rather than as
previously (undocumented) using par("col").</para></item>
          <item><para>as.list() now accepts symbols (as given by
as.symbol() aka as.name()).</para></item>
          <item><para>atan2() now allows one complex and one numeric
argument.</para></item>
          <item><para>The 'masked' warnings given by attach() and
library() now only warn for functions masking functions or
non-functions masking non-functions.</para></item>
          <item><para>New function Axis(), a generic version of
axis(), with Date and POSIX[cl]t methods. This is used by most of the
standard plotting functions (boxplot, contour, coplot, filled.contour,
pairs, plot.default, rug, stripchart) which will thus label x or y
axes appropriately.</para></item>
          <item><para>pbeta() now uses TOMS708 in all cases and so is
more accurate in some (e.g. when lower.tail = FALSE and when one of
the shape parameters is very small).</para></item>
          <item><para>[qr]beta(), [qr]f() and [qr]t() now have a
non-centrality parameter.</para></item>
          <item><para>[rc]bind and some more cases of subassignment
are implemented for raw matrices. (PR8529 and 8530)</para></item>
          <item><para>The number of lines of deparsed calls printed by
browser() and traceback() can be limited by the option
"deparse.max.lines". (Wish of PR#8638.)</para></item>
          <item><para>New canCoerce() utility function in "methods"
package.</para></item>
          <item><para>[pq]chisq() are considerably more accurate for
moderate (up to 80) values of ncp, and lower.tail = FALSE is fully
supported in that region. (They are somewhat slower than
before.)</para></item>
          <item><para>chol(pivot = TRUE) now gives a warning if used
on a (numerically) non-positive-definite matrix.</para></item>
          <item><para>chooseCRANmirror() consults the CRAN master (if
accessible) to find an up-to-date list of mirrors.</para></item>
          <item><para>cov.wt() is more efficient for 'cor = TRUE' and
has a new 'method' argument which allows 'Maximum
Likelihood'.</para></item>
          <item><para>do.call() gains an 'envir'
argument.</para></item>
          <item><para>eigen() applied to an asymmetric real matrix now
uses a tolerance to decide if the result is complex (rather than
expecting the imaginary parts of the eigenvalues to be exactly
zero).</para></item>
          <item><para>New function embedFonts() for embedding fonts in
PDF or PostScript graphics files.</para></item>
          <item><para>fisher.test() now uses p-values computed via
hypergeometric distributions for all 2 by 2 tables. This might be
slightly slower for a few cases, but works much better for tables with
some large counts. There is a new option to simulate the p-value for
larger than 2 x 2 tables.</para></item>
          <item><para>for() now supports raw vectors as the set of
indices.</para></item>
          <item><para>getNativeSymbolInfo() is vectorized for the
'name' argument. It returns a named list of NativeSymbolInfo objects,
but is backward compatible by default when called with a character
vector of length 1, returning the NativeSymbolInfo
object.</para></item>
          <item><para>help.search() no longer attempts to handle
packages installed prior to R 2.0.0, and reports the current path to
the package (rather than where it was originally installed: this
information is not shown by the print() method).</para></item>
          <item><para>Added "hexmode" to parallel
"octmode".</para></item>
          <item><para>install.packages() now does tilde expansion on
file paths supplied as 'pkgs'.</para></item>
          <item><para>install.packages() has additional arguments
'configure.args' and 'clean' which allow the caller to provide
additional arguments to the underlying R CMD INSTALL shell command
when installing source packages on a Unix-alike.</para></item>
          <item><para>is.loaded() has a new argument 'type' to confine
the search to symbols for .C, .Fortran, .Call or .External: by default
it looks for a symbol which will match any of them. It is now
internal and not primitive, so argument matching works in the usual
way.</para></item>
          <item><para>The symmetry test for matrices used in eigen()
has been ``exported'' as the 'matrix' method of a new S3-generic
'isSymmetric().</para></item>
          <item><para>.leap.seconds and the internal adjustment code
now know about the 23rd leap second on 2005-12-31: the internal code
uses a run-time test to see if the OS does.</para></item>
          <item><para>The 'col' argument of legend() now defaults to
par("col") (which defaults to "black", the previous default), so that
the lines/symbols are shown in the legend in the colour that is used
on the plot.</para></item>
          <item><para>log2() and log10() call C functions of the same
name if available, and will then be more likely to be precise to
machine accuracy.</para></item>
          <item><para>new.packages() gains a ... argument to pass e.g.
'destdir' to install.packages(). (Wish of PR#8239.)</para></item>
          <item><para>nls() now supports 'weights'.</para></item>
          <item><para>The vector passed as the first argument of the
'fn' and 'gr' arguments of optim() has the names (if any) given to
argument 'par'.</para></item>
          <item><para>options(expressions) is temporarily increased by
500 during error-handling. This enables e.g. traceback() to work when
the error is reaching the limit on the nesting of
expressions.</para></item>
          <item><para>page() accepts general R objects, not just names
(and previously undocumented) character strings. This allows the
object to be specified as a call, for example. More options are
allowed in its '...' argument.</para></item>
          <item><para>pairs() allows a wider class of inputs,
including data frames with date and date-time columns.</para></item>
          <item><para>par() and the in-line use of graphical
parameters produce more informative error messages, distinguishing
between non-existent pars and inappropriate use of valid
pars.</para>
          <para>Graphical parameters 'family', 'lend', 'ljoin' and
'lmitre' can now be set in-line.</para>
          <para>There is no longer a warning if non-settable
pars are used in-line, but there is an appropriate warning if unknown
pars are passed.</para>
          <para>The length limit for the 'family' parameter
has been increased to 200 bytes, to allow for the names of some
CID-keyed fonts in multi-byte locales.</para></item>
          <item><para>The pdf() device now allows 'family' to be
specified in the same generality as postscript().</para></item>
          <item><para>The pdf() device writes /FontDescriptor entries
for all fonts except the base 14, and does not write font entries for
unused fonts.</para></item>
          <item><para>Plotmath allows 'vartheta', 'varphi' and
'varsigma' (or 'stigma') as synonyms for 'theta1', 'phi1' and
'sigma1', and the help page has a note for TeX users.</para></item>
          <item><para>plot.xy() now takes its default arguments from
the corresponding par() settings, so points(type="l") and
lines(type="p") behave in the same way (and more obviously, also for
type="b").</para></item>
          <item><para>poly() has a new argument 'raw', mainly for
pedagogical purposes.</para></item>
          <item><para>The class "POSIXlt" now supports fractional
seconds (as "POSIXct" has always done). The printing of fractional
seconds is controlled by the new option "digits.secs", and by default
is off.</para></item>
          <item><para>postscript() supports family =
"ComputerModernItalic" for Computer Modern with italic (rather than
slanted) faces.</para></item>
          <item><para>The postscript()/pdf() font metrics for the 14
standard fonts (only, not the rest of the common 35) have been updated
to versions from late 1999 which cover more glyphs. There are also a
few differences in the metrics and hence the output might be slightly
different in some cases.</para></item>
          <item><para>The way families can be specified for
postscript() and pdf() has been expanded to include CID-keyed fonts,
with new functions Type1Font() and CIDFont() to set up such fonts
families.</para></item>
          <item><para>prettyNum() has new arguments 'preserve.width'
and 'zero.print'. When the former is not "none", as in calls from
format() and formatC(), the resulting strings are kept at the desired
width when possible even after adding of 'big.mark' or
'small.mark'.</para></item>
          <item><para>proc.time() and system.time() now record times
to 1ms accuracy where available (most Unix-like
systems).</para></item>
          <item><para>The initialization methods for the quasi()
family have been changed to depend on the variance function, and in
particular to work better for the "mu(1-mu)" variance function.
(PR#8486)</para></item>
          <item><para>read.table() gains a 'flush' argument passed to
scan().</para></item>
          <item><para>require() now takes a 'lib.loc'
argument.</para></item>
          <item><para>The second argument 'size' to sample() is
required to have length 1, so that errors when supplying arguments are
more easily detected.</para></item>
          <item><para>The default is now compress = !ascii in save()
(but not save.image).</para></item>
          <item><para>scan() and write.table() now have some
interruptibility, which may be useful when processing very large
files.</para></item>
          <item><para>A new heuristic test, seemsS4Object() is
supplied, along with a similar C-level test, R_seemsS4Object(object).
The test detects probable S4 objects by their class's
attribute.</para></item>
          <item><para>S3 classes can now be made non-virtual S4
classes by supplying a prototype object in the arguments to
setOldClass().</para></item>
          <item><para>splinefun() returns a function that now also has
a 'deriv' argument and can provide up to the 3rd derivative of the
interpolating spline</para></item>
          <item><para>stopifnot(A) now gives a better error message
when A has NAs, and uses "not all TRUE" when A has length &gt;=
2.</para></item>
          <item><para>str()'s default method has a new argument
'strict.width' which can be used to produce strict 'width' conforming
output. A new options(str = list(strict.width = *)) setting allows to
control this for a whole session.</para></item>
          <item><para>summary.nls() has a new argument 'correlation'
that defaults to FALSE (like summary.lm).</para></item>
          <item><para>Sys.sleep() has sub-millisecond resolution on
Unix-alikes with gettimeofday().</para></item>
          <item><para>Sys.time() now has sub-millisecond accuracy on
systems supporting the POSIX call gettimeofday, and clock-tick
accuracy on Windows.</para></item>
          <item><para>The new function timestamp() adds a time stamp
to the saved command history on consoles which support
it.</para></item>
          <item><para>New function tcrossprod() for efficiently
computing x %*% t(x) and x %*% t(y).</para></item>
          <item><para>The suffix used by tempfile() is now in hex on
all platforms and guaranteed to be at least 6 hex digits (usually
8).</para></item>
          <item><para>trace() now works more consistently and more
like its documentation, in particular the assertions about old tracing
being removed for new. For debugging purposes (of R) a mechanism for
debugging the trace computations themselves was added. See
trace.R.</para></item>
          <item><para>The implementation of trace() has beem made more
general by calling a function to do the trace interaction, and
recover() now detects trace calls to trim the irrelevant code
underneath.</para></item>
          <item><para>unserialize() can now also read a byte stream
from a raw vector.</para></item>
          <item><para>The useDynLib() directive in the NAMESPACE file
now accepts the names of the native/foreign symbols that are to be
resolved in the DLL for use in .C/.Call/.Fortran/.External calls.
These can be used as regular R variables instead of the (routine name,
PACKAGE) pairs currently recommended. Alternative names can be given
for the R variables mapping to these symbols. The native routine
registration information can also be used directly via useDynLib(name,
.registration = TRUE). See the 'Writing R Extensions' manual for more
details. checkFF() (package 'tools') has been updated
accordingly.</para></item>
          <item><para>validObject() has an option complete=TRUE that
recursively checks the objects in the slots. Not used when new(...)
checks validity.</para></item>
          <item><para>New Vectorize() function, a wrapper for
mapply().</para></item>
          <item><para>write.ftable() has gained an argument 'append =
FALSE'</para></item>
          <item><para>On Unix-alikes, X11() now has arguments to
request the initial position of the window, and 'gamma' defaults to
the value of getOptions("gamma"). These changes are consistent with
the windows() device.</para></item>
          <item><para>X11() and the Unix-alike data entry window can
have properties (including geometry) set by X resources: see their
help files.</para></item>
          <item><para>xy.coords() &amp; xyz.coords() now have NULL
defaults for their 'y' or 'y' and 'z' arguments. This is more
consistent with their earlier documentation, and may be convenient for
using them.</para></item>
          <item><para>Non-syntactic names of list elements are now
printed quoted by backticks rather than double quotes.</para></item>
          <item><para>There is some basic checking for imminent C
stack overflow (when the evaluation depth and the user interrupts are
checked). On systems with suitable OS support (not Windows), segfaults
from C stack overflow are caught and treated as an R
error.</para></item>
          <item><para>New function Cstack_info() reports on stack size
and usage.</para></item>
          <item><para>options(expressions) reverts to the default of
5000 now stack checking is in place.</para></item>
          <item><para>Package tcltk does not try to initialize Tk on
Unix-alikes unless a DISPLAY variable is present. This allows
packages dependent on tcltk to be installed without access to an X
server.</para></item>
          <item><para>The code used to guess timezone offsets where
not supplied by the OS uses a different algorithm that is more likely
to guess the summer-time transitions correctly.</para></item>
          <item><para>Package tools contains translation tables
'Adobe_glyphs' and 'charset_to_Unicode'.</para></item>
          <item><para>Changed the environment tree to be rooted in an
empty environment, available as emptyenv(). baseenv() has been
modified to return an environment with emptyenv() as parent, rather
than NULL.</para></item>
          <item><para>gettext has been updated to
0.14.5.</para></item>
          <item><para>PCRE has been updated to version
6.4.</para></item>
          <item><para>The method $.DLLInfo resolves the specified
symbol in the DLL, returning a NativeSymbolInfo object. Use [[ to
access the actual values in the DLLInfo object.</para></item>
          <item><para>On systems with either vasprintf or both va_copy
and a vsnprintf which reports the size of buffer required, connections
such as gzfile() and bzfile() can now write arbitrarily long lines,
not just 100000 chars.</para></item>
          <item><para>The R session temporary directory is now set in
C code using the same algorithm whether or not the shell front-end is
used and on all platforms. This looks at environment variables
TMPDIR, TMP and TEMP in turn, and checks if they point to a writable
directory.</para></item>
          <item><para>Some of the classical tests put unnecessary
restrictions on the LHS in the formula interface (e.g., t.test(x+y ~
g) was not allowed).</para></item>
          <item><para>On suitably equipped Unix-alike systems,
segfaults, illegal operations and bus errors are caught and there is a
simple error-handler which gives the user some choice as to what to do
in interactive use. [Experimental.]</para></item>
          <item><para>On Windows access violations and illegal
instructions are caught with a simple error handler.
[Experimental.]</para></item>
          <item><para>Tracebacks now include calls such as
.C/.Fortran/.Call, which will help if errors occur in R code evaluated
by compiled code and in tracebacks presented by the segfault etc
handlers.</para></item>
          <item><para>Treatment of signature objects and method
definition objects has been modified to give cleaner printing and more
consistency in the treatment of signatures. A sometimes useful
utility, methodSignatureMatrix(), is now exported.</para></item>
          <item><para>Printing the results of codoc() from package
tools now helpfully summarizes the found code/documentation
mismatches.</para></item>
          <item><para>R refrains from printing a final EOL upon
exiting the main loop if the quiet flag is on and if the save action
is known (e.g. this is true for --slave).</para></item>
        </items>

        <items name="Deprecated and Defunct">
          <item><para>The deprecated and undocumented use of atan()
with two arguments has been removed: instead use
atan2().</para></item>
          <item><para>write.table0() is defunct in favour of
write.table().</para></item>
          <item><para>format.char() is defunct in favour of
format.default().</para></item>
          <item><para>Support for the long-deprecated (and no longer
documented) arguments --min-vsize --min-nsize --max-vsize --max-nsize
--vsize --nsize of R CMD BATCH has been removed.</para></item>
          <item><para>The 'debian' subdirectory has been removed from
the sources.</para></item>
          <item><para>The 'vfont' argument of axis() and mtext() has
been removed: use par(family=) instead.</para></item>
          <item><para>The unused graphical parameter "type" has been
removed: it invited confusion with the 'type' argument to default
methods of plot(), points() and lines().</para></item>
          <item><para>nlsMethod() and profiler() are no longer
exported from the stats name space (and nlsMethod.plinear() is no
longer registered as a method, as nlsMethod() was not
generic).</para></item>
          <item><para>The re-named tcltk functions tkcmd, tkfile.tail,
tkfile.dir, tkopen, tkclose, tkputs, tkread are now formally
deprecated.</para></item>
          <item><para>Argument 'col' of bxp() is now formally
deprecated.</para></item>
          <item><para>Use of NULL as an environment is deprecated and
gives a warning.</para></item>
          <item><para>postscriptFont() is deprecated in favour of
Type1Font() (which is just a change of name).</para></item>
          <item><para>La.chol() and La.chol2inv() are deprecated (they
have since R 1.7.0 been the same as the default options of chol() and
chol2inv).</para></item>
          <item><para>La.svd(method = "dgesvd") is
deprecated.</para></item>
          <item><para>The use of install.R and R_PROFILE.R files in
packages is deprecated: use the DESCRIPTION file instead to arrange to
save an image or to load dependent packages.</para></item>
          <item><para>following command-line options to INSTALL are
deprecated (use the fields in the DESCRIPTION file instead): -s --save
--no-save --lazy --no-lazy --lazy-data --no-lazy-data</para></item>
          <item><para>Graphical parameter 'tmag' (which is long
unused) is deprecated.</para></item>
        </items>

        <items name="Internationalization">
          <item><para>New postscript encodings for CP1253, CP1257 and
Greek (ISO 8859-7).</para></item>
          <item><para>Support for East Asian CID-keyed fonts in pdf()
and postscript(). Although these usually contain Latin characters no
accurate AFMs are available and so CID-keyed fonts are intended only
for use with CJK characters.</para></item>
          <item><para>Wide-character width functions wc[s]width are
provided that overcome problems found with OS-supplied ones (and those
previously used by R on Windows). This means that double-width CJK
characters are now supported on all platforms. It seems that the
width of some characters (and not just CJK characters) depends on
which CJK locale's fonts are in use and also on the OS.</para></item>
          <item><para>Revised wide-character classification functions
are provided for use on Windows, AIX and MacOS X to replace deficient
OS-supplied ones.</para></item>
          <item><para>There is support for MBCS charsets in the
pictex() graphics device, and rotated (by 90 degrees) text may work
better.</para></item>
          <item><para>The \u (and \U except on Windows) notation for
characters which is supported by the parser in all MBCS charsets is
now always interpreted as a Unicode point, even on platforms which do
not encode wchar_t in Unicode. These are now a syntax error in
single-byte locales.</para></item>
          <item><para>The default encoding for postscript() and pdf()
is chosen to be suitable for the current locale, if that is a
single-byte locale which is supported. This covers European
(including Greek) and Cyrillic languages.</para></item>
          <item><para>In UTF-8 locales, a suitable single-byte
encoding is chosen for postscript() and pdf(), and text translated to
it.</para></item>
          <item><para>xfig() gains an 'encoding'
argument.</para></item>
          <item><para>There are some message translations into
Spanish.</para></item>
        </items>

        <items name="Installation Changes">
          <item><para>The encoding files for pdf()/postscript() have
been moved to directory 'enc' in package 'grDevices'.</para></item>
          <item><para>Support for MBCS is only enabled if iconv is
found and it supports enough conversions. (libiconv
does.)</para></item>
          <item><para>In an MBCS locale, make check now translates the
graphics examples from Latin-1. This ensures that they will work
correctly in UTF-8: it is possible that in other MBCS locales they
will now fail (rather than work completely incorrectly).</para></item>
          <item><para>There is a new test, 'test-Docs', which as part
of 'make check-devel' tests the code in the documentation. Currently
it runs doc/manual/R-{exts,intro}.R and the compiled code in
R-exts.c.</para></item>
          <item><para>The workaround to allow an external
LAPACK-containing BLAS such as libsunperf to be used with the internal
LAPACK has been removed. If you have such a library you may now need
to use --with-lapack. It is no longer possible to use some older
versions of libsunperf, e.g. Forte 7 on 64-bit builds.</para></item>
          <item><para>A substitute for mkdtemp is provided, so it is
now always used for R_TempDir.</para></item>
          <item><para>Most of the functions checked for by 'configure'
also have declarations checked for in the appropriate
header.</para></item>
          <item><para>The top-level documentation files AUTHORS
COPYING.LIB COPYRIGHTS FAQ RESOURCES THANKS have been moved to doc,
and COPYING and NEWS are installed there. The file Y2K has been
removed from the distribution.</para></item>
          <item><para>The extension .lo is no longer used in building
R (only in the optional build of libRmath.so): this allows a
considerable simplification of the Makefiles.</para></item>
          <item><para>Direct support for f2c has been removed: it can
still be used via a script which makes it look like a Fortran
compiler. (src/scripts/f77_f2c is an example of such a
script.)</para></item>
          <item><para>There is a new flag SAFE_FFLAGS which is used
for the compilation of dlamc.f. It is set by configure for known
problem cases (recent g77 and gfortran), but can be overridden by the
user.</para></item>
          <item><para>The standard autoconf macros for large-file
support are now used, and these are enabled unless --disable-largefile
is specified. This replaces --enable-linux-lfs (and is now selected by
default).</para></item>
          <item><para>Visibility attributes are used where supported
(gcc4/gfortran on some platforms, also gcc3/g77 on FC3 and partially
elsewhere). The main benefit should be faster loading (and perhaps
better optimized code) in some of the dynamic shared objects (e.g.
libR.so and stats.so).</para></item>
          <item><para>The *PICFLAGS are taken to be -fpic rather than
-fPIC where possible. This will make no difference on most
platforms: -fPIC is needed on Sparc (and still used there), but -fpic
should give slightly better performance on PowerPC (although -fPIC is
used on PPC64 as it is needed to build libR.so there).</para></item>
          <item><para>More use is made of inlining for small utility
functions such as isReal. Because this can only be done portably with
C99 constructs (and we know of no actual implementation), this is only
done for the GNU C compiler.</para></item>
          <item><para>There is an experimental feature to allow shared
installations of sub-architectures. See the R-admin
manual.</para></item>
          <item><para>All platforms now use R's internal
implementation of strptime, which allows fractional seconds. (The
major platforms were already using it.)</para></item>
          <item><para>The dlcompat work-around for old Mac OS X
systems (&lt;= 10.2) has been removed. External dlcompat must be
installed if needed.</para></item>
        </items>

        <items name="Utilities">
          <item><para>R CMD check now uses an install log by
default.</para></item>
          <item><para>R CMD check works for packages whose package
name is different from the directory name in which it is
located.</para></item>
          <item><para>R CMD INSTALL now uses more randomness in the
temporary directory name even on systems without mktemp
-d.</para></item>
          <item><para>R CMD f77 has been removed now f2c is no longer
supported.</para></item>
          <item><para>The version string shown in the startup message
and by "R --version", and that stored in variable R.version.string are
now in exactly the same format.</para></item>
          <item><para>The base name of a help file needs to be valid
as part of a file:// URL, so R CMD check now checks the names are
ASCII and do not contain % .</para></item>
          <item><para>R CMD check now warns about unknown sections in
Rd files, and invalid names for help, demo and R files, as well as
unlikely file names in the 'src' directory. The latter is controlled
by option --check-subdirs and by default is done if checking a tarball
without a configure script.</para></item>
          <item><para>R CMD build excludes invalid files in the 'man',
'R' and 'demo' subdirectories.</para></item>
          <item><para>\usepackage[noae]{Sweave} in the header of an
Sweave file supresses auto-usage of the ae package ("almost European"
fonts) and T1 input encoding.</para></item>
        </items>

        <items name="Documentation">
          <item><para>Rd format now allows \var{} markup inside
\code{} and \examples{}.</para></item>
          <item><para>Markup such as --, ---, &lt; and &gt; is handled
better when converting .Rd files to [C]HTML.</para></item>
          <item><para>There is new markup \link[=dest]{name} to
generate a link to topic 'dest' which is shown as 'name', and
\linkS4class{abc} which expands to \link[=abc-class]{abc}, for
cross-referencing the recommended form of documentation for S4
classes.</para></item>
        </items>

        <items name="Package Installation">
          <item><para>There is now some support for Fortran 90/95 code
in packages: see `Writing R Extensions'.</para></item>
          <item><para>Installation of man sources and demos is now
done by R code. The restrictions on the names of help files, R files
and of demos are now enforced (see `Writing R
Extensions').</para></item>
          <item><para>Packages which contain compiled code can now
have more than one dot in their name even on Windows.</para></item>
          <item><para>The Meta/hsearch.rds database saved now contains
LibPath="". This information is now always recreated when
help.search() is run, but the field is retained for
back-compatibility.</para></item>
          <item><para>update.packages() now has a '...' argument to be
passed to install.packages(), including the formerly separate
arguments 'destdir' and 'installWithVers'.</para></item>
          <item><para>Make macros AR and RANLIB are now declared in
etc/Makeconf for use by packages which wish to make static
libraries.</para></item>
        </items>

        <items name="C-level Facilities">
          <item><para>qgamma and rgamma in Rmath.h now check for
non-positive arguments.</para></item>
          <item><para>The BLAS which ships with R now contains the
complete set of double-complex BLAS routines, rather than just those
used in R. &lt;R_ext/BLAS.h&gt; has been corrected to add the missing
double-precision BLAS functions drotmg and drotm, and to exclude lsame
(which is a Lapack auxiliary function and is now declared in
&lt;R_ext/Lapack.h&gt;). It also includes the double complex routines
added for this release of R provided Fortran doublecomplex is usable
on the platform.</para></item>
          <item><para>&lt;R_ext/BLAS.h&gt; and &lt;R_ext/Lapack.h&gt;
now declare all the entry points as 'extern'.</para></item>
          <item><para>The flag SAFE_FFLAGS is made available to
packages via etc/Makeconf and R CMD config. It can be used where
optimization needs to be defeated, e.g. in LAPACK setup.</para></item>
          <item><para>getNativeSymbolInfo has a withRegistrationInfo
argument which causes the address field to be a reference to the
registration information if it is available for that symbol. If the
registration information is not available, the address is a reference
to the native symbol. The default is FALSE which is backward
compatible, returning just the address of the symbol and ignoring
registration information.</para></item>
          <item><para>errorcall and warningcall are now declared in
&lt;Rinternals.h&gt; (they might be needed in
front-ends).</para></item>
          <item><para>R_FlushConsole and R_ProcessEvents are now
declared in &lt;R.h&gt;.</para></item>
          <item><para>The R_Sock* functions supporting socket
connections are no longer declared in R-ftp-http.h as they are not
loaded into R itself, and are now hidden in the module's DLL on
suitable systems.</para></item>
        </items>

        <items name="Bug Fixes">
          <item><para>Quoted arguments to the R script after --args
are now passed quoted to the R executable and so will be shown as
expected by commandArgs(). (They were previously split at whitespace
even inside quotes on Unix-alikes but not on Windows.)</para></item>
          <item><para>axis() now supports pars 'xaxp'/'yaxp' as inline
arguments.</para></item>
          <item><para>sort() now does not return inappropriate
attributes such as "dim" and "tsp": it only returns names. sort(x,
partial=) no longer returns unsorted names, and drops names (since it
is supplied for efficiency).</para></item>
          <item><para>Use of non-central F in pf() gives accurate
values for larger ncp.</para></item>
          <item><para>R CMD build --binary does a better job of
cleaning up after failure to re-make vignettes.</para></item>
          <item><para>reg-test-1.R tested system(intern=TRUE) which
depends on popen and so is not supported on all
platforms.</para></item>
          <item><para>Changed apparent mis-spelling of "Gibraltar" in
dataset 'eurodist'.</para></item>
          <item><para>sysconf() is now used to find the number of
clock ticks/second: under some circumstances glibc reported CLK_TCK =
60 when the true value was 100.</para></item>
          <item><para>identical() was not allowing for embedded nuls
in character strings. (NB: the comparison operators including == do
not, and never will.)</para></item>
          <item><para>The profile() and profiler() methods for "nls"
objects now support algorithm = "plinear" and algorithm =
"port".</para></item>
          <item><para>The signal handlers for signals USR1 and USR2
where not restored if the signal arrived when interrupts were
suspended.</para></item>
          <item><para>Certain combinations of S4 inheritance could
cause inherited methods to override some directly specified
methods.</para></item>
          <item><para>Some cases of named signatures in calls to
setMethod() caused errors.</para></item>
          <item><para>all.equal() is now more consistent and "picky"
about mismatching attributes, in particular names();
(PR#8191).</para></item>
          <item><para>load() when applied to a connection leaves it
open/not as it found it, and checks explicitly for having a binary
readable connection.</para></item>
          <item><para>The p-values given by stat.anova() (called from
several anova() methods) are now NA (rather than spurious) if
non-nested models give rise to changes in deviance with a different
sign from changes in degrees of freedom.</para></item>
          <item><para>Built-ins were reported as the relevant call in
C-level error()s iff R profiling was in progress. Now they are never
reported.</para></item>
          <item><para>Too-long signatures (with no names) were not
being caught in setMethod().</para></item>
          <item><para>Slot names in prototype() are being more
thoroughly checked.</para></item>
          <item><para>signif() is more likely to follow the 'round to
even' rule for exactly representable numbers, e.g. signif(0.25, 1).
(Related to PR#8452.)</para></item>
          <item><para>nls() now works correctly with some
low-dimensional fits, e.g. with one or zero non-linear
parameters.</para></item>
          <item><para>glm() could give an inappropriate error message
if all possible coefficients were invalid (e.g. a log-linear binomial
model with no intercept and a not all positive
predictor).</para></item>
          <item><para>solve() gives clearer error messages for some
incorrect usages. (PR#8494 and similar)</para></item>
          <item><para>The gaussian() family was missing the 'valideta'
component (which could be needed for the "inverse" link function). The
starting values supplied by the gaussian family could be invalid for
the "log" and "inverse" link functions. This is now
reported.</para></item>
          <item><para>data.matrix() did not work correctly on zero-row
data frames. (PR#8496 and other problems.)</para></item>
          <item><para>The DSC comments in the files from
postscript(onefile=FALSE) now label all files as having page 1 of 1,
as some other software seems to expect that.</para></item>
          <item><para>The axis labels chosen for logarithmic axis are
now less likely to be linear and inappropriate (when the range is more
than 10 and less than 100). (PR#1235)</para></item>
          <item><para>Staircase lines (types "s" and "S") are now
drawn continuously rather than a point at a time and so line types,
mitring and so on work. (PR#2630)</para></item>
          <item><para>Calling par(mfg) before doing any plotting
resulted in NewPage never being called on the device, which in turn
resulted in incorrect output for postcript() and pdf()
devices.</para></item>
          <item><para>terms.formula needed to add parentheses to
formulae with terms containing '|'. (PR#8462)</para></item>
          <item><para>pbirthday() and qbirthday() now also work for
very improbable events {those you are typically *not* interested
in}.</para></item>
          <item><para>Only source help files starting with an upper-
or lower-case letter or digit and extension .Rd or .rd are documented
to be processed. This is more liberal in that starting with a digit
is now also allowed, but rule is now enforced.</para></item>
          <item><para>nls(algorthm="port") was always taking positive
numeric differences and so could exceed the upper
bounds.</para></item>
          <item><para>methods:::.asEnvironmentPackage() was not
allowing for versioned installs.</para></item>
          <item><para>.find.package() now reports which package(s) it
cannot find in the case it stops with an error.</para></item>
          <item><para>The standard Unix-alike version of file.show()
gives an informative message if it cannot open a file rather than the
(possibly incorrect) 'NO FILE'.</para></item>
          <item><para>window() did not allow non-overlapping ranges
with extend = TRUE. (PR#8545)</para></item>
          <item><para>pbinom(size = 0) now returns correct values (not
NaN). (PR#8560)</para></item>
          <item><para>[dp]binom(x, *) for x &lt; 0 now always returns
0. (PR#8700) analogous change in pgeom(), pnbinom() and
ppois().</para></item>
          <item><para>[dqpr]geom and [dpqr]nbinom() now all
consistently accept prob = 1 but not prob = 0. qgeom(prob=1) now
gives the correct values (not -1).</para></item>
          <item><para>INSTALL on Unix-alikes was not loading dependent
packages when preparing for lazy-loading.</para></item>
          <item><para>qcauchy(1) now gives +Inf instead of just a very
large number.</para></item>
          <item><para>df(0, f1, *) now properly returns Inf, 1, or 0
for f1 &lt; , = , or &gt; 2.</para></item>
          <item><para>qbinom(), qnbinom() and qpois() now use a better
search and normally reach the answer very quickly when it is large
(instead of being slow or infinite-looping).</para></item>
          <item><para>pt(x, df) lost accuracy in the far tails (when
|x| &gt; 1e154) for small df (like df = 0.001 for which such extremes
are not unlikely).</para></item>
          <item><para>dbeta(x, a, b) underflowed internally and
incorrectly gave 0 for very small x and a.</para></item>
          <item><para>None of the warnings about convergence failures
or loss of precision in nmath (distribution and special functions)
were being reported to the R user.</para></item>
          <item><para>dnt was missing from standalone nmath (under
Unix-alikes).</para></item>
          <item><para>split() now accepts factors with numeric (but
not storage mode integer) codes.</para></item>
          <item><para>The utilities such as 'check' now report active
version numbers again, as SVN 'last changed revision'
numbers.</para></item>
          <item><para>addmargins() did not accept a name for 'FUN',
only an expression.</para></item>
          <item><para>'+' for POSIXt objects now takes the tzone from
whichever object has it, so date+x is the same as x+date if x is
numeric.</para></item>
          <item><para>mean.default() and var() compute means with an
additional pass and so are often more accurate, e.g. the variance of a
constant vector is (almost) always zero and the mean of such a vector
will be equal to the constant value to machine precision.
(PR#1228)</para></item>
          <item><para>sum(), prod(), mean(), rowSums() and friends use
a long double accumulator where available and so may be more accurate.
(This is particularly helpful on systems such as Sparc and AMD64 where
long double gives considerably greater exponent range and precision
than double.)</para></item>
          <item><para>read.dcf() now gives a warning on malformed
lines.</para></item>
          <item><para>add1.[g]lm now try harder to use the environment
of the formula in the orginal fit to look for objects such as the
'data' and 'subset' arguments.</para></item>
          <item><para>gaussian()$aic was inconsistent with e.g. the lm
results from AIC() and extractAIC() for weighted fits: it treated the
weights as case weights and not variance factors.</para></item>
          <item><para>system() on Unix-alikes ignored non-logical
values of 'intern' and treated 'intern = NA' as true.</para></item>
          <item><para>as.table() now produces non-NA rownames when
converting a matrix of more than 26 rows. (PR#8652)</para></item>
          <item><para>Partial sorting used an algorithm that was
intended only for a few values of 'partial' and so could be far slower
than a full sort. It now switches to a barebones full sort for more
than 10 values of 'partial' and uses a more efficient recursive
implementation for 2...10.</para></item>
          <item><para>summary.glm() returned an estimate of dispersion
of Inf for a gaussian glm with zero residual degrees of freedom and
then treated that as a known value. It now uses the estimate NaN,
which is consistent with summary.lm().</para></item>
          <item><para>Sys.sleep() on Unix-alikes was restricted to
about 2147 seconds and otherwise might never have returned.
(PR#8678)</para></item>
          <item><para>is(obj, Cl) could wrongly report TRUE when Cl
was a classUnion and multiple inheritance was involved.</para></item>
          <item><para>confint[.lm / .default] used label "100 %" for
level = 0.999</para></item>
          <item><para>Empty entries (i.e., extraneous ",") in
NAMESPACE files now give a better error message early at parsing time
instead of a less comprehensible one later at load time.</para></item>
          <item><para>all.equal(n1, n2) could erroneously return NA
when n1, n2 contained large integers.</para></item>
          <item><para>anova.mlm() didn't handle multi-df effects
properly in the single-model case (PR#8679)</para></item>
          <item><para>anova.mlm() had its colnames mangled by
data.frame() (needed check.names=FALSE).</para></item>
          <item><para>summary.glm() gave an NA estimate of dispersion
for fits with zero weights. (PR#8720)</para></item>
          <item><para>qhyper() had too small a tolerance for
right-continuity on some platforms so was not always an inverse to
phyper().</para></item>
          <item><para>rownames&lt;-.data.frame() and
dimnames&lt;-.data.frame() tested the length(s) of the replacement
value(s) before coercion, which can change the length (e.g. for class
"POSIXlt").</para></item>
          <item><para>max() and min() ignored the largest/smallest
representable integer, as well as Inf/-Inf. (PR#8731)</para></item>
          <item><para>write.table() assumed factors had integer codes:
it now allows malformed factors with numeric codes (and otherwise
throws an error).</para></item>
          <item><para>Worked around a Solaris restriction which meant
that Sys.sleep() was only effective for times of up to one
second.</para></item>
          <item><para>sink(, split=TRUE) now works correctly, but is
allowed only on platforms that support va_copy or __va_copy.
(PR#8716)</para></item>
          <item><para>factanal(), prcomp() and princomp() now only
check that columns in the model frame that will be used are numeric
(they previously also checked columns which were part of negative
terms in the formula).</para></item>
          <item><para>Misuse of $ in apply could corrupt memory.
(PR#8718)</para></item>
          <item><para>apply() could fail if the function returned NULL
(e.g. if there was a single row).</para></item>
          <item><para>registerS3method() failed due to a typo. (It was
almost never used.)</para></item>
          <item><para>Registering an S3 method for an S3 generic in
another package that was converted to an S4 generic in the same
package as the S3 method, registered the method in the wrong
place.</para></item>
          <item><para>Recall() used lookup for the function in use and
so could fail if that was an S3 method not on the search
path.</para></item>
          <item><para>Rdconv -t Ssgm failed if it encountered
\link[opt]{arg}.</para></item>
          <item><para>uniroot() did not give a warning (as documented)
if it failed to converge in 'maxiter' steps.
(PR#8751)</para></item>
          <item><para>eapply() (and as.list.environment()) did not
work for the base environment/name space. (PR#8761)</para></item>
          <item><para>Added protection in configure against systems
for which using xmkmf fails to report a C or C++
compiler.</para></item>
          <item><para>expand.grid() was constructing a data frame 'by
hand' and so setting integer row.names (which are documented to be
character). It now sets character row names, and
row.names.data.frame() coerces to character.</para></item>
          <item><para>qbeta() used == on volatile doubles for its
convergence test, which failed with gcc 3.3.x on ix86 Linux. We now
use a less fragile test (and lose a negligible amount of
accuracy).</para></item>
          <item><para>ls.str() was missing inherits=FALSE, and so
could have reported on an object of the same name but a different mode
in the enclosure of the given environment.</para></item>
          <item><para>logLik.nls assumed that sigma^2 had been
estimated, but did not count this in the 'df' attribute.</para></item>
        </items>
      </change>

      <change from="2.2.0" to="2.2.1">
        <items name="Installation Changes">
          <item><para>The macro SOCKLEN_T has been replaced by
R_SOCKLEN_T to work around a problem with the headers of AIX
5.3.</para></item>
        </items>

        <items name="Bug Fixes">
          <item><para>sub(fixed = TRUE) could get wrong the length of
the character string for elements of the result after the
first.</para></item>
          <item><para>legend() worked out which elements of 'lty' were
valid before resizing 'lty', and so could fail if 'lty' was a
different length from 'legend'.</para></item>
          <item><para>str(&lt;dendrogram&gt;) sometimes used much too
many spaces (in 2.2.x).</para></item>
          <item><para>eigen(eispack=TRUE) accessed areas off the
matrix in some circumstances (some asymmetric matrices with both
complex conjugate pair and real eigenvalues).</para></item>
          <item><para>strptime() in 2.2.1 sometimes did not set $isdst
when it was previously set.</para></item>
          <item><para>Another case of infinite influence has been
worked around. (An addendum to PR#8367.)</para></item>
          <item><para>qr.coef() worked incorrectly with multiple rhs
in the LAPACK-using cases. (PR#8476/8)</para></item>
          <item><para>rbind.data.frame() gave a corrupt data frame if
one of the named arguments was a zero-row data frame.
(PR#8506)</para></item>
          <item><para>Checks for NULL in the rho argument of the
C-level findVar function have been added.</para></item>
          <item><para>The C-level substitute function was handling
NULL in its 'rho' argument incorrectly.</para></item>
          <item><para>The code for pgamma() introduced in 2.1.0 failed
for large values of 'shape' where the previous code was perfectly
acceptable, despite the claim to be uniformly better. For example,
pgamma(0.9e100, 1e100) was NaN. (PR#8528)</para></item>
          <item><para>There was no command 'ls' in browser() nor
'next' in debug(), despite the documentation (which has been
corrected). Command 'where' in the browser() no longer changes to
step-though mode.</para></item>
          <item><para>factor.scope() could report incorrectly that
interaction terms were not in the upper scope when such terms in the
model and the upper scope had different orders for the main effects.
(Another manifestation of PR#7842.)</para></item>
          <item><para>The "lm" method of drop1() was giving incorrect
results for weighted fits (since deviance.lm() was called on a
non-"lm" object).</para></item>
          <item><para>dotchart() was miscalculating the space for the
labels in the left margin. (PR#8681)</para></item>
          <item><para>r &lt;- glm(.....); all.equal(r,r) # now gives
TRUE instead of an error</para></item>
          <item><para>plot.acf() with a multiple time series was
sometimes miscalculating the 'ylim' value for the plot after the
first. (PR#8705)</para></item>
        </items>

        <items name="User-visible Changes">
          <item><para>options("expressions") has been reduced to 1000:
the limit of 5000 introduced in 2.1.0 was liable to give crashes from
C stack overflow.</para></item>
        </items>

        <items name="New Features">
          <item><para>Use of 'pch' (e.g. in points) in the symbol font
5 is now interpreted in the single-byte encoding used by that font.
Similarly, strwidth now recognizes that font 5 has a different
encoding from that of the locale. (These are likely to affect the
answer only in MBCS locales such as UTF-8.)</para></item>
          <item><para>The URW font metrics have been updated to
versions from late 2002 which cover more glyphs, including
Cyrillic.</para></item>
          <item><para>New postscript encodings for CP1250 (Windows
East European), ISO Latin-7 (8859-13, Latvian, Lithuanian and Maori),
Cyrillic (8859-5), KOI8-R, KOI8-U and CP1251.</para></item>
          <item><para>configure has more support for the Intel and
Portland Group compilers on ix86 and x86_64 Linux.</para></item>
          <item><para>R CMD INSTALL will clean up if interrupted (e.g.
by ctrl-C from the keyboard).</para></item>
          <item><para>There is now a comprehensive French translation
of the messages</para></item>
        </items>

        <items name="Deprecated and Defunct">
          <item><para>The undocumented use of atan() with two
arguments is deprecated: instead use atan2() (as
documented).</para></item>
          <item><para>The 'vfont' argument of axis() and mtext() is
deprecated (it currently warns and does nothing).</para></item>
          <item><para>The function mauchley.test() is deprecated (was
a misspelling) and replaced by mauchly.test()</para></item>
        </items>

        <items name="Bug Fixes">
          <item><para>The malloc's of AIX and OSF/1 which return NULL
for size 0 are now catered for in src/main/regex.c.</para></item>
          <item><para>Names of list elements which are missing are now
printed as $&lt;NA&gt; and not $"NA" (which is how the non-missing
name "NA" is printed). (Brought up in discussion of
PR#8161.)</para></item>
          <item><para>help.start() was not linking R.css for use by
its front page and immediate links (2.2.0 only).</para></item>
          <item><para>Indexing by character NA matched the name
"NA".</para></item>
          <item><para>The arith-true test used random inputs and did
not set the seed, so it could fail very occasionally.</para></item>
          <item><para>arima() with 'fixed' supplied and p=0 for the
non-seasonal part could give spurious warnings about 'some AR
parameters were fixed'.</para></item>
          <item><para>summary.matrix() could give an infinite
recursion on some classed objects (e.g. those of class
"Surv").</para></item>
          <item><para>The 255th character in an 8-bit character set
was not handled correctly as a letter on some platforms where C char
is signed: for example it was printed as \377 and not allowed in
variable names. </para></item>
          <item><para>Conversion from POSIXct to POSIXlt is done more
accurately around the change of DST in years not supported by the OS
(pre-1970 on Windows and some others, and in the far past or
future).</para></item>
          <item><para>chisq.test(cbind(1:0, c(7,16)), simulate.p =
TRUE) gave wrong P-values on some platforms. (PR#8224)</para></item>
          <item><para>pdf() was not writing details of the encoding to
the file correctly.</para></item>
          <item><para>image() was failing with an error when plotting
a matrix of all NA values. (PR#8228)</para></item>
          <item><para>() could fail if called with add=FALSE (the
default) and length(x)=1 for either x or y, as it uses the plot
coordinates of the previous plot (if any).</para></item>
          <item><para>tools::checkMD5sums was not accepting file names
with spaces in.</para></item>
          <item><para>The plot() method for TukeyHSD() needed updating
after adding adjusted p-values. (PR#8229)</para></item>
          <item><para>read.fwf() did not work for header = TRUE.
(PR#8226)</para></item>
          <item><para>diag() failed when its argument had NA values in
its dimnames.</para></item>
          <item><para>[g]sub(pcre=TRUE) did not work correctly with \U
and \L in a UTF-8 locale, even on the example on the help
page.</para></item>
          <item><para>promptMethods() was failing if the "methods"
argument was supplied.</para></item>
          <item><para>is.loaded() now finds Fortran symbols whether or
not the registration mechanism has been used.</para></item>
          <item><para>ISODateTime() mistakenly corrected non-existent
times (when DST was being started) in the current time
zone.</para></item>
          <item><para>Some replacement operations on data frames gave
incorrect answers, e.g. DF[3:4, "y"] if column "y" did not exist or
was a matrix.</para></item>
          <item><para>getGraphicsEvent() would cause memory corruption
if passed an empty prompt.</para></item>
          <item><para>qr() and chol() now pivot the colnames of the
result when pivoting is used. (PR#8258)</para></item>
          <item><para>example(points) omitted pch=0, although it was
valid and said in the text to be illustrated.</para></item>
          <item><para>plot.default() had an unused 'lab' argument,
thereby preventing the 'lab' graphics parameter being passed through
'...' .</para></item>
          <item><para>Although polygon(col = NA) was the stated
default, specifying NA was not equivalent to omitting the argument
(but col=NULL was equivalent).</para></item>
          <item><para>Im(-1) was pi. (PR#8272, a side effect from all
previous versions of R returning the same value for Im and Arg of
non-complex numbers.)</para></item>
          <item><para>symbols(fg) defaulted to colour 1, not
par("col") as documented. It does now defaults to
par("col").</para></item>
          <item><para>par("family") did not check the length of the
value (up to 49 bytes) and so could segfault.</para></item>
          <item><para>aggregate.ts() did not allow for rounding in
frequencies such as 1/5.</para></item>
          <item><para>prcomp(tol=) was not dropping the sdev's
corresponding to dropped columns.</para></item>
          <item><para>Subassignment of a vector which increased the
length of the vector _and_ had the wrong length of replacement could
occasionally segfault. (This has been there since at least mid
1997.)</para></item>
          <item><para>The registration of .Fortran symbols was broken:
these could only be looked up if there were also .Call symbols
registered!</para></item>
          <item><para>R CMD build was incorrectly rejecting the
recommended form of name for a translation package, 'Translation-ll'.
(PR#8314)</para></item>
          <item><para>numericDeriv() gave nonsense results unless the
variables were real, which was not checked.</para></item>
          <item><para>predict.prcomp() would sometimes give an error
when predicting a single observation. (PR#8324)</para></item>
          <item><para>mapply() could segfault if MoreArgs was not a
list. (PR#8332)</para></item>
          <item><para>The arith-true test used identical() on
floating-point results, and this allowed a failure when the relative
difference was less than .Machine$double.eps but
non-zero.</para></item>
          <item><para>qbinom() was not accepting p = -Inf when log.p =
TRUE, although it is a legitimate value.</para></item>
          <item><para>write.csv[2] only accepted logical constants for
'row.names', and now accepts variables.</para></item>
          <item><para>Conversion of .Rd files did not correctly match
braces enclosing a whole argument, e.g. \eqn{{\bf
a}}{a}.</para></item>
          <item><para>The C function pythag (used if hypot was not
available) would infinite-loop on systems with effective optimizing
compilers.</para></item>
          <item><para>Writing long formats (more than 1000 bytes) with
connections that use dummy_vfprintf could fail on some systems. The
limit has been changed to 100000 bytes pending a more complete fix in
R 2.3.0.</para></item>
          <item><para>Making in src/nmath/standalone without making R
was not making Rmath.h.</para></item>
          <item><para>Both the R front-end and INSTALL could find the
attempted temporary directory name already in use on platforms without
mktemp (and a genuine Bourne shell /bin/sh, not bash). Now both the
process ID and a timestamp are used to create the directory
name.</para></item>
          <item><para>[dpqr]gamma now return NaN for an invalid
'shape' parameter (rather than throw an error), for consistency with
other distribution functions.</para></item>
          <item><para>t() now longer drops dimnames 'list(NULL,NULL)'
or 'list(NULL)'.</para></item>
          <item><para>Influence measures such as rstandard() and
cooks.distance() could return infinite values rather than NaN for a
case which was fitted exactly. Similarly, plot.lm() could fail on
such examples. plot.lm(which = 5) had to be modified to only plot
cases with hat &lt; 1. (PR#8367)</para></item>
          <item><para>lm.influence() was incorrectly reporting
'coefficients' and 'sigma' as NaN for cases with hat = 1, and on some
platforms not detecting hat = 1 correctly.</para></item>
          <item><para>Rmath.h for standalone Rmath was not recording
HAVE_WORKING_LOG, so R_log was not available on platforms defining
it.</para></item>
          <item><para>HoltWinters() was using a slightly incorrect
formula in the C code.</para></item>
          <item><para>dir.create() could be confused by a trailing
slash on the path, and by paths containing drives on
Windows.</para></item>
          <item><para>The search for tcl/tkConfig.sh looked in 'lib'
before 'lib64' directories (and not at all in /usr/local/lib64) and so
might prefer 32- to 64-bit versions if both are
available.</para></item>
          <item><para>nlminb() used an uninitialized variable unless
bounds were supplied, and so failed on 64-bit Solaris.</para></item>
        </items>
      </change>

      <change from="2.1.1" to="2.2.0">
        <items name="User-visible Changes">
          <item><para>plot(&lt;lm object&gt;) uses a new default
'which = 5' for the fourth panel when 'which' is not
specified.</para></item>
          <item><para>The SVN revision number will appear after the
date in the welcome message. The date shown is now the date of the
last change to the sources rather than the date the sources were
prepared.</para></item>
          <item><para>is.null(expression()) now returns FALSE. Only
NULL gives TRUE in is.null().</para></item>
          <item><para>graphics::xy.coords, xyz.coords and n2mfrow have
been moved to the grDevices name space (to be available for grid as
well).</para></item>
          <item><para>graphics::boxplot.stats, contourLines, nclass.*,
and chull have been moved to the grDevices name space. The C code
underlying chull() has been moved to package grDevices.</para></item>
          <item><para>split(x, f), split&lt;-() and unsplit() now by
default split by all levels of a factor f, even when some are empty.
Use split(x, f, drop = TRUE) if you want the old behavior of dropping
empty levels. split() and split&lt;-() are S3 generic functions with
new arguments 'drop' and '...' and all methods now should have 'drop'
and '...' arguments as well.</para></item>
          <item><para>The default for 'allowEscapes' in both
read.table() and scan() has been changed to FALSE.</para></item>
          <item><para>The default for 'gcFirst' in system.time() is
now TRUE.</para></item>
        </items>

        <items name="New Features">
          <item><para>.Platform has a new component 'path.sep', the
separator used between paths in environment variables such as PATH and
TEXINPUTS.</para></item>
          <item><para>anova.mlm() now handles the single-model
case.</para></item>
          <item><para>Hexadecimal values are now allowed for
as.numeric() and as.integer() on all platforms, and as integer
constants in R code.</para></item>
          <item><para>attach() now prints an information message when
objects are masked on the search path by or from a newly attached
database.</para></item>
          <item><para>axis() now returns 'at' positions.</para></item>
          <item><para>axis() has a new argument 'hadj' to control
horizontal adjustment of labels.</para></item>
          <item><para>axis.Date() and axis.POSIXct() now accept a
'labels' argument</para></item>
          <item><para>barplot() now has arguments 'log = ""' and 'add
= FALSE' (as in barplot2() from package 'gplots').</para></item>
          <item><para>baseenv() has been added, to return the base
environment. This is currently still NULL, but will change in a
future release.</para></item>
          <item><para>boxplot() now responds to supplying 'yaxs' (via
bxp()). (Wish of PR#8072.)</para></item>
          <item><para>capabilities() has a new component
'NLS'.</para></item>
          <item><para>cbind() and rbind() now react to 'deparse.level'
= {0,1,2} (as in another system not unlike R).</para></item>
          <item><para>Experimental versions of cbind() and rbind() in
methods package, based on new generic function cbind2(x,y) and
rbind2(). This will allow the equivalent of S4 methods for
cbind() and rbind() --- currently only after an explicit activation
call, see ?cbind2.</para></item>
          <item><para>New functions cdplot() and spineplot() for
conditional density plots and spine plots or spinograms. Spine plots
are now used instead of bar plots for x-y scatterplots where y is a
factor.</para></item>
          <item><para>checkDocFiles() in package 'tools' now checks
for bad \usage lines (syntactically invalid R code).</para></item>
          <item><para>The nonparametric variants of cor.test() now
behave better in the presence of ties. The "spearman" method uses the
asymptotic approximation in that case, and the "kendall" method
likewise, but adds a correction for ties (this is not necessary in the
Spearman case).</para></item>
          <item><para>The X11 dataentry() now has support for X Input
Methods</para></item>
          <item><para>density() is now an S3 generic where
density.default() {former density()} has new argument 'weights' for
specifying observation masses different than the default
1/N</para></item>
          <item><para>download.packages() now carries on if it
encounters a download error (e.g. a repository with a corrupt
index).</para></item>
          <item><para>dump() now skips missing objects with a warning
rather than throw an error.</para></item>
          <item><para>Added "POSIXlt" methods for duplicated() and
unique().</para></item>
          <item><para>Function encoded_text_to_latex() in package
tools translates Latin 1,2,9 and UTF-8 encoded character vectors to
LaTeX escape sequences where appropriate.</para></item>
          <item><para>encodeString() allows justify = "none" for
consistency with format.default(). Some argument names have been
lengthened for clarity.</para></item>
          <item><para>file(), fifo() and pipe() now (if possible)
report a reason if they fail to open a connection.</para></item>
          <item><para>format.default() now has a 'width' argument, and
'justify' can now centre character strings.</para></item>
          <item><para>format.default() has new arguments 'na.encode'
to control whether NA character strings are encoded (true by default),
and 'scientific' to control the use of fixed/scientific notation for
real/complex numbers.</para></item>
          <item><para>How format() works on a list is now documented,
and uses arguments consistently with their usage on an atomic
vector.</para></item>
          <item><para>format.info() now has a 'digits' argument, and
is documented to work for all atomic vectors (it used to work for all
but raw vectors.).</para></item>
          <item><para>New function glob2rx() for translating
`wildcard' aka `globbing' to regular expressions.</para></item>
          <item><para>There is a new function gregexpr() which
generalizes regexpr() to search for all matches in each of the input
strings (not just the first match).</para></item>
          <item><para>[g]sub() now have a 'useBytes' argument like
grep() and regexpr().</para></item>
          <item><para>[g]sub(perl = TRUE) support \L and \U in the
replacement.</para></item>
          <item><para>iconv() has been moved from 'utils' to
'base'.</para></item>
          <item><para>identify()'s default method has additional
arguments 'atpen' and 'tolerance' (following S).</para></item>
          <item><para>KalmanForecast() and KalmanLike() now have an
optional argument fast=FALSE to prevent their arguments being
modified.</para></item>
          <item><para>Exact p-values are available in ks.test() for
the one-sided and two-sided one-sample Kolmogorov-Smirnov
tests.</para></item>
          <item><para>labels() now has a method for "dist" objects
(replacing that for names() which was withdrawn in
2.1.0).</para></item>
          <item><para>library() now explicitly checks for the
existence of directories in 'lib.loc': this avoids some warning
messages.</para></item>
          <item><para>loadNamespace(keep.source=) now applies only to
that name space and not others it might load to satisfy imports: this
is now consistent with library().</para></item>
          <item><para>match.arg() has a new argument 'several.ok =
FALSE'.</para></item>
          <item><para>max.col() has a new argument for non-random
behavior in the case of ties.</para></item>
          <item><para>memory.profile() now uses the type names
returned by typeof() and no longer has two unlabelled
entries.</para></item>
          <item><para>methods() now warns if it appears to have been
called on a non-generic function.</para></item>
          <item><para>The default mosaicplot() method by default draws
grey boxes.</para></item>
          <item><para>nlminb(), similar to that in S-PLUS, added to
package 'stats'.</para></item>
          <item><para>New algorithm "port" (the nl2sol algorithm
available in the Port library on netlib) added to the nls() function
in the 'stats' package.</para></item>
          <item><para>object.size() now supports more types, including
external pointers and weak references.</para></item>
          <item><para>options() now returns its result in alphabetical
order, and is documented more comprehensively and accurately. (Now all
options used in base R are documented, including platform-specific
ones.)</para></item>
          <item><para>Some options are now set in the package which
makes use of them (grDevices, stats or utils) if not already set when
the package is loaded.</para></item>
          <item><para>New option("OutDec") to set the decimal point
for output conversions.</para></item>
          <item><para>New option("add.smooth") to add smoothers to a
plot, currently only used by plot.lm().</para></item>
          <item><para>pie() has new optional arguments 'clockwise' and
'init.angle'.</para></item>
          <item><para>plot.lm() has two new plots (for 'which' = 5 or
6), plotting residuals or cook distances versus (transformed)
leverages - unless these are constant. Further, the new argument
'add.smooth' adds a loess smoother to the point plots by default, and
'qqline = TRUE' adds a qqline() to the normal plot. The default for
'sub.caption' has been improved for long calls.</para></item>
          <item><para>R.home() has been expanded to return the paths
to components (which can as from this version be installed
elsewhere).</para></item>
          <item><para>readbin() and writeBin() now support raw vectors
as well as filenames and connections.</para></item>
          <item><para>read.dcf() can now read gzipped
files.</para></item>
          <item><para>read.table() now passes 'allowEscapes' to
scan().</para></item>
          <item><para>sample(x, size, prob, replace = TRUE) now uses a
faster algorithm if there are many reasonably probable values. (This
does mean the results will be different from earlier versions of R.)
The speedup is modest unless 'x' is very large _and_ 'prob' is very
diffuse so that thousands of distinct values will be generated with an
appreciable frequency.</para></item>
          <item><para>scatter.smooth() now works a bit more like other
plotting functions (e.g., accepts a data frame for argument
'x').</para></item>
          <item><para>signif() on complex numbers now rounds jointly
to give the requested number of digits in the larger component, not
independently for each component.</para></item>
          <item><para>New generic function simulate() in the 'stats'
package with methods for some classes of fitted models.</para></item>
          <item><para>smooth.spline() has a new argument 'keep.data'
which allows to provide residuals() and fitted() methods for smoothing
splines.</para></item>
          <item><para>Attempting source(file, chdir=TRUE) with a URL
or connection for 'file' now gives a warning and ignores
'chdir'.</para></item>
          <item><para>source() closes its input file after parsing it
rather than after executing the commands, as used to happen prior to
2.1.0. (This is probably only significant on Windows where the file
is locked for a much shorter time.)</para></item>
          <item><para>split(), split&lt;-(), unsplit() now have a new
argument 'drop = FALSE', by default not dropping empty levels; this is
*not* back compatible.</para></item>
          <item><para>sprintf() now supports asterisk `*' width or
precision specification (but not both) as well as `*1$' to `*99$'.
Also the handling of `%' as conversion specification terminator is now
left to the system and doesn't affect following
specifications.</para></item>
          <item><para>The plot method for stl() now allows the colour
of the range bars to be set (default unchanged at "light
gray").</para></item>
          <item><para>Added tclServiceMode() function to the tcltk
package to allow updating to be suspended.</para></item>
          <item><para>terms.formula() no longer allows '.' in a
formula unless there is a (non-empty) 'data' argument or
'allowDotAsName = TRUE' is supplied. We have found several cases
where 'data' had not been passed down to terms() and so '.' was
interpreted as a single variable leading to incorrect
results.</para></item>
          <item><para>New functions trans3d(), the 3D -&gt; 2D utility
from persp()'s example, and extendrange(), both in package
'grDevices'.</para></item>
          <item><para>TukeyHSD() now returns p-values adjusted for
multiple comparisons</para></item>
          <item><para>New functions URLencode() and URLdecode(),
particularly for use with file:// URLs. These are used by e.g.
browse.env(), download.file(), download.packages() and various help()
print methods.</para></item>
          <item><para>Functions utf8ToInt() and intToUtf8() to work
with UTF-8 encoded character strings (irrespective of locale or
OS-level UTF-8 support).</para></item>
          <item><para>[dqp]wilcox and wilcox.test work better with one
very large sample size and an extreme first argument.</para></item>
          <item><para>write() has a new argument 'sep'.</para></item>
          <item><para>write.csv[2] now also support row.names =
FALSE.</para></item>
          <item><para>The specification of the substitutions done when
processing Renviron files is more liberal: see ?Startup. It now
accepts forms like R_LIBS=${HOME}/Rlibrary:${WORKGRP}/R/lib
.</para></item>
          <item><para>Added recommendation that packages have an
overview man page &lt;pkg&gt;-package.Rd, and the promptPackage()
function to create a skeleton version.</para></item>
          <item><para>Replacement indexing of a data frame by a
logical matrix index containing NAs is allowed in a few more cases, in
particular always when the replacement value has length
one.</para></item>
          <item><para>Conversion of .Rd files to latex now handles
encoding more comprehensively, including some support for
UTF-8.</para></item>
          <item><para>The internal regex code has been upgraded to
glibc-2.3.5. Apart from a number of bug fixes, this should be somewhat
faster, especially in UTF-8 locales.</para></item>
          <item><para>PCRE has been updated to version
6.2.</para></item>
          <item><para>zlib has been updated to version
1.2.3.</para></item>
          <item><para>bzip2 has been updated to version
1.0.3.</para></item>
          <item><para>Complex arithmetic is now done by C99 complex
types where supported. This is likely to boost performance, but is
subject to the accuracy with which it has been
implemented.</para></item>
          <item><para>The printing of complex numbers has changed,
handling numbers as a whole rather than in two parts. So both real
and imaginary parts are shown to the same accuracy, with the 'digits'
parameter referring to the accuracy of the larger component, and both
components are shown in fixed or scientific notation (unless one is
entirely zero when it is always shown in fixed
notation).</para></item>
          <item><para>Error messages from .C() and .Fortran(), and
from parsing errors, are now more informative.</para></item>
          <item><para>The date and date-time functions work better
with dates more than 5000 years away from 1970-01-01 (by making
dubious assumptions about the calendar in use).</para></item>
          <item><para>There is now a traditional Chinese translation,
and a much more extensive Russian translation.</para></item>
        </items>

        <items name="Deprecated and Defunct">
          <item><para>Capability "IEEE754" is defunct.</para></item>
          <item><para>loadURL() is defunct: use
load(url()).</para></item>
          <item><para>delay() is defunct: use delayedAssign()
instead.</para></item>
          <item><para>The 'CRAN' argument to update.packages(),
old.packages(), new.packages(), download.packages() and
install.packages() is defunct in favour of 'repos'.</para></item>
          <item><para>write.table0() is deprecated in favour of the
much faster write.table().</para></item>
          <item><para>format.char() is deprecated in favour of
format.default().</para></item>
          <item><para>R_HOME/etc/Rprofile is no longer looked for if
R_HOME/etc/Rprofile.site does not exist. (This has been undocumented
since R 1.4.0.)</para></item>
          <item><para>CRAN.packages() is deprecated in favour of
available.packages().</para></item>
          <item><para>Rd.sty no longer processes pre-2.0.0 conversions
containing \Link.</para></item>
          <item><para>The stubs for the defunct device GNOME/gnome
have been removed.</para></item>
          <item><para>print.matrix() (which has been identical to
print.default since R 1.7.0) has been removed.</para></item>
        </items>

        <items name="Installation">
          <item><para>LDFLAGS now defaults to -L/usr/local/lib64 on
most Linux 64-bit OSes (but not ia64). The use of lib/lib64 can be
overridden by the new variable LIBnn.</para></item>
          <item><para>The default installation directory is now
${prefix}/${LIBnn}/R, /usr/local/lib64/R on most 64-bit Linux OSes and
/usr/local/lib/R elsewhere.</para></item>
          <item><para>The places where the doc, include and share
directory trees are installed can be specified independently: see the
R-admin manual.</para></item>
          <item><para>We now test for wctrans_t, as apparently some
broken OSes have wctrans but not wctrans_t (which is required by the
relevant standards) .</para></item>
          <item><para>Any external BLAS found is now tested to see if
the complex routine zdotu works correctly: this provides a
compatibility test of compiler return conventions.</para></item>
          <item><para>Installation without NLS is now cleaner, and
does not install any message catalogues.</para></item>
          <item><para>src/modules/lapack/dlamc.f is now compiled with
-ffloat-store if f2c/gcc are used, as well as if g77 is
used.</para></item>
          <item><para>All the Fortran code has been checked to be
fully F77 compliant so there are no longer any warnings from F95
compilers such as gfortran.</para></item>
          <item><para>The (not-recommended) options
--with-system-zlib, --with-system-bzlib and -with-system-pcre now have
'system' in the name.</para></item>
          <item><para>If a Java runtime environment is detected at
configure time its library path is appended to LD_LIBRARY_PATH or
equivalent. New Java-related variables JAVA_HOME (path to JRE/JDK),
JAVA_PROG (path to Java interpreter), JAVA_LD_PATH (Java library path)
and JAVA_LIBS (flags to link against JNI) are made available in
Makeconf.</para></item>
          <item><para>patch for FPU control with the Intel compilers
on ix86 Linux.</para></item>
        </items>

        <items name="Mac OS X Installation">
          <item><para>--with-blas="-framework vecLib" --with-lapack
and --with-aqua are now the default configure options.</para></item>
          <item><para>The default framework version name was changed
to not contain the patch level (i.e. it is now 2.2 instead of 2.2.0).
Also it can be overridden at configure time by setting FW_VERSION to
the desired name.</para></item>
          <item><para>The Rmath stand-alone library is now correctly
installed inside the R.framework if R was configured as a framework.
In addition, make install-Rmath-framework will install a stand-alone
Rmath framework in /Library/Frameworks (unless overridden by
RMATH_FRAMEWORK_DIR specifying full framework path and name including
the .framework extension).</para></item>
        </items>

        <items name="Package Installation">
          <item><para>The encoding for a packages' 00Index.html is
chosen from the Encoding: field (if any) of the DESCRIPTION file and
from the \encoding{} fields of any Rd files with non-ASCII titles. If
there are conflicts, first-found wins with a warning.</para></item>
          <item><para>R_HOME/doc/html/packages.html is now remade by R
not Perl code. This may result in small changes in layout and a change
in encoding (to UTF-8 where supported).</para></item>
          <item><para>The return value of new.packages() is now
updated for any packages which may be installed.</para></item>
          <item><para>available.packages() will read a compressed
PACKAGES.gz file in preference to PACKAGES if available on the
repository: this will reduce considerably the download time on a
dialup connection. The downloaded information about a repository is
cached for the current R session.</para></item>
          <item><para>The information about library trees found by
installed.packages() is cached for the current session, and updated
only if the modification date of the top-level directory has been
changed.</para></item>
          <item><para>A data index is now installed for a package with
a 'data' dir but no 'man' dir (even though it will have undocumented
data objects).</para></item>
          <item><para>contrib.url path for type="mac.binary" has
changed from bin/macosx/&lt;version&gt; to
bin/macosx/&lt;arch&gt;/contrib/&lt;version&gt; where &lt;arch&gt;
corresponds to R.version$arch</para></item>
        </items>

        <items name="Utilities">
          <item><para>checkFF() used by R CMD check has since R 2.0.0
not reported missing PACKAGE arguments when testing installed packages
with name spaces. It now</para>
          <unorderedlist>
            <item><para>treats installed and source packages in the
same way.</para></item>
            <item><para>reports missing arguments unless they are
in a function in the name space with a useDynLib declaration (as the
appropriate DLL for such calls can be searched for).</para></item>
          </unorderedlist></item>
          <item><para>Rd2dvi sets the encoding(s) used appropriately.
If UTF-8 encoding is used, latex &gt;= 2003/12/01 is
required.</para></item>
          <item><para>codoc() allows help files named
pkg_name-defunct.Rd to have undocumented arguments (and not just
base-defunct.Rd).</para></item>
        </items>

        <items name="C-level Facilities">
          <item><para>C function massdist() {called from density()}
has new argument 'xmass' (= weights).</para></item>
          <item><para>Raw vectors passed to .C() are now passed as
unsigned char * rather than as SEXPs. PR#7853)</para></item>
          <item><para>The search for symbols in a .C/.Call/... call
without a package argument now searches for an enclosing name space
and so finds functions defined within functions in a name
space.</para></item>
          <item><para>R_max_col() has new (5th) argument '*ties_meth'
allowing non-random behavior in the case of ties.</para></item>
          <item><para>The header files have been rationalized: the
BLAS routine LSAME is now declared in BLAS.h not Linpack.h, Applic.h
no longer duplicates routines from Linpack.h, and Applic.h is divided
into API and non-API sections.</para></item>
          <item><para>memory.c has been instrumented so that Valgrind
can track R's internal memory management. To use this, configure
using --with-valgrind-instrumentation=level where level is 1 or 2.
Both levels will find more bugs with gctorture(TRUE). Level 2 makes
Valgrind run extremely slowly.</para></item>
          <item><para>Some support for raw vectors has been added to
Rdefines.h.</para></item>
          <item><para>R_BaseEnv has been added, to refer to the base
environment. This is currently equal to R_NilValue, but it will change
in a future release.</para></item>
        </items>

        <items name="Bug Fixes">
          <item><para>%/% has been adjusted to make x == (x %% y) + y
* ( x %/% y ) more likely in cases when extended-precision registers
were interfering.</para></item>
          <item><para>Operations on POSIXct objects (such as seq(),
max() and subsetting) try harder to preserve time zones and warn if
inconsistent time zones are used.</para></item>
          <item><para>as.function.default() no longer asks for a bug
report when given an invalid body. (PR#1880, PR#7535,
PR#7702)</para></item>
          <item><para>Hershey fonts and grid output (and therefore
lattice output) now rescale correctly in fit-to-window resizing on a
Windows graphics device. Line widths also scale now.</para></item>
          <item><para>Plotmath has more support for multibyte
characters</para></item>
          <item><para>The X11() device now hints the window manager so
that decorations appear reliably under e.g. the GNOME WM</para></item>
          <item><para>Subsetting a matrix or an array as a vector used
to attempt to use the row names to name the result, even though the
array might be longer than the row names. Now this is only done for
1D arrays when it is done in all cases, even matrix indexing. (Tidies
up after the fix to PR#937.)</para></item>
          <item><para>Constants in mathlib are declared 'const static
double' to avoid performance issues with the Intel Itanium
compiler.</para></item>
          <item><para>The parser checks the format of numeric
constants more thoroughly so for example '123E-' is no longer
valid.</para></item>
          <item><para>contourLines() no longer requires an open device
(used to start a device unnecessarily).</para></item>
          <item><para>capabilities() used partial matching but was not
documented to: it no longer does so.</para></item>
          <item><para>kernel(1,0) printed wrongly;
kernel(&lt;name-string&gt;, *) now returns a named kernel in all
cases; plot(kernel(.),..) is more flexible.</para></item>
          <item><para>qgamma(1,s) didn't give +Inf for some
s.</para></item>
          <item><para>installed.packages() and download.packages() now
always return a matrix as documented, possibly with 0 rows (rather
than a 0-length character vector or NULL).</para></item>
          <item><para>Arithmetic operations on data frames no longer
coerce the names to syntatically valid names.</para></item>
          <item><para>Units are now properly recycled in grid layouts
when 'widths' or 'heights' are shorter than the number of columns or
rows (PR#8014).</para></item>
          <item><para>DF &lt;- data.frame(A=1:2, B=3:4); DF[1, 1:3]
&lt;- NULL gave a wrong error message.</para></item>
          <item><para>spline()/spinefun()'s C code had a memory access
buglet which never lead to incorrect results. (PR#8030)</para></item>
          <item><para>sum() was promoting logical arguments to double
not integer (as min() and other members of its group
do).</para></item>
          <item><para>loess() had a bug causing it to occasionally
miscalculate standard errors (PR#7956).</para></item>
          <item><para>library(keep.source=) was ignored if the package
had a name space (the setting of options("keep.source.pkgs") was
always used).</para></item>
          <item><para>hist.POSIXct() and hist.Date() now respect
par("xaxt").</para></item>
          <item><para>The 'vfont' argument was not supported correctly
in title(), mtext(), and axis(). The 'vfont' argument is superseded
by the par(family=) approach introduced in 2.0.0. This bug-fix just
updates the warning messages and documentation to properly reflect the
new order of things.</para></item>
          <item><para>The C-level function PrintGenericVector could
overflow if asked to print a length-1 character vector of several
thousand characters. This could happen when printing a list matrix,
and was fatal up to 2.1.1 and silently truncated in 2.1.1
patched.</para></item>
          <item><para>What happened for proc.time() and system.time()
on (Unix-alike) systems which do not support timing was incorrectly
documented. (They both exist but throw an error.) Further,
systen.time() would give an error in its on.exit
expression.</para></item>
          <item><para>weighted.residuals() now does sensible things
for glm() fits: in particular it now agrees with an lm() fit for a
Gaussian glm() fit. (PR#7961).</para></item>
          <item><para>The 'lm' and 'glm' methods for add1() took the
weights and offset from the original fit, and so gave errors in the
(dubious) usage where the upper scope resulted in a smaller number of
cases to fit (e.g. by omitting missing values in new variables).
(PR#8049)</para></item>
          <item><para>demo() had a 'device' argument that did nothing
(although it was documented to): it has been removed.</para></item>
          <item><para>Setting new levels on a factor dropped all
existing attributes, including class "ordered".</para></item>
          <item><para>format.default(justify="none") now by default
converts NA character strings, as the other values always
did.</para></item>
          <item><para>format.info() often gave a different field width
from format() for character vectors (e.g. including missing values or
non-printable characters).</para></item>
          <item><para>axis() now ensures that if 'labels' are supplied
as character strings or expressions then 'at' is also supplied (since
the calculated value for 'at' can change under
resizing).</para></item>
          <item><para>Defining S4 methods for "[" had resulted in
changed behavior of S3 dispatch in a very rare case which no longer
happens.</para></item>
          <item><para>Fixed segfault when PostScript font loading
fails, e.g., when R is unable to find afm files (reported by Ivo
Welch).</para></item>
          <item><para>R CMD BATCH &lt;file&gt; now also works when
&lt;file&gt; does not end in a newline on Unix-alike
platforms.</para></item>
          <item><para>terms.formula() got confused if the 'data'
argument was a list with non-syntactic names.</para></item>
          <item><para>prompt() and hence package.skeleton() now
produce *.Rd files that give no errors (but warnings) when not edited,
much more often.</para></item>
          <item><para>promptClass() and promptMethods() now also
escape "%" e.g. in '%*%' and the latter gives a message about the file
written.</para></item>
          <item><para>wilcox.test() now warns when conf.level is set
higher than achievable, preventing errors (PR#3666) and incorrect
answers with extremely small sample sizes.</para></item>
          <item><para>The default (protection pointer) stack size (the
default for '--max-ppsize') has been increased from 10000 to 50000 in
order to match the increased default options("expressions") (in R
2.1.0).</para></item>
          <item><para>The R front-end was expecting --gui=tk not Tk as
documented, and rejecting --gui=X11.</para></item>
          <item><para>Rdconv -t latex protected only the first
&lt;&lt; and &gt;&gt; in a chunk against conversion to
guillemets.</para></item>
          <item><para>callNextMethod() and callGeneric() have fixes
related to handling arguments.</para></item>
          <item><para>ls.diag() now works for fits with missing data.
(PR#8139)</para></item>
          <item><para>window.default() had an incorrect tolerance and
so sometimes created too short a series if 'start' or 'end' were
zero.</para></item>
          <item><para>Some (fairly pointless) cases of reshape left a
temporary id variable in the result (PR#8152)</para></item>
          <item><para>R CMD build used 'tar xhf' which is invalid on
FreeBSD systems (and followed tar chf, so there could be no symbolic
links in the tarball).</para></item>
          <item><para>Subassignment of length zero vectors to NULL
gave garbage answers. (PR#8157)</para></item>
          <item><para>Automatic coercion of raw vectors to lists was
missing, so for a list (or data frame) z, z[["a"]] &lt;- raw_vector
did not work and now does. This also affected DF$a &lt;- raw_vector
for a data frame DF.</para></item>
          <item><para>The internal code for commandArgs() was missing
PROTECTs.</para></item>
          <item><para>The width for strwrap() was used as one less
than specified.</para></item>
          <item><para>R CMD INSTALL was not cleaning up after an
unsuccessful install of a non-bundle which was not already
installed.</para></item>
        </items>
      </change>
    </notes>

    <changelog>
      <change date="2012 March 26" revision="2"
      author="Albert Chin-A-Young" email="china@thewrittenword.com">
        <item><para>Update bison dependency from 2.3 to
2.4.3</para></item>
        <item><para>Update bzip2 dependency from 1.0.5 to
1.0.6</para></item>
        <item><para>Update cairo dependency from 1.6.4 to
1.10.2</para></item>
        <item><para>Update fcpackage dependency from 2.6 to
2.8</para></item>
        <item><para>Update freetype dependency from 2.3.7 to
2.4.6</para></item>
        <item><para>Update gettext dependency from 0.17 to
0.18.1.1</para></item>
        <item><para>Update glib dependency from 2.16.5 to
2.26.1</para></item>
        <item><para>Update jpeg dependency from 6b to 8b</para></item>
        <item><para>Update libiconv dependency from 1.12 to
1.13.1</para></item>
        <item><para>Update libpng dependency from 1.2.29 to
1.4.4</para></item>
        <item><para>Update ncurses dependency from 5.6 to
5.7</para></item>
        <item><para>Update pango dependency from 1.20.5 to
1.28.4</para></item>
        <item><para>Update pcre dependency from 7.8 to
8.11</para></item>
        <item><para>Update pkgconfig dependency from 0.23 to
0.25</para></item>
        <item><para>Update tcl dependency from 8.5.6 to
8.5.10</para></item>
        <item><para>Update tiff dependency from 3.8.2 to
3.9.5</para></item>
        <item><para>Update tk dependency from 8.5.6 to
8.5.10</para></item>
        <item><para>Update unzip dependency from 5.5.2 to
6.0</para></item>
        <item><para>Update zip dependency from 2.3 to
3.0</para></item>
      </change>
    </changelog>
  </program>
</programs>
