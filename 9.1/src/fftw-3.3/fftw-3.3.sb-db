<?xml version="1.0"?>
<!DOCTYPE programs SYSTEM "sb-db.dtd">
<programs>
  <program name="fftw" version="3.3" revision="1">
    <build-name>${SB_PROG_NAME}-${SB_PROG_VER}</build-name>

    <install-name>lib${SB_PROG_NAME}33</install-name>

    <sources>
      <source checksum="0728ab3ec0ebb06631ab3b80a5c3d130"
        checksum-type="md5" size="3965713"
        path="src/fftw-3.3.tar.gz"/>
      <patch checksum="34e11a3fab16c5bdb22d84de8b50ce27"
        checksum-type="md5" size="5752"
        path="src/fftw-3.3.tww.patch"/>
      <patch checksum="12b56b670c100cc3fa3b7bd6d32b3e55"
        checksum-type="md5" size="1598411"
        path="src/fftw-3.3.auto.patch"/>
    </sources>

    <dependencies>
      <depend program="perl" add-path="prepend"
        type="build">v==5.12.2</depend>
    </dependencies>

    <script-header>
<![CDATA[
_docdir="${SB_INSTALL_PREFIX}/doc"
]]>
    </script-header>

    <test>
<![CDATA[
gmake check
]]>
    </test>

    <module name="default">
      <validate>
        <depend program="fftw" module="64bit"
          systype="*-aix*|*-hpux*|*-irix*|*-solaris*">v==3.3</depend>
        <depend program="fftw" module="single">v==3.3</depend>
        <depend program="fftw" module="64bit-single"
          systype="*-aix*|*-hpux*|*-irix*|*-solaris*">v==3.3</depend>
      </validate>

      <script-header>
<![CDATA[
_docdir="${SB_INSTALL_PREFIX}/doc"
]]>
      </script-header>

      <configure>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc CFLAGS="-O2 -qro -qroconst -qmaxmem=-1 -qarch=ppc \
-qansialias -w"
  CC_LD_RT="-Wl,-blibpath:"
  LDFLAGS="-Wl,-brtl" ;;
ia64*-hpux*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+b," ;;
*-hpux11.[01]*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +DAportable \
+Oentrysched +Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+s,+b," ;;
*-hpux*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+s,+b," ;;
*-irix*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1429 \
-use_readonly_const -G0 -rdata_shared -DEBUG:optimize_space=ON \
-O2 -OPT:Olimit=0"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-linux*)
  CFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"
  CC_LD_RT="-Wl,-rpath," ;;
*-linux*)
  CFLAGS="-fomit-frame-pointer -Wcast-qual -Wpointer-arith \
-Wcast-align -pedantic"
  CC_LD_RT="-Wl,-rpath," ;;
*-osf*)
  CC=cc CFLAGS="-O2 -arch ev5 -msym -readonly_strings -ansi_alias \
-ansi_args -fp_reorder"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -dalign -xstrconst -xO2 -xtarget=pentium4"
  CC_LD_RT="-R" ;;
*-solaris2.8)
  CC=cc CFLAGS="-mr -Qn -dalign -xstrconst -xO2 -xtarget=ultra2 \
-xarch=v8plusa"
  CC_LD_RT="-R" ;;
*-solaris*)
  CC=cc CFLAGS="-mr -Qn -dalign -xstrconst -xO2 -xtarget=ultra2 \
-m32 -xarch=sparcvis"
  CC_LD_RT="-R" ;;
esac

${SHELL} ./configure CC="${CC:-gcc}" CFLAGS="${CFLAGS:--O2}" \
LDFLAGS="${LDFLAGS+${LDFLAGS}}" --disable-fortran \
--enable-shared --enable-static --disable-dependency-tracking \
--docdir=${_docdir} --infodir="${SB_INSTALL_PREFIX}/info" \
--mandir="${SB_INSTALL_PREFIX}/man" \
--prefix=${SB_INSTALL_PREFIX}

${SB_PATH_SED} -i -e "\
s!-L\(\${libdir}\)!-L\1 ${CC_LD_RT}\1!;" fftw.pc

# rebuild info files
(rm doc/*.info*) 2>/dev/null || :
]]>
      </configure>

      <build>
<![CDATA[
gmake MAKEINFOFLAGS="--no-split"
]]>
      </build>

      <test>
<![CDATA[
gmake check
]]>
      </test>

      <install>
<![CDATA[
gmake install

${SB_PATH_INSTALL} -m 755 -o root -g 0 -d ${_docdir}/texinfo
${SB_PATH_INSTALL} -m 644 -o root -g 0 doc/*.texi ${_docdir}/texinfo
]]>
      </install>
    </module>

    <module name="64bit-single"
    systype="*-aix*|*-hpux*|*-irix*|*-solaris*">
      <script-header>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  _libdir=lib/ppc64 ;;
ia64*-hpux*)
  _libdir=lib/hpux64 ;;
*-hpux*)
  _libdir=lib/pa20_64 ;;
*-irix*)
  _libdir=lib64 ;;
i?86*-solaris*)
  _libdir=lib/amd64 ;;
*-solaris*)
  _libdir=lib/sparcv9 ;;
esac

case "${SB_SYSTYPE}" in
*-aix*)
  export OBJECT_MODE=64 ;;
esac
]]>
      </script-header>

      <configure>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc CFLAGS="-O2 -q64 -qro -qroconst -qmaxmem=-1"
  CC_LD_RT="-Wl,-blibpath:"
  LDFLAGS="-Wl,-brtl" ;;
ia64*-hpux*)
  CC=cc CFLAGS="+O2 +Olit=all +Ofltacc +Oentrysched +DD64 \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+b," ;;
*-hpux*)
  CC=cc CFLAGS="+O1 -z +Ofltacc +Olit=all +Oentrysched +DD64 \
+Odataprefetch"
  CC_LD_RT="-Wl,+s,+b,"
  case "${SB_SYSTYPE}" in
  *-hpux11.31)
    ARGS="--build=hppa64-hp-hpux11.31" ;;
  *-hpux11.23)
    ARGS="--build=hppa64-hp-hpux11.23" ;;
  *-hpux11.11)
    ARGS="--build=hppa64-hp-hpux11.11" ;;
  *-hpux11.00)
    ARGS="--build=hppa64-hp-hpux11.00" ;;
  esac ;;
*-irix*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1429 \
-use_readonly_const -G0 -rdata_shared -DEBUG:optimize_space=ON \
-mips4 -O2 -OPT:Olimit=0"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -dalign -xstrconst -xO2 -xtarget=opteron \
-m64 -xarch=sse2"
  CC_LD_RT="-R" ;;
*-solaris2.8)
  CC=cc CFLAGS="-mr -Qn -dalign -xstrconst -xO2 -xtarget=generic \
-xarch=v9"
  CC_LD_RT="-R" ;;
*-solaris*)
  CC=cc CFLAGS="-mr -Qn -dalign -xstrconst -xO2 -xtarget=generic \
-m64 -xarch=sparc"
  CC_LD_RT="-R" ;;
esac

${SHELL} ./configure CC="${CC:-gcc}" CFLAGS="${CFLAGS:--O2}" \
LDFLAGS="${LDFLAGS+${LDFLAGS}}" --disable-fortran --enable-shared \
--enable-static --disable-dependency-tracking \
--enable-single --libdir="${SB_INSTALL_PREFIX}/${_libdir}" \
${ARGS+${ARGS}} --prefix=${SB_INSTALL_PREFIX}

${SB_PATH_SED} -i -e "\
s!-L\(\${libdir}\)!-L\1 ${CC_LD_RT}\1!;" fftw.pc
]]>
      </configure>

      <test>
<![CDATA[
gmake check
]]>
      </test>

      <install>
<![CDATA[
if [ ! -d ${SB_INSTALL_PREFIX}/lib/64 ]; then
  case "${SB_SYSTYPE}" in
  *-aix*|*-hpux*|*-solaris*)
    ln -s ./$(basename ${_libdir}) ${SB_INSTALL_PREFIX}/lib/64 ;;
  *-irix*)
    ln -s ../lib64 ${SB_INSTALL_PREFIX}/lib/64 ;;
  esac
fi

gmake install-libLTLIBRARIES
]]>
      </install>

      <uninstall>
<![CDATA[
rm -rf ${SB_INSTALL_PREFIX}/${_libdir}/libfftw3f*
]]>
      </uninstall>
    </module>

    <module name="single">
      <script-header>
<![CDATA[
_docdir="${SB_INSTALL_PREFIX}/doc"
]]>
      </script-header>

      <configure>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc CFLAGS="-O2 -qro -qroconst -qmaxmem=-1 -qarch=ppc \
-qansialias -w"
  CC_LD_RT="-Wl,-blibpath:"
  LDFLAGS="-Wl,-brtl" ;;
ia64*-hpux*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+b," ;;
*-hpux11.[01]*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +DAportable \
+Oentrysched +Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+s,+b," ;;
*-hpux*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+s,+b," ;;
*-irix*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1429 \
-use_readonly_const -G0 -rdata_shared -DEBUG:optimize_space=ON \
-O2 -OPT:Olimit=0"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-linux*)
  CFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"
  CC_LD_RT="-Wl,-rpath," ;;
*-linux*)
  CFLAGS="-fomit-frame-pointer -Wcast-qual -Wpointer-arith \
-Wcast-align -pedantic"
  CC_LD_RT="-Wl,-rpath," ;;
*-osf*)
  CC=cc CFLAGS="-O2 -arch ev5 -msym -readonly_strings -ansi_alias \
-ansi_args -fp_reorder"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -dalign -xstrconst -xO2 -xtarget=pentium4"
  CC_LD_RT="-R" ;;
*-solaris2.8)
  CC=cc CFLAGS="-mr -Qn -dalign -xstrconst -xO2 -xtarget=ultra2 \
-xarch=v8plusa"
  CC_LD_RT="-R" ;;
*-solaris*)
  CC=cc CFLAGS="-mr -Qn -dalign -xstrconst -xO2 -xtarget=ultra2 \
-m32 -xarch=sparcvis"
  CC_LD_RT="-R" ;;
esac

${SHELL} ./configure CC="${CC:-gcc}" CFLAGS="${CFLAGS:--O2}" \
LDFLAGS="${LDFLAGS+${LDFLAGS}}" --disable-fortran \
--enable-shared --enable-static --disable-dependency-tracking \
--docdir=${_docdir} --infodir="${SB_INSTALL_PREFIX}/info" \
--enable-single --mandir="${SB_INSTALL_PREFIX}/man" \
--prefix=${SB_INSTALL_PREFIX}

${SB_PATH_SED} -i -e "\
s!-L\(\${libdir}\)!-L\1 ${CC_LD_RT}\1!;" fftw.pc

# rebuild info files
(rm doc/*.info*) 2>/dev/null || :
]]>
      </configure>

      <build>
<![CDATA[
gmake MAKEINFOFLAGS="--no-split"
]]>
      </build>

      <test>
<![CDATA[
gmake check
]]>
      </test>

      <install>
<![CDATA[
gmake install-libLTLIBRARIES
]]>
      </install>

      <uninstall>
<![CDATA[
rm -rf ${SB_INSTALL_PREFIX}/lib/libfftw3f*
]]>
      </uninstall>
    </module>

    <module name="64bit"
    systype="*-aix*|*-hpux*|*-irix*|*-solaris*">
      <script-header>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  _libdir=lib/ppc64 ;;
ia64*-hpux*)
  _libdir=lib/hpux64 ;;
*-hpux*)
  _libdir=lib/pa20_64 ;;
*-irix*)
  _libdir=lib64 ;;
i?86*-solaris*)
  _libdir=lib/amd64 ;;
*-solaris*)
  _libdir=lib/sparcv9 ;;
esac

case "${SB_SYSTYPE}" in
*-aix*)
  export OBJECT_MODE=64 ;;
esac
]]>
      </script-header>

      <configure>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc CFLAGS="-O2 -q64 -qro -qroconst -qmaxmem=-1"
  CC_LD_RT="-Wl,-blibpath:"
  LDFLAGS="-Wl,-brtl" ;;
ia64*-hpux*)
  CC=cc CFLAGS="+O2 +Olit=all +Ofltacc +Oentrysched +DD64 \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+b," ;;
*-hpux*)
  CC=cc CFLAGS="+O1 -z +Ofltacc +Olit=all +Oentrysched +DD64 \
+Odataprefetch"
  CC_LD_RT="-Wl,+s,+b,"
  case "${SB_SYSTYPE}" in
  *-hpux11.31)
    ARGS="--build=hppa64-hp-hpux11.31" ;;
  *-hpux11.23)
    ARGS="--build=hppa64-hp-hpux11.23" ;;
  *-hpux11.11)
    ARGS="--build=hppa64-hp-hpux11.11" ;;
  *-hpux11.00)
    ARGS="--build=hppa64-hp-hpux11.00" ;;
  esac ;;
*-irix*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1429 \
-use_readonly_const -G0 -rdata_shared -DEBUG:optimize_space=ON \
-mips4 -O2 -OPT:Olimit=0"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -dalign -xstrconst -xO2 -xtarget=opteron \
-m64 -xarch=sse2"
  CC_LD_RT="-R" ;;
*-solaris2.8)
  CC=cc CFLAGS="-mr -Qn -dalign -xstrconst -xO2 -xtarget=generic \
-xarch=v9"
  CC_LD_RT="-R" ;;
*-solaris*)
  CC=cc CFLAGS="-mr -Qn -dalign -xstrconst -xO2 -xtarget=generic \
-m64 -xarch=sparc"
  CC_LD_RT="-R" ;;
esac

${SHELL} ./configure CC="${CC:-gcc}" CFLAGS="${CFLAGS:--O2}" \
LDFLAGS="${LDFLAGS+${LDFLAGS}}" --disable-fortran --enable-shared \
--enable-static --disable-dependency-tracking ${ARGS+${ARGS}} \
--libdir="${SB_INSTALL_PREFIX}/${_libdir}" \
--prefix=${SB_INSTALL_PREFIX}

${SB_PATH_SED} -i -e "\
s!-L\(\${libdir}\)!-L\1 ${CC_LD_RT}\1!;" fftw.pc
]]>
      </configure>

      <test>
<![CDATA[
gmake check
]]>
      </test>

      <install>
<![CDATA[
if [ ! -d ${SB_INSTALL_PREFIX}/lib/64 ]; then
  case "${SB_SYSTYPE}" in
  *-aix*|*-hpux*|*-solaris*)
    ln -s ./$(basename ${_libdir}) ${SB_INSTALL_PREFIX}/lib/64 ;;
  *-irix*)
    ln -s ../lib64 ${SB_INSTALL_PREFIX}/lib/64 ;;
  esac
fi

gmake install-libLTLIBRARIES install-pkgconfigDATA
]]>
      </install>

      <uninstall>
<![CDATA[
rm -f ${SB_INSTALL_PREFIX}/lib/64
rm -f ${SB_INSTALL_PREFIX}/${_libdir}/libfftw3.*
rm -rf ${SB_INSTALL_PREFIX}/${_libdir}/pkgconfig
rmdir ${SB_INSTALL_PREFIX}/${_libdir} || :
]]>
      </uninstall>
    </module>

    <notes>
      <change from="3.2.2" to="3.3">
        <item><para>Compiling OpenMP support (--enable-openmp) now
installs a fftw3_omp library, instead of fftw3_threads, so that OpenMP
and POSIX threads (--enable-threads) libraries can be built and
installed at the same time.</para></item>
        <item><para>Various minor compilation fixes, corrections of
manual typos, and improvements to the benchmark test
program.</para></item>
        <item><para>Add support for the AVX extensions to x86 and
x86-64. The AVX code works with 16-byte alignment (as opposed to
32-byte alignment), so there is no ABI change compared to FFTW
3.2.2.</para></item>
        <item><para>Added Fortran 2003 interface, which should be
usable on most modern Fortran compilers (e.g. gfortran) and provides
type-checked access to the the C FFTW interface. (The legacy
Fortran-77 interface is still included also.)</para></item>
        <item><para>Added MPI distributed-memory
transforms.</para></item>
        <item><para>Add support for quad-precision __float128 in gcc
4.6 or later (on x86. x86-64, and Itanium). The new routines use the
fftwq_ prefix.</para></item>
        <item><para>Removed support for MIPS paired-single
instructions due to lack of available hardware for testing. Users who
want this functionality should continue using FFTW 3.2.x. (Note that
FFTW 3.3 still works on MIPS; this only concerns special instructions
available on some MIPS chips.)</para></item>
        <item><para>Removed support for the Cell Broadband
Engine. Cell users should use FFTW 3.2.x.</para></item>
        <item><para>New convenience functions fftw_alloc_real and
fftw_alloc_complex to use fftw_malloc for real and complex arrays
without typecasts or sizeof.</para></item>
        <item><para>New convenience functions
fftw_export_wisdom_to_filename and fftw_import_wisdom_from_filename
that export/import wisdom to a file, which don't require you to
open/close the file yourself.</para></item>
        <item><para>New function fftw_cost to return FFTW's internal
cost metric for a given plan; thanks to Rhys Ulerich and Nathanael
Schaeffer for the suggestion.</para></item>
        <item><para>The --enable-sse2 configure flag now works in both
double and single precision (and is equivalent to --enable-sse in the
latter case).</para></item>
        <item><para>Remove --enable-portable-binary flag: we new
produce portable binaries by default.</para></item>
        <item><para>Remove the automatic detection of native
architecture flag for gcc which was introduced in fftw-3.1, since new
gcc supports -mtune=native. Remove the --with-gcc-arch flag; if you
want to specify a particlar arch to configure, use ./configure CC="gcc
-mtune=...".</para></item>
        <item><para>--with-our-malloc16 configure flag is now renamed
        --with-our-malloc.</para></item>
        <item><para>Fixed build problem failure when srand48
declaration is missing; thanks to Ralf Wildenhues for the bug
report.</para></item>
        <item><para>Fixed bug in fftw_set_timelimit: ensure that a
negative timelimit is equivalent to no timelimit in all cases. Thanks
to William Andrew Burnson for the bug report.</para></item>
        <item><para>Fixed stack-overflow problem on OpenBSD caused by
using alloca with too large a buffer.</para></item>
        <item><para>Added back in MPI code from 3.2alpha3.</para></item>
      </change>

      <change from="3.2.1" to="3.2.2">
        <item><para>Improve performance of some copy operations of
complex arrays on x86 machines.</para></item>
        <item><para>Add configure flag to disable alloca(), which is
broken in mingw64.</para></item>
        <item><para>Planning in FFTW_ESTIMATE mode for r2r transforms
became slower between fftw-3.1.3 and 3.2. This regression has now been
fixed.</para></item>
      </change>
    </notes>
  </program>
</programs>
