<?xml version="1.0"?>
<!DOCTYPE programs SYSTEM "sb-db.dtd">
<programs>
  <program name="pycrypto" version="2.3" revision="1">
    <build-name>${SB_PROG_NAME}-${SB_PROG_VER}</build-name>

    <install-name>${SB_PROG_NAME}23</install-name>

    <sources>
      <source checksum="2b811cfbfc342d83ee614097effb8101"
        checksum-type="md5" size="331476"
        path="src/pycrypto-2.3.tar.gz"/>
      <patch checksum="06c691232ea86fe9a3c67a546a2b8582"
        checksum-type="md5" size="10775"
        path="src/pycrypto-2.3.tww.patch"/>
    </sources>

    <dependencies>
      <depend program="gmp" var="LIBGMP"
        install-name="libgmp43">v&gt;=4.3.2</depend>
      <depend program="prngd" var="PRNGD" install-name="prngd"
        systype="*-hpux11.[01]*|*-irix*|*-osf*">v&gt;=0.9.25</depend>
    </dependencies>

    <script-header>
<![CDATA[
_prngd_socket="${SB_VAR_PRNGD+/var${SB_VAR_PRNGD}/pool}"
]]>
    </script-header>

    <configure>
<![CDATA[
cat >setup.cfg <<_EOT_
[build_ext]
include_dirs=${SB_VAR_LIBGMP_INC}
library_dirs=${SB_VAR_LIBGMP_LIB}
rpath=${SB_VAR_LIBGMP_LIB}
_EOT_
]]>
    </configure>

    <build>
<![CDATA[
[ -n "${_prngd_socket}" ] && \
  ${SB_PATH_SED} -i -e "\
s|prngsocket =.*|prngsocket = \"${_prngd_socket}\"|" \
  lib/Crypto/Random/OSRNG/egd.py

${SB_VAR_PYTHON}/bin/python setup.py build
]]>
    </build>

    <test>
<![CDATA[
python setup.py test
]]>
    </test>

    <install>
<![CDATA[
${SB_VAR_PYTHON}/bin/python setup.py install --skip-build \
--install-lib=${_libdir} --prefix=${SB_INSTALL_PREFIX}

# install path for Python's include.paths.d
${SB_PATH_INSTALL} -m 755 -o root -g 0 -d \
${_libdir}/include.paths.d
cat >${_libdir}/include.paths.d/99-${SB_PROG_NAME} <<_EOT_
${_libdir}
_EOT_
]]>
    </install>

    <module name="default">
      <validate>
        <depend program="pycrypto" module="2.6.7">v==2.3</depend>
        <depend program="pycrypto" module="2.7.2">v==2.3</depend>
      </validate>

      <script-header>
<![CDATA[
_prngd_socket="${SB_VAR_PRNGD+/var${SB_VAR_PRNGD}/pool}"
]]>
      </script-header>

      <configure>
<![CDATA[
cat >setup.cfg <<_EOT_
[build_ext]
include_dirs=${SB_VAR_LIBGMP_INC}
library_dirs=${SB_VAR_LIBGMP_LIB}
rpath=${SB_VAR_LIBGMP_LIB}
_EOT_
]]>
      </configure>

      <build>
<![CDATA[
[ -n "${_prngd_socket}" ] && \
  ${SB_PATH_SED} -i -e "\
s|prngsocket =.*|prngsocket = \"${_prngd_socket}\"|" \
  lib/Crypto/Random/OSRNG/egd.py

${SB_VAR_PYTHON}/bin/python setup.py build
]]>
      </build>

      <test>
<![CDATA[
python setup.py test
]]>
      </test>

      <install>
<![CDATA[
${SB_VAR_PYTHON}/bin/python setup.py install --skip-build \
--install-lib=${_libdir} --prefix=${SB_INSTALL_PREFIX}

# install path for Python's include.paths.d
${SB_PATH_INSTALL} -m 755 -o root -g 0 -d \
${_libdir}/include.paths.d
cat >${_libdir}/include.paths.d/99-${SB_PROG_NAME} <<_EOT_
${_libdir}
_EOT_
]]>
      </install>

      <uninstall>
<![CDATA[
rm -rf ${SB_INSTALL_PREFIX}
]]>
      </uninstall>
    </module>

    <module name="2.7.2">
      <dependencies replace="0">
        <depend program="python" var="PYTHON" install-name="python27"
          add-path="prepend">v&gt;=2.7.2</depend>
        <depend program="gcc" install-name="gcc44" add-path="prepend"
          type="build">v&gt;=4.4.6</depend>
      </dependencies>

      <script-header replace="0">
<![CDATA[
_pysubdir="python27"

_libdir="${SB_INSTALL_PREFIX_LIB}/${_pysubdir}"
]]>
      </script-header>

      <configure>
<![CDATA[
cat >setup.cfg <<_EOT_
[build_ext]
include_dirs=${SB_VAR_LIBGMP_INC}
library_dirs=${SB_VAR_LIBGMP_LIB}
rpath=${SB_VAR_LIBGMP_LIB}
_EOT_
]]>
      </configure>

      <build>
<![CDATA[
[ -n "${_prngd_socket}" ] && \
  ${SB_PATH_SED} -i -e "\
s|prngsocket =.*|prngsocket = \"${_prngd_socket}\"|" \
  lib/Crypto/Random/OSRNG/egd.py

${SB_VAR_PYTHON}/bin/python setup.py build
]]>
      </build>

      <test>
<![CDATA[
python setup.py test
]]>
      </test>

      <install>
<![CDATA[
${SB_VAR_PYTHON}/bin/python setup.py install --skip-build \
--install-lib=${_libdir} --prefix=${SB_INSTALL_PREFIX}

# install path for Python's include.paths.d
${SB_PATH_INSTALL} -m 755 -o root -g 0 -d \
${_libdir}/include.paths.d
cat >${_libdir}/include.paths.d/99-${SB_PROG_NAME} <<_EOT_
${_libdir}
_EOT_
]]>
      </install>
    </module>

    <module name="2.6.7">
      <dependencies replace="0">
        <depend program="python" var="PYTHON" install-name="python26"
          add-path="prepend">v&gt;=2.6.7</depend>
        <depend program="gcc" install-name="gcc44" add-path="prepend"
          type="build">v&gt;=4.4.6</depend>
      </dependencies>

      <script-header replace="0">
<![CDATA[
_pysubdir="python26"

_libdir="${SB_INSTALL_PREFIX_LIB}/${_pysubdir}"
]]>
      </script-header>

      <configure>
<![CDATA[
cat >setup.cfg <<_EOT_
[build_ext]
include_dirs=${SB_VAR_LIBGMP_INC}
library_dirs=${SB_VAR_LIBGMP_LIB}
rpath=${SB_VAR_LIBGMP_LIB}
_EOT_
]]>
      </configure>

      <build>
<![CDATA[
[ -n "${_prngd_socket}" ] && \
  ${SB_PATH_SED} -i -e "\
s|prngsocket =.*|prngsocket = \"${_prngd_socket}\"|" \
  lib/Crypto/Random/OSRNG/egd.py

${SB_VAR_PYTHON}/bin/python setup.py build
]]>
      </build>

      <test>
<![CDATA[
python setup.py test
]]>
      </test>

      <install>
<![CDATA[
${SB_VAR_PYTHON}/bin/python setup.py install --skip-build \
--install-lib=${_libdir} --prefix=${SB_INSTALL_PREFIX}

# install path for Python's include.paths.d
${SB_PATH_INSTALL} -m 755 -o root -g 0 -d \
${_libdir}/include.paths.d
cat >${_libdir}/include.paths.d/99-${SB_PROG_NAME} <<_EOT_
${_libdir}
_EOT_
]]>
      </install>
    </module>

    <licenses>
      <license>
        <para>Copyright and licensing of the Python Cryptography
Toolkit ("PyCrypto"):</para>
        <para>Previously, the copyright and/or licensing status of the
Python Cryptography Toolkit ("PyCrypto") had been somewhat ambiguous.
The original intention of Andrew M. Kuchling and other contributors
has been to dedicate PyCrypto to the public domain, but that intention
was not necessarily made clear in the original disclaimer (see
LEGAL/copy/LICENSE.orig).</para>
        <para>Additionally, some files within PyCrypto had specified
their own licenses that differed from the PyCrypto license itself.
For example, the original RIPEMD.c module simply had a copyright
statement and warranty disclaimer, without clearly specifying any
license terms. (An updated version on the author's website came with a
license that contained a GPL-incompatible advertising clause.)</para>
        <para>To rectify this situation for PyCrypto 2.1, the
following steps have been taken:</para>
        <orderedlist>
          <item><para>Obtaining explicit permission from the original
contributors to dedicate their contributions to the public domain if
they have not already done so. (See the "LEGAL/copy/stmts" directory
for contributors' statements.)</para></item>
          <item><para>Replacing some modules with clearly-licensed
code from other sources (e.g. the DES and DES3 modules were replaced
with new ones based on Tom St. Denis's public-domain LibTomCrypt
library.)</para></item>
          <item><para>Replacing some modules with code written from
scratch (e.g. the RIPEMD and Blowfish modules were re-implemented from
their respective algorithm specifications without reference to the old
implementations).</para></item>
          <item><para>Removing some modules altogether without
replacing them.</para></item>
        </orderedlist>

        <para>To the best of our knowledge, with the exceptions noted
below or within the files themselves, the files that constitute
PyCrypto are in the public domain. Most are distributed with the
following notice:</para>
        <indent>
          <para>The contents of this file are dedicated to the public
domain. To the extent that dedication to the public domain is not
available, everyone is granted a worldwide, perpetual, royalty-free,
non-exclusive license to exercise all rights associated with the
contents of this file for any purpose whatsoever. No rights are
reserved.</para>
          <para>THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF
ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</para>
        </indent>

        <para>Exception:</para>
        <indent>
          <para>Portions of HMAC.py and setup.py are derived from
Python 2.2, and are therefore Copyright (c) 2001, 2002, 2003 Python
Software Foundation (All Rights Reserved). They are licensed by the
PSF under the terms of the Python 2.2 license. (See the file
LEGAL/copy/LICENSE.python-2.2 for details.)</para>
        </indent>

        <para>EXPORT RESTRICTIONS:</para>
        <indent>
          <para>Note that the export or re-export of cryptographic
software and/or source code may be subject to regulation in your
jurisdiction.</para>
        </indent>
      </license>
    </licenses>

    <notes>
      <note type="usage">
        <para>The pycrypto Python module is available in the following
directories:</para>
        <screen>
${SB_INSTALL_PREFIX}/lib/python26    # Python 2.6.7
${SB_INSTALL_PREFIX}/lib/python27    # Python 2.7.2
        </screen>

        <para>The directory is automatically added to the correct
Python include.paths.d directory by the postinstall script.</para>
      </note>
    </notes>
  </program>
</programs>
