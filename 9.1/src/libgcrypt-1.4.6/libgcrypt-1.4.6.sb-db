<?xml version="1.0"?>
<!DOCTYPE programs SYSTEM "sb-db.dtd">
<programs>
  <program name="libgcrypt" version="1.4.6" revision="1">
    <build-name>${SB_PROG_NAME}-${SB_PROG_VER}</build-name>

    <install-name>${SB_PROG_NAME}14</install-name>

    <sources>
      <source checksum="dbf99425a4fe9217c84ce3a35d938634"
        checksum-type="md5" size="1151877"
        path="src/libgcrypt-1.4.6.tar.bz2"/>
      <patch checksum="bcbd8563f28f6a4af50969228027c82d"
        checksum-type="md5" size="22074"
        path="src/libgcrypt-1.4.6.tww.patch"/>
      <patch checksum="1fe10ddf67820c6d753349a5c0e4f177"
        checksum-type="md5" size="1444852"
        path="src/libgcrypt-1.4.6.auto.patch"/>
    </sources>

    <dependencies>
      <depend program="pkgconfig" install-name="pkgconfig02"
        add-path="prepend" type="build">v&gt;=0.25</depend>
      <depend program="prngd" var="PRNGD" install-name="prngd"
        systype="*-hpux11.[01]*|*-irix*|*-osf*">v&gt;=0.9.25</depend>
    </dependencies>

    <script-header>
<![CDATA[
_docdir="${SB_INSTALL_PREFIX}/doc"
_datadir="${SB_INSTALL_PREFIX}/share"

_prngd_socket="${SB_VAR_PRNGD+/var${SB_VAR_PRNGD}/pool}"
]]>
    </script-header>

    <module name="default">
      <dependencies replace="0">
        <depend program="libgpg-error" var="LIBGPG_ERROR"
          install-name="libgpgerror110">v&gt;=1.10</depend>
      </dependencies>

      <validate>
        <depend program="libgcrypt" module="64bit"
          systype="*-aix*|*-hpux*|*-irix*|*-solaris*">v==1.4.6</depend>
      </validate>

      <script-header>
<![CDATA[
_docdir="${SB_INSTALL_PREFIX}/doc"
_datadir="${SB_INSTALL_PREFIX}/share"

_prngd_socket="${SB_VAR_PRNGD+/var${SB_VAR_PRNGD}/pool}"
]]>
      </script-header>

      <configure>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc CFLAGS="-O2 -qro -qroconst -qmaxmem=-1 -qarch=ppc"
  CC_LD_RT="-Wl,-blibpath:"
  LDFLAGS="-Wl,-brtl -Wl,-blibpath:/usr/lib" ;;
ia64*-hpux*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+b," ;;
*-hpux11.[01]*)
  CC=cc CFLAGS="-Ae -z +O2 +ESlit +Ofltacc +DAportable \
+Oentrysched +Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+s,+b," ;;
*-hpux*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+s,+b," ;;
*-irix*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1429 \
-use_readonly_const -G0 -rdata_shared -DEBUG:optimize_space=ON \
-O2 -OPT:Olimit=0"
  CC_LD_RT="-Wl,-rpath," ;;
*-freebsd*)
  CFLAGS="-O2 -mtune=pentium4 -march=pentium4"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-linux*)
  CFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"
  CC_LD_RT="-Wl,-rpath," ;;
*-linux*)
  CC_LD_RT="-Wl,-rpath," ;;
*-osf*)
  CC=cc CFLAGS="-O2 -arch ev5 -msym -readonly_strings"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=pentium4"
  CC_LD_RT="-R"

  ARGS="--disable-asm" ;;
*-solaris2.8)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-xarch=v8plusa"
  CC_LD_RT="-R" ;;
*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-m32 -xarch=sparcvis"
  CC_LD_RT="-R" ;;
esac

${SHELL} ./configure CC="${CC:-gcc}" CFLAGS="${CFLAGS:--O2}" \
LDFLAGS="${LDFLAGS+${LDFLAGS}}" \
PKG_CONFIG_PATH="${SB_VAR_LIBGPG_ERROR_LIB}/pkgconfig" \
--disable-padlock-support \
${SB_VAR_PRNGD+--disable-dev-random} \
${SB_VAR_PRNGD+--with-egd-socket=${_prngd_socket}} \
${SB_VAR_PRNGD+--enable-random=egd} \
${ARGS+${ARGS}} --disable-dependency-tracking \
--datarootdir=${_datadir} --datadir=${_datadir} \
--infodir="${SB_INSTALL_PREFIX}/info" \
--libdir=${SB_INSTALL_PREFIX_LIB} \
--prefix=${SB_INSTALL_PREFIX}

gmake configure

${SB_PATH_SED} -i -e "\
s!-L\(\$libdir\)!-L\1 ${CC_LD_RT}\1!" src/libgcrypt-config

${SB_PATH_SED} -i -e "\
s!-L\(\${libdir}\)!-L\1 ${CC_LD_RT}\1!" src/libgcrypt.pc
]]>
      </configure>

      <test auto-include="0">
<![CDATA[
if [ "${SB_VAR_PRNGD+set}" = set ]; then
  export EGD_SOCKET_PATH="/var/opt/fsw/prngd/pool"
fi

gmake check
]]>
      </test>

      <install>
<![CDATA[
gmake install

rmdir ${SB_INSTALL_PREFIX}/sbin || :

${SB_PATH_INSTALL} -m 755 -o root -g 0 -d ${_docdir}/texinfo
${SB_PATH_INSTALL} -m 644 -o root -g 0 doc/gcrypt.texi \
doc/version.texi doc/lgpl.texi doc/gpl.texi ${_docdir}/texinfo
]]>
      </install>
    </module>

    <module name="64bit"
    systype="*-aix*|*-hpux*|*-irix*|*-solaris*">
      <dependencies replace="0">
        <depend program="libgpg-error" var="LIBGPG_ERROR"
          install-name="libgpgerror110"
          module="64bit">v&gt;=1.10</depend>
      </dependencies>

      <script-header replace="0">
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  _libdir="lib/ppc64" ;;
ia64*-hpux*)
  _libdir="lib/hpux64" ;;
*-hpux11*)
  _libdir="lib/pa20_64" ;;
*-irix*)
  _libdir="lib64" ;;
i?86*-solaris*)
  _libdir="lib/amd64" ;;
*-solaris*)
  _libdir="lib/sparcv9" ;;
esac

case "${SB_SYSTYPE}" in
*-aix*)
  export OBJECT_MODE=64 ;;
esac
]]>
      </script-header>

      <configure>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc CFLAGS="-O2 -qro -qroconst -q64 -qmaxmem=-1"
  CC_LD_RT="-Wl,-blibpath:"
  LDFLAGS="-Wl,-brtl -Wl,-blibpath:/usr/lib"

  ARGS="--disable-asm" ;;
ia64*-hpux*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched +DD64 \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+b," ;;
*-hpux*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched +DD64 \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+s,+b,"

  case "${SB_SYSTYPE}" in
  *-hpux11.31)
    ARGS="--build=hppa64-hp-hpux11.31" ;;
  *-hpux11.23)
    ARGS="--build=hppa64-hp-hpux11.23" ;;
  *-hpux11.11)
    ARGS="--build=hppa64-hp-hpux11.11" ;;
  *-hpux11.00)
    ARGS="--build=hppa64-hp-hpux11.00" ;;
  esac

  ARGS="${ARGS} --disable-asm" ;;
*-irix*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1429 \
-use_readonly_const -G0 -rdata_shared -DEBUG:optimize_space=ON \
-64 -mips4 -O2 -OPT:Olimit=0"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=opteron -m64 \
-xarch=sse2"
  CC_LD_RT="-R"

  ARGS="--disable-asm" ;;
*-solaris2.8)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=generic -xarch=v9"
  CC_LD_RT="-R"

  ARGS="--disable-asm" ;;
*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=generic -m64 \
-xarch=sparc"
  CC_LD_RT="-R"

  ARGS="--disable-asm" ;;
esac

${SHELL} ./configure CC="${CC:-gcc}" CFLAGS="${CFLAGS:--O2}" \
LDFLAGS="${LDFLAGS+${LDFLAGS}}" \
PKG_CONFIG_PATH="${SB_VAR_LIBGPG_ERROR}/${_libdir}/pkgconfig" \
--disable-padlock-support \
${SB_VAR_PRNGD+--disable-dev-random} \
${SB_VAR_PRNGD+--with-egd-socket=${_prngd_socket}} \
${SB_VAR_PRNGD+--enable-random=egd} \
${ARGS+${ARGS}} --disable-dependency-tracking  \
--datarootdir=${_datadir} --datadir=${_datadir} \
--libdir="${SB_INSTALL_PREFIX}/${_libdir}" \
--prefix=${SB_INSTALL_PREFIX}

gmake configure

${SB_PATH_SED} -i -e "\
s!-L\(\${libdir}\)!-L\1 ${CC_LD_RT}\1!" src/libgcrypt.pc
]]>
      </configure>

      <test auto-include="0">
<![CDATA[
if [ "${SB_VAR_PRNGD+set}" = set ]; then
  export EGD_SOCKET_PATH="/var/opt/fsw/prngd/pool"
fi

gmake check
]]>
      </test>

      <install>
<![CDATA[
if [ ! -d ${SB_INSTALL_PREFIX}/lib/64 ]; then
  case "${SB_SYSTYPE}" in
  *-aix*|*-hpux*|*-solaris*)
    ln -s ./$(basename ${_libdir}) ${SB_INSTALL_PREFIX}/lib/64 ;;
  *-irix*)
    ln -s ../lib64 ${SB_INSTALL_PREFIX}/lib/64 ;;
  esac
fi

gmake -C src install-pkgconfigDATA install-libLTLIBRARIES
]]>
      </install>

      <uninstall>
<![CDATA[
rm -rf ${SB_INSTALL_PREFIX}/${_libdir}
]]>
      </uninstall>
    </module>

    <licenses>
      <license path="gpl-2.license"/>
    </licenses>

    <notes>
      <change from="1.4.5" to="1.4.6">
        <item><para>New variants of the TIGER algorithm</para></item>
        <item><para>New cipher algorithm mode for
AES-WRAP</para></item>
        <item><para>Interface changes relative to the 1.4.2
release:</para>
        <screen>
GCRY_MD_TIGER1             NEW
GCRY_MD_TIGER2             NEW
GCRY_CIPHER_MODE_AESWRAP   NEW
        </screen></item>
      </change>

      <change from="1.4.4" to="1.4.5">
        <item><para>Fixed minor memory leak in DSA key
generation</para></item>
        <item><para>No more switching to FIPS mode if /proc/version is
not readable</para></item>
        <item><para>Fixed a sigill during Padlock detection on old
CPUs</para></item>
        <item><para>Fixed a hang on some W2000 machines</para></item>
        <item><para>Boosted SHA-512 performance by 30% on ia32 boxes and
gcc 4.3; SHA-256 went up by 25%</para></item>
      </change>

      <change from="1.4.3" to="1.4.4">
        <item><para>Publish GCRY_MODULE_ID_USER and
GCRY_MODULE_ID_USER_LAST constants. This functionality has been in
Libgcrypt since 1.3.0. </para></item>
        <item><para>MD5 may now be used in non-enforced fips
mode.</para></item>
        <item><para>Fixed HMAC for SHA-384 and SHA-512 with keys longer
than 64 bytes.</para></item>
        <item><para>In fips mode, RSA keys are now generated using the
X9.31 algorithm and DSA keys using the FIPS 186-2 algorithm.</para></item>
        <item><para>The transient-key flag is now also supported for DSA
key generation.  DSA domain parameters may be given as well.</para></item>
      </change>

      <change from="1.4.2" to="1.4.3">
        <item><para>Try to auto-initialize Libgcrypt to minimize the
effect of applications not doing that correctly. This is not a perfect
solution but given that many applicationion would totally fail without
such a hack, we try to help at least with the most common
cases.</para></item>
        <item><para>Auto-initialize the secure memory to 32k instead
of aborting the process</para></item>
        <item><para>Log fatal errors via syslog</para></item>
        <item><para>Changed the name and the semantics of the fips
mode config file</para></item>
        <item><para>Add convenience macro
gcry_fips_mode_active</para></item>
        <item><para>More self-tests</para></item>
        <item><para>Documentation cleanups</para></item>
      </change>

      <change from="1.4.1" to="1.4.2">
        <item><para>The long missing gcry_mpi_lshift function has been
added</para></item>
        <item><para>RSA key generation now supports a "transient-key"
flag</para></item>
        <item><para>The keygrip computation for ECDSA has been
implemented thus ECDSA is now fully supported</para></item>
        <item><para>A few macros have been replaced by functions for
better type checking</para></item>
        <item><para>The thread initialization structure now carries
version information</para></item>
        <item><para>The manual describes more clearly how to
initialize Libgcrypt</para></item>
        <item><para>The library may now be switched into a FIPS
mode</para></item>
        <item><para>Interface changes relative to the 1.3.0
release:</para>
        <screen>
GCRYCTL_OPERATIONAL_P   NEW
GCRYCTL_FIPS_MODE_P     NEW
GCRYCTL_FORCE_FIPS_MODE NEW
gcry_cipher_setkey      NEW: Replaces macro
gcry_cipher_setiv       NEW: Replaces macro
gcry_cipher_setctr      NEW: Replaces macro
gcry_mpi_lshift         NEW
        </screen></item>
      </change>

      <change from="1.4.0" to="1.4.1">
        <item><para>Fixed a bug introduced by 1.3.1 which led to the
comsumption of far too much entropy for the intial
seeding</para></item>
        <item><para>Improved AES performance for CFB and CBC
modes</para></item>
        <item><para>Removed build problems for the Padlock
support</para></item>
      </change>

      <change from="1.3.2" to="1.4.0">
        <item><para>New configure option --disable-padlock-support
which is mostly useful in case of build problems</para></item>
      </change>

      <change from="1.3.1" to="1.3.2">
        <item><para>The visibility attribute is now used if supported
by the toolchain</para></item>
        <item><para>The ACE engine of VIA processors is now used for
AES-128</para></item>
        <item><para>The ASN.1 DER template for SHA-224 has been
fixed</para></item>
      </change>

      <change from="1.3.0" to="1.3.1">
        <item><para>The entire library is now under the LGPL. The
helper programs and the manual are under the GPL.</para></item>
        <item><para>The Camellia cipher is now under the LGPL and
included by default</para></item>
        <item><para>Fixed a bug in the detection of symbol prefixes
which inhibited the build of optimzied assembler code on certain
systems.</para></item>
        <item><para>Updated the entropy gatherer for W32</para></item>
      </change>

      <change from="1.2.x" to="1.3.0">
        <item><para>Changed the way the RNG gets initialized. This
allows to keep it uninitialized as long as no random numbers are used.
To override this, the new macro gcry_fast_random_poll may be used.  It
is in general a good idea to spread this macro into the application
code to make sure that these polls happen often enough.</para></item>
        <item><para>Made the RNG immune against fork without
exec.</para></item>
        <item><para>Reading and writing the random seed file is now
protected by a fcntl style file lock on systems that provide this
function.</para></item>
        <item><para>Support for SHA-224 and HMAC using SHA-384 and
SHA-512.</para></item>
        <item><para>Support for the SEED cipher</para></item>
        <item><para>Support for the Camellia cipher.  Note that
Camellia is disabled by default, and that enabling it changes the
license of libgcrypt from LGPL to GPL.</para></item>
        <item><para>Support for OFB encryption mode</para></item>
        <item><para>gcry_mpi_rshift does not anymore truncate the
shift count</para></item>
        <item><para>Reserved algorithm ranges for use by
applications</para></item>
        <item><para>Support for DSA2</para></item>
        <item><para>The new function gcry_md_debug should be used
instead of the gcry_md_start_debug and gcry_md_stop_debug
macros.</para></item>
        <item><para>New configure option --enable-random-daemon to
support a system wide random daemon.  The daemon code is experimental
and not yet very well working.  It will eventually allow to keep a
global random pool for the sake of short living
processes</para></item>
        <item><para>Non executable stack support is now used by
default on systems supporting it</para></item>
        <item><para>Support for Microsoft Windows</para></item>
        <item><para>Assembler support for the AMD64
architecture</para></item>
        <item><para>New configure option --enable-mpi-path for
optimized builds</para></item>
        <item><para>Experimental support for ECDSA; should only be
used for testing</para></item>
        <item><para>New control code GCRYCTL_PRINT_CONFIG to print the
build configuration</para></item>
        <item><para>Minor changes to some function declarations.
Buffer arguments are now typed as void pointer.  This should not
affect any compilation. Fixed two bugs in return values and clarified
documentation.</para></item>
        <item><para>Interface changes relative to the 1.2.0
release:</para>
        <screen>
gcry_fast_random_poll      NEW
gcry_md_debug              NEW
gcry_sexp_nth_string       NEW
GCRY_MD_SHA224             NEW
GCRY_PK_USAGE_CERT         NEW
GCRY_PK_USAGE_AUTH         NEW
GCRY_PK_USAGE_UNKN         NEW
GCRY_PK_ECDSA              NEW
GCRY_CIPHER_SEED           NEW
GCRY_CIPHER_CAMELLIA128    NEW
GCRY_CIPHER_CAMELLIA192    NEW
GCRY_CIPHER_CAMELLIA256    NEW
GCRYCTL_FAKED_RANDOM_P     NEW 
GCRYCTL_PRINT_CONFIG       NEW
GCRYCTL_SET_RNDEGD_SOCKET  NEW
gcry_mpi_scan              CHANGED: Argument BUFFER is now void*
gcry_pk_algo_name          CHANGED: Returns "?" instead of NULL
gcry_cipher_algo_name      CHANGED: Returns "?" instead of ""
gcry_pk_spec_t             CHANGED: Element ALIASES is now const ptr
gcry_md_write_t            CHANGED: Argument BUF is now a const void*
gcry_md_ctl                CHANGED: Argument BUFFER is now void*
gcry_cipher_encrypt        CHANGED: Arguments IN and OUT are now void*
gcry_cipher_decrypt        CHANGED: Arguments IN and OUT are now void*
gcry_sexp_sprint           CHANGED: Argument BUFFER is now void*
gcry_create_nonce          CHANGED: Argument BUFFER is now void*
gcry_randomize             CHANGED: Argument BUFFER is now void*
gcry_cipher_register       CHANGED: Argument ALGORITHM_ID is now int*
        </screen></item>
      </change>
    </notes>
  </program>
</programs>
