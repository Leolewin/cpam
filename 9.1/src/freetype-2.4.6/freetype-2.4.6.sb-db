<?xml version="1.0"?>
<!DOCTYPE programs SYSTEM "sb-db.dtd">
<programs>
  <program name="freetype" version="2.4.6" revision="2">
    <build-name>${SB_PROG_NAME}-${SB_PROG_VER}</build-name>

    <install-name>libttf24</install-name>

    <sources>
      <source checksum="5e6510613f612809d2d7862592b92ab7"
        checksum-type="md5" size="1487579"
        path="src/freetype-2.4.6.tar.bz2"/>
      <patch checksum="729855b21197096b2b4e809e23ecafd0"
        checksum-type="md5" size="1161"
        path="src/freetype-2.4.6.CVE-2010-3311.patch"/>
      <patch checksum="7c753b04620205da0677195e61b8d246"
        checksum-type="md5" size="3359"
        path="src/freetype-2.4.6.CVE-2011-3256.patch"/>
      <patch checksum="7ced8dfcc2ccf3fd55c8e236b648826a"
        checksum-type="md5" size="2063"
        path="src/freetype-2.4.6.CVE-2011-3439.patch"/>
      <patch checksum="e1c9d8950a14acc9089d38d559e3d981"
        checksum-type="md5" size="7244"
        path="src/freetype-2.4.6.tww.patch"/>
      <patch checksum="3109e2ba873f434e8ad283084e800ac6"
        checksum-type="md5" size="1574758"
        path="src/freetype-2.4.6.auto.patch"/>
      <source checksum="7d777ed105ec393170e007203fa1bbbe"
        checksum-type="md5" size="163000"
        path="src/ft2demos-2.4.6.tar.bz2"
        destdir="freetype-2.4.6"/>
      <patch checksum="a8ec484240e08510d77b0194cf5e509e"
        checksum-type="md5" size="2967"
        path="src/ft2demos-2.4.6.tww.patch"
        destdir="ft2demos-2.4.6"/>
      <source checksum="e9ba39c2ca46e887e995d70f03284188"
        checksum-type="md5" size="106666"
        path="src/freetype-doc-2.4.6.tar.bz2"
        noop="1" var="DOCS"/>
    </sources>

    <dependencies>
      <depend program="make" add-path="prepend">v==3.82</depend>
      <depend program="perl" add-path="prepend"
        type="build">v==5.12.2</depend>
    </dependencies>

    <script-header>
<![CDATA[
_datadir="${SB_INSTALL_PREFIX}/share"
_docdir="${SB_INSTALL_PREFIX}/doc"
]]>
    </script-header>

    <module name="default">
      <dependencies replace="0">
        <depend program="bzip2" var="BZIP2"
          install-name="bzip210">v&gt;=1.0.6</depend>
        <depend program="zlib" var="LIBZ"
          install-name="libz12">v&gt;=1.2.5</depend>
      </dependencies>

      <validate>
        <depend program="freetype" module="64bit"
          systype="*-aix*|*-hpux*|*-irix*|*-solaris*">v==2.4.6</depend>
      </validate>

      <script-header>
<![CDATA[
_datadir="${SB_INSTALL_PREFIX}/share"
_docdir="${SB_INSTALL_PREFIX}/doc"
]]>
      </script-header>

      <configure>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc CFLAGS="-O2 -qro -qroconst -qmaxmem=-1 -qarch=ppc"
  LDFLAGS="-Wl,-brtl -Wl,-blibpath:/usr/lib"
  CC_LD_RT="-Wl,-blibpath:" ;;
ia64*-hpux*)
  CC=cc CFLAGS="+O2 +Onofltacc +Olit=all +Onoentrysched \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+b," ;;
*-hpux11.[01]*)
  CC=cc CFLAGS="-Ae +O2 +Onofltacc +ESlit +DAportable \
+Onoentrysched +Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+s,+b," ;;
*-hpux*)
  CC=cc CFLAGS="+O2 +Onofltacc +Olit=all +Onoentrysched \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+s,+b," ;;
*-irix*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1429 \
-use_readonly_const -G0 -rdata_shared -DEBUG:optimize_space=ON \
-O2 -OPT:Olimit=0"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-linux*)
  CFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"
  CC_LD_RT="-Wl,-rpath," ;;
*-linux*)
  CC_LD_RT="-Wl,-rpath," ;;
*-osf*)
  CC=cc CFLAGS="-O2 -arch ev5 -msym -readonly_strings"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=pentium4"
  CC_LD_RT="-R" ;;
*-solaris2.8)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-xarch=v8plusa"
  CC_LD_RT="-R" ;;
*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-m32 -xarch=sparcvis"
  CC_LD_RT="-R" ;;
esac

GNUMAKE=gmake ${SHELL} ./configure CC="${CC:-gcc}" \
CFLAGS="${CFLAGS:--O2}" \
CPPFLAGS="${SB_VAR_BZIP2+-I${SB_VAR_BZIP2_INC}} \
${SB_VAR_LIBZ+-I${SB_VAR_LIBZ_INC}}" \
LDFLAGS="${SB_VAR_BZIP2+-L${SB_VAR_BZIP2_LIB} \
${CC_LD_RT}${SB_VAR_BZIP2_LIB}} \
${SB_VAR_LIBZ+-L${SB_VAR_LIBZ_LIB} \
${CC_LD_RT}${SB_VAR_LIBZ_LIB}} \
${LDFLAGS+${LDFLAGS}}" --datarootdir=${_datadir} \
--datadir=${_datadir} --enable-shared --enable-static \
${ARGS+${ARGS}} --prefix=${SB_INSTALL_PREFIX}

${SB_PATH_SED} -i -e "\
s!-L\(\${libdir}\)!-L\1 ${CC_LD_RT}\1!" \
builds/unix/freetype2.pc

${SB_PATH_SED} -i -e "\
s|hardcode_libdir_flag_spec=.*|\
hardcode_libdir_flag_spec='${CC_LD_RT}${SB_INSTALL_PREFIX_LIB}'|" \
builds/unix/freetype-config
]]>
      </configure>

      <build>
<![CDATA[
case "${SB_SYSTYPE}" in
x86_64*-linuxe4)
  _x11dir_inc="/usr/X11R6/include"
  _x11dir_lib="/usr/X11R6/lib64" ;;
*-linuxe4)
  _x11dir_inc="/usr/X11R6/include"
  _x11dir_lib="/usr/X11R6/lib" ;;
*-solaris*)
  _x11dir_inc="/usr/openwin/include"
  _x11dir_lib="/usr/openwin/lib" ;;
esac

gmake

# build demos
(cd ft2demos-${SB_PROG_VER}
 gmake ${_x11dir_inc+X11_INCLUDE="${_x11dir_inc}"} \
 ${_x11dir_lib+X11_LIB="${_x11dir_lib}"} TOP_DIR="..")
]]>
      </build>

      <install>
<![CDATA[
gmake install

# install documentation
${SB_PATH_INSTALL} -m 755 -o root -g 0 -d ${_docdir}
(cd ${SB_INSTALL_PREFIX}
${SB_PATH_TAR} jxf ${SB_SRC_DOCS}
mv ${SB_PROG_NAME}-${SB_PROG_VER}/docs/* ${_docdir} && \
rm -rf ${SB_PROG_NAME}-${SB_PROG_VER}
${SB_PATH_CHOWN} -hR 0:0 ${_docdir})

# install demos
(cd ft2demos-${SB_PROG_VER}
 for _demo in ftbench ftchkwd ftdiff ftdump ftgamma ftgrid ftlint \
 ftmemchk ftmulti ftstring ftvalid ftview; do
   echo ${SB_BUILD_PREFIX}/builds/unix/libtool --mode=install \
   ${SB_PATH_INSTALL} -c -m 755 bin/${_demo} ${SB_INSTALL_PREFIX}/bin
   ${SB_BUILD_PREFIX}/builds/unix/libtool --mode=install \
   ${SB_PATH_INSTALL} -c -m 755 bin/${_demo} ${SB_INSTALL_PREFIX}/bin
 done)
]]>
      </install>
    </module>

    <module name="64bit"
    systype="*-aix*|*-hpux*|*-irix*|*-solaris*">
      <dependencies replace="0">
        <depend program="bzip2" var="BZIP2" install-name="bzip210"
          module="64bit">v&gt;=1.0.6</depend>
        <depend program="zlib" var="LIBZ" install-name="libz12"
          module="64bit">v&gt;=1.2.5</depend>
      </dependencies>

      <script-header replace="0">
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  _libdir=lib/ppc64 ;;
ia64*-hpux*)
  _libdir=lib/hpux64 ;;
*-hpux*)
  _libdir=lib/pa20_64 ;;
*-irix*)
  _libdir=lib64 ;;
i?86*-solaris*)
  _libdir=lib/amd64 ;;
*-solaris*)
  _libdir=lib/sparcv9 ;;
esac

case "${SB_SYSTYPE}" in
*-aix*)
  export OBJECT_MODE=64 ;;
esac
]]>
      </script-header>

      <configure>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc CFLAGS="-O2 -q64 -qro -qroconst -qmaxmem=-1"
  CC_LD_RT="-Wl,-blibpath:"
  LDFLAGS="-Wl,-brtl -Wl,-blibpath:/usr/lib" ;;
ia64*-hpux*)
  CC=cc CFLAGS="+O2 +Onofltacc +Olit=all +Oentrysched +DD64 \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+b," ;;
*-hpux*)
  CC=cc CFLAGS="+O2 +Onofltacc +Olit=all +Oentrysched +DD64 \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+s,+b,"

  case "${SB_SYSTYPE}" in
  *-hpux11.31)
    ARGS="--build=hppa64-hp-hpux11.31" ;;
  *-hpux11.23)
    ARGS="--build=hppa64-hp-hpux11.23" ;;
  *-hpux11.11)
    ARGS="--build=hppa64-hp-hpux11.11" ;;
  *-hpux11.00)
    ARGS="--build=hppa64-hp-hpux11.00" ;;
  esac ;;
*-irix*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1429 \
-use_readonly_const -G0 -rdata_shared -DEBUG:optimize_space=ON \
-64 -mips4 -O2 -OPT:Olimit=0"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -m64"
  CC_LD_RT="-R" ;;
*-solaris2.8)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=generic -xarch=v9"
  CC_LD_RT="-R" ;;
*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=generic -m64 \
-xarch=sparc"
  CC_LD_RT="-R" ;;
esac

GNUMAKE=gmake ${SHELL} ./configure CC="${CC:-gcc}" \
CFLAGS="${CFLAGS:--O2}" CPPFLAGS="-I${SB_VAR_BZIP2_INC} \
-I${SB_VAR_LIBZ_INC}" LDFLAGS="-L${SB_VAR_BZIP2}/${_libdir} \
-L${SB_VAR_LIBZ}/${_libdir} ${LDFLAGS+${LDFLAGS}}" \
--datarootdir=${_datadir} --datadir=${_datadir} \
--enable-shared --enable-static \
--libdir=${SB_INSTALL_PREFIX}/${_libdir} ${ARGS+${ARGS}} \
--prefix=${SB_INSTALL_PREFIX}

${SB_PATH_SED} -i -e "\
s!-L\(\${libdir}\)!-L\1 ${CC_LD_RT}\1!" \
builds/unix/freetype2.pc
]]>
      </configure>

      <install>
<![CDATA[
if [ ! -d ${SB_INSTALL_PREFIX}/lib/64 ]; then
  case "${SB_SYSTYPE}" in
  *-aix*|*-hpux*|*-solaris*)
    ln -s ./$(basename ${_libdir}) ${SB_INSTALL_PREFIX}/lib/64 ;;
  *-irix*)
    ln -s ../lib64 ${SB_INSTALL_PREFIX}/lib/64 ;;
  esac
fi

gmake install-lib
]]>
      </install>

      <uninstall>
<![CDATA[
rm -rf ${SB_INSTALL_PREFIX}/lib/64 ${SB_INSTALL_PREFIX}/${_libdir}
]]>
      </uninstall>
    </module>

    <licenses>
      <license>
        <para>The FreeType 2 font engine is copyrighted work and
cannot be used legally without a software license. In order to make
this project usable to a vast majority of developers, we distribute it
under two mutually exclusive open-source licenses.</para>
        <para>This means that *you* must choose *one* of the two
licenses described below, then obey all its terms and conditions when
using FreeType 2 in any of your projects or products.</para>
        <para>The FreeType License, found in the file `FTL.TXT',
which is similar to the original BSD license *with* an advertising
clause that forces you to explicitly cite the FreeType project in your
product's documentation. All details are in the license file. This
license is suited to products which don't use the GNU General Public
License.</para>
        <para>The GNU General Public License version 2, found in
`GPL.TXT' (any later version can be used also), for programs which
already use the GPL. Note that the FTL is incompatible with the GPL
due to its advertisement clause.</para>
        <para>The contributed BDF and PCF drivers come with a
license similar to that of the X Window System. It is compatible to
the above two licenses (see file src/bdf/README and
src/pcf/README).</para>
        <para>The gzip module uses the zlib license (see
src/gzip/zlib.h) which too is compatible to the above two
licenses.</para>
      </license>

      <license path="gpl-2.license"/>

      <license>
        <para>The FreeType Project LICENSE</para>
        <para>2006-Jan-27</para>
        <para>Copyright 1996-2002, 2006 by David Turner, Robert
Wilhelm, and Werner Lemberg</para>
        <para>Introduction</para>
        <para>The FreeType Project is distributed in several archive
packages; some of them may contain, in addition to the FreeType font
engine, various tools and contributions which rely on, or relate to,
the FreeType Project.</para>
        <para>This license applies to all files found in such
packages, and which do not fall under their own explicit license. The
license affects thus the FreeType font engine, the test programs,
documentation and makefiles, at the very least.</para>
        <para>This license was inspired by the BSD, Artistic, and
IJG (Independent JPEG Group) licenses, which all encourage inclusion
and use of free software in commercial and freeware products alike. As
a consequence, its main points are that:</para>
        <unorderedlist>
          <item><para>We don't promise that this software works.
However, we will be interested in any kind of bug reports. (`as is'
distribution)</para></item>
          <item><para>You can use this software for whatever you want,
in parts or full form, without having to pay us. (`royalty-free'
usage)</para></item>
          <item><para>You may not pretend that you wrote this
software. If you use it, or only parts of it, in a program, you must
acknowledge somewhere in your documentation that you have used the
FreeType code. (`credits')</para></item>
        </unorderedlist>

        <para>We specifically permit and encourage the inclusion of
this software, with or without modifications, in commercial products.
We disclaim all warranties covering The FreeType Project and assume no
liability related to The FreeType Project.</para>
        <para>Finally, many people asked us for a preferred form for a
credit/disclaimer to use in compliance with this license. We thus
encourage you to use the following text:</para>
        <screen>
"""
 Portions of this software are copyright (c) &lt;year&gt; The FreeType
 Project (www.freetype.org). All rights reserved.
"""
        </screen>

        <para>Please replace &lt;year&gt; with the value from the
FreeType version you actually use.</para>
        <para>Legal Terms</para>
        <orderedlist>
          <item><para>Definitions</para>
          <para>Throughout this license, the terms `package',
`FreeType Project', and `FreeType archive' refer to the set of files
originally distributed by the authors (David Turner, Robert Wilhelm,
and Werner Lemberg) as the `FreeType Project', be they named as alpha,
beta or final release.</para>
          <para>`You' refers to the licensee, or person using the
project, where `using' is a generic term including compiling the
project's source code as well as linking it to form a `program' or
`executable'. This program is referred to as `a program using the
FreeType engine'.</para>
          <para>This license applies to all files distributed in the
original FreeType Project, including all source code, binaries and
documentation, unless otherwise stated in the file in its original,
unmodified form as distributed in the original archive. If you are
unsure whether or not a particular file is covered by this license,
you must contact us to verify this.</para>
          <para>The FreeType Project is copyright (C) 1996-2000 by
David Turner, Robert Wilhelm, and Werner Lemberg. All rights reserved
except as specified below.</para></item>
          <item><para>No Warranty</para>
          <para>THE FREETYPE PROJECT IS PROVIDED `AS IS' WITHOUT
WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING, BUT NOT
LIMITED TO, WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE. IN NO EVENT WILL ANY OF THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY DAMAGES CAUSED BY THE USE OR THE INABILITY TO USE, OF
THE FREETYPE PROJECT.</para></item>
          <item><para>Redistribution</para>
          <para>This license grants a worldwide, royalty-free,
perpetual and irrevocable right and license to use, execute, perform,
compile, display, copy, create derivative works of, distribute and
sublicense the FreeType Project (in both source and object code forms)
and derivative works thereof for any purpose; and to authorize others
to exercise some or all of the rights granted herein, subject to the
following conditions:</para>
          <unorderedlist>
            <item><para>Redistribution of source code must retain this
license file (`FTL.TXT') unaltered; any additions, deletions or
changes to the original files must be clearly indicated in
accompanying documentation. The copyright notices of the unaltered,
original files must be preserved in all copies of source
files.</para></item>
            <item><para>Redistribution in binary form must provide a
disclaimer that states that the software is based in part of the work
of the FreeType Team, in the distribution documentation. We also
encourage you to put an URL to the FreeType web page in your
documentation, though this isn't mandatory.</para></item>
          </unorderedlist>
          <para>These conditions apply to any software derived from
or based on the FreeType Project, not just the unmodified files. If
you use our work, you must acknowledge us. However, no fee need be
paid to us.</para></item>
          <item><para>Advertising</para>
          <para>Neither the FreeType authors and contributors nor
you shall use the name of the other for commercial, advertising, or
promotional purposes without specific prior written permission.</para>
          <para>We suggest, but do not require, that you use one or
more of the following phrases to refer to this software in your
documentation or advertising materials: `FreeType Project', `FreeType
Engine', `FreeType library', or `FreeType Distribution'.</para>
          <para>As you have not signed this license, you are not
required to accept it. However, as the FreeType Project is copyrighted
material, only this license, or another one contracted with the
authors, grants you the right to use, distribute, and modify it.
Therefore, by using, distributing, or modifying the FreeType Project,
you indicate that you understand and accept all the terms of this
license.</para></item>
          <item><para>Contacts</para>
          <para>There are two mailing lists related to
FreeType:</para>
          <para>freetype@nongnu.org</para>
          <para>Discusses general use and applications of FreeType,
as well as future and wanted additions to the library and
distribution. If you are looking for support, start in this list if
you haven't found anything to help you in the documentation.</para>
          <para>freetype-devel@nongnu.org</para>
          <para>Discusses bugs, as well as engine internals, design
issues, specific licenses, porting, etc.</para>
          <para>Our home page can be found at</para>
          <para>http://www.freetype.org</para></item>
        </orderedlist>
      </license>
    </licenses>

    <notes>
      <change from="2.4.3" to="2.4.4">
        <items name="IMPORTANT BUG FIXES">
          <item><para>UVS support (TrueType/OpenType cmap format 14)
support is fixed. This regression has been introduced in version
2.4.0.</para></item>
        </items>

        <items name="MISCELLANEOUS">
          <item><para>Detect tricky fonts (e.g. MingLiU)  by the
lengths and checksums of Type42-persistent subtables (`cvt ', `fpgm',
and `prep') when a TrueType font without family name is given.  The
previous fix, introduced in 2.4.3,  was too rigorous,  causing many
subsetted fonts (mainly  from PDF files) displayed badly  because
FreeType forced  rendering with  the TrueType bytecode engine  instead
of the autohinter.</para></item>
          <item><para>Better support for 64bit
platforms.</para></item>
          <item><para>More fixes to improve handling of broken
fonts.</para></item>
        </items>
      </change>

      <change from="2.4.2" to="2.4.3">
        <items name="IMPORTANT BUG FIXES">
          <item><para>Fix rendering of certain cubic, S-shaped arcs.
This regression has been introduced in version 2.4.0.</para></item>
        </items>

        <items name="MISCELLANEOUS">
          <item><para>To  fix  the  above  mentioned  rendering
issue,  a  new spline flattening algorithm  has been  introduced which
speeds up both conic and cubic arcs.</para></item>
          <item><para>Handling of broken fonts has been further
improved.</para></item>
        </items>
      </change>

      <change from="2.4.1" to="2.4.2">
        <items name="IMPORTANT BUG FIXES">
          <item><para>A stack overflow in CFF Type2 CharStrings
interpreter is fixed.</para></item>
          <item><para>Handling Type 42 font deallocation was broken;
additionally, the library is now more robust against malformed Type 42
fonts.</para></item>
        </items>

        <items name="MISCELLANEOUS">
          <item><para>Two new functions, `FT_Reference_Library' (in
FT_MODULE_H) and `FT_Reference_Face' (in FT_FREETYPE_H), have been
added to simplify life-cycle management. A counter gets initialized to
1 at the time an FT_Library (or FT_Face) structure is created. The two
new functions increment the respective counter. `FT_Done_Library' and
`FT_Done_Face' then only destroy a library or face if the counter is
1, otherwise they simply decrement the counter.</para></item>
        </items>
      </change>

      <change from="2.4.0" to="2.4.1">
        <item><para>A serious bug in the  CFF font module prevented
display of many glyphs in CFF fonts like
`MinionPro-Regular.otf'.</para></item>
      </change>

      <change from="2.3.12" to="2.4.0">
        <items name="IMPORTANT CHANGES">
          <item><para>Since May 2010, all patents regarding the
TrueType bytecode interpreter have expired worldwide. Consequently, we
now define TT_CONFIG_OPTION_BYTECODE_INTERPRETER by default (and
undefine TT_CONFIG_OPTION_UNPATENTED_HINTING).</para></item>
          <item><para>A new function `FT_Library_SetLcdFilterWeights'
is available to adjust the filter weights set by
`FT_Library_SetLcdFilter'.</para></item>
        </items>

        <items name="MISCELLANEOUS">
          <item><para>Thanks to many reports, FreeType's stability in
handling broken or damaged fonts is much improved.</para></item>
          <item><para>Support for LCD filter control has been added to
the demo programs `ftdiff' and `ftview'.</para></item>
        </items>
      </change>

      <change from="2.3.11" to="2.3.12">
        <items name="IMPORTANT CHANGES">
          <item><para>For `FT_Open_Face', new parameters are available
to ignore preferred family names: FT_PARAM_TAG_IGNORE_PREFERRED_FAMILY
and FT_PARAM_TAG_IGNORE_PREFERRED_SUBFAMILY.</para></item>
        </items>

        <items name="MISCELLANEOUS">
          <item><para>Support for incremental font loading (controlled
with the FT_CONFIG_OPTION_INCREMENTAL macro) is now active by
default.</para></item>
          <item><para>Better support for vertical
metrics.</para></item>
          <item><para>Various minor bug fixes.</para></item>
        </items>
      </change>

      <change from="2.3.10" to="2.3.11">
        <item><para>Version 2.3.10 broke PCF support.</para></item>
      </change>

      <change from="2.3.9" to="2.3.10">
        <items name="IMPORTANT BUG FIXES">
          <item><para>If all ASCII digits in a font have the same
(unscaled) width, the autohinter respects this and won't change
it.</para></item>
          <item><para>TrueType fonts are now rasterized correctly if
the horizontal and vertical resolution differ.</para></item>
          <item><para>Type 1 fonts are now handled with increased
precision internally to avoid serious rounding issues if non-integral
coordinates are encountered.</para></item>
          <item><para>Horizontally condensed CFF fonts (using the font
matrix) were rendered incorrectly. This bug has been introduced after
release 2.3.5.</para></item>
        </items>

        <items name="IMPORTANT CHANGES">
          <item><para>Support for the SFNT cmap 13 table format (as
defined by the new OpenType 1.6 specification) has been
added.</para></item>
          <item><para>B/W rasterization of well-hinted TrueType fonts
at small sizes has been greatly improved.</para></item>
          <item><para>Calculation of vertical metrics in OpenType
fonts has been improved.</para></item>
        </items>

        <items name="MISCELLANEOUS">
          <item><para>It is now possible to change the emboldening
factor in the `ftview' demo program with keys `e' and
`E'.</para></item>
          <item><para>It is now possible to change the slant value in
the `ftview' demo program with keys `s' and `S'.</para></item>
          <item><para>The 5-levels grayscale mode of the `ftraster'
module (which FreeType doesn't use by default) was broken since
version 2.3.0.</para></item>
          <item><para>Compilation of the `ftgrays' and `ftraster'
modules was broken in stand-alone mode.</para></item>
          <item><para>Various fixes for compilation on 64bit and 16bit
architectures.</para></item>
        </items>
      </change>

      <change from="2.3.8" to="2.3.9">
        <items name="IMPORTANT BUG FIXES">
          <item><para>Very unfortunately, FreeType 2.3.8 contained a
change that broke its official ABI. The end result is that programs
compiled against previous versions of the library, but dynamically
linked to 2.3.8 can experience memory corruption if they call the
`FT_Get_PS_Font_Info' function.</para>
          <para>We recommend all users to upgrade to 2.3.9 as soon
as possible, or to downgrade to a previous release of the library if
this is not an option.</para>
          <para>The origin of the bug is that a new field was added
to the publicly defined `PS_FontInfoRec' structure. Unfortunately,
objects of this type can be stack or heap allocated by callers of
`FT_Get_PS_Font_Info', resulting in a memory buffer overwrite with its
implementation in 2.3.8.</para>
          <para>If you want to know whether your code is vulnerable
to this issue, simply search for the substrings `PS_FontInfo' and
`PS_Font_Info' in your source code. If none is found, your code is
safe and is not affected.</para>
          <para>The FreeType team apologizes for the
problem.</para></item>
          <item><para>The POSIX support of MacOS resource-fork fonts
(Suitcase fonts and LaserWriter Type1 PostScript fonts) was broken in
2.3.8. If FreeType2 is built without Carbon framework, these fonts are
not handled correctly. Version 2.4.6 didn't have this
bug.</para></item>
          <item><para>`FT_Get_Advance' (and `FT_Get_Advances')
returned bad values for almost all font formats except TrueType
fonts.</para></item>
          <item><para>Fix a bug in the SFNT kerning table
loader/parser which could crash the engine if certain malformed tables
were encountered.</para></item>
          <item><para>Composite SFNT bitmaps are now handled
correctly.</para></item>
        </items>

        <items name="IMPORTANT CHANGES">
          <item><para>The new functions
`FT_Get_CID_Is_Internally_CID_keyed' and `FT_Get_CID_From_Glyph_Index'
can be used to access CID-keyed CFF fonts via CID
values.</para></item>
        </items>

        <items name="MISCELLANEOUS">
          <item><para>`FT_Outline_Get_InsideBorder' returns
FT_STROKER_BORDER_RIGHT for empty outlines. This was incorrectly
documented.</para></item>
          <item><para>The `ftview' demo program now supports UTF-8
encoded strings.</para></item>
        </items>
      </change>

      <change from="2.4.6" to="2.3.8">
        <items name="IMPORTANT BUG FIXES">
          <item><para>CID-keyed fonts in an SFNT wrapper were not
handled correctly.</para></item>
          <item><para>The smooth renderer produced truncated images
(on the right) for outline parts with negative horizontal values. Most
fonts don't contain outlines left to the y coordinate axis, but the
effect was very noticeable for outlines processed with
FT_Glyph_Stroke, using thick strokes.</para></item>
          <item><para>`FT_Get_TrueType_Engine_Type' returned a wrong
value if both configuration macros
TT_CONFIG_OPTION_BYTECODE_INTERPRETER and
TT_CONFIG_OPTION_UNPATENTED_HINTING were defined.</para></item>
          <item><para>The `face_index' field in the `FT_Face'
structure wasn't initialized properly after calling FT_Open_Face and
friends with a positive face index for CFFs, WinFNTs, and, most
importantly, for TrueType Collections (TTCs).</para></item>
        </items>

        <items name="IMPORTANT CHANGES">
          <item><para>Rudimentary support for Type 1 fonts and
CID-keyed Type 1 fonts in an SFNT wrapper has been added -- such fonts
are used on the Mac. The core SFNT tables `TYP1' and `CID ' are passed
to the PS Type 1 and CID-keyed PS font drivers; other tables (`ALMX',
`BBOX', etc.) are not supported yet.</para></item>
          <item><para>A new interface to extract advance values of
glyphs without loading their outlines has been added. The functions
are called `FT_Get_Advance' and `FT_Get_Advances'; they are defined in
file `ftadvanc.h' (to be accessed as FT_ADVANCES_H).</para></item>
          <item><para>A new function `FT_Get_FSType_Flags' (in
FT_FREETYPE_H) has been contributed by David Bevan to access the
embedding and subsetting restriction information of
fonts.</para></item>
        </items>

        <items name="MISCELLANEOUS">
          <item><para>FT_MulFix is now an inlined function; by
default, assembler code is provided for x86 and ARM. See
FT_CONFIG_OPTION_INLINE_MULFIX and FT_CONFIG_OPTION_NO_ASSEMBLER (in
ftoption.h) for more.</para></item>
          <item><para>The handling of `tricky' fonts (this is, fonts
which don't work with the autohinter, needing the font format's
hinting engine) has been generalized and changed
slightly:</para>
          <unorderedlist>
            <item><para>A new face flag FT_FACE_FLAG_TRICKY indicates
that the font format's hinting engine is necessary for correct
rendering. The macro FT_IS_TRICKY can be used to check this
flag.</para></item>
            <item><para>FT_LOAD_NO_HINTING is now ignored for tricky
fonts. To really force raw loading of such fonts (without hinting),
both FT_LOAD_NO_HINTING and FT_LOAD_NO_AUTOHINT must be used -- this
is something which you probably never want to do.</para></item>
            <item><para>Tricky TrueType fonts always use the bytecode
interpreter, either the patented or unpatented version.</para></item>
          </unorderedlist></item>
          <item><para>The function `FT_GlyphSlot_Own_Bitmap' has been
moved from FT_SYNTHESIS_H to FT_BITMAP_H; it is now part of the
`official' API. (The functions in FT_SYNTHESIS_H are still subject to
change, however.)</para></item>
          <item><para>In the `ftdiff' demo program you can now toggle
the use of FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH with key
`a'.</para></item>
        </items>
      </change>
    </notes>

    <changelog>
      <change date="2012 January 5" revision="2"
      author="Albert Chin-A-Young" email="china@thewrittenword.com">
        <item><para>Apply patch for CVE-2011-3256 (<ulink url="http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-3256">http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-3256</ulink>).
FreeType allows remote attackers to execute arbitrary code or cause a
denial of service (memory corruption) via a crafted font, a different
vulnerability than CVE-2011-0226.</para></item>
        <item><para>Apply patch for CVE-2011-3439 (<ulink url="http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-3439">http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-3439</ulink>).
FreeType allows remote attackers to execute arbitrary code or cause a
denial of service (memory corruption) via a crafted font in a
document.</para></item>
      </change>
    </changelog>
  </program>
</programs>
