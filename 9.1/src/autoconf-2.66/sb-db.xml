<?xml version="1.0"?>
<programs>
<!DOCTYPE programs SYSTEM "sb-db.dtd">
  <program name="autoconf" version="2.66" revision="2">
    <build-name>${SB_PROG_NAME}-${SB_PROG_VER}</build-name>

    <install-name>${SB_PROG_NAME}26</install-name>

    <sources>
      <source checksum="d2d22a532ee0e4d6d86a02e6425ecfce"
        checksum-type="md5" size="1363066"
        path="src/autoconf-2.66.tar.bz2"/>
      <patch checksum="f38634866774a9d4f354fa756be43dff"
        checksum-type="md5" size="1578"
        path="src/autoconf-2.66.solaris-sh-bug.patch"/>
      <patch checksum="2170444c19ac3cb77f09526d31aba2b8"
        checksum-type="md5" size="2629"
        path="src/autoconf-2.66.ac_check_sizeof-pointer-types.patch"/>
      <patch checksum="862041dc494f9cb251444410d64ee9d1"
        checksum-type="md5" size="2800"
        path="src/autoconf-2.66.ac_config_subdirs-multiple-args.patch"/>
      <patch checksum="fe2c8e1d78827a4f10e2d27137126bb2"
        checksum-type="md5" size="5029"
        path="src/autoconf-2.66.allow-question-AC_INIT-bugreport.patch"/>
      <patch checksum="1afbb3137ab41d77ab886c205e9ecdd1"
        checksum-type="md5" size="2192"
        path="src/autoconf-2.66.allow-=-AS_LITERAL_IF.patch"/>
      <patch checksum="6ff871bea6c1baec0fb00695a73063de"
        checksum-type="md5" size="933"
        path="src/autoconf-2.66.tww.patch"/>
    </sources>

    <dependencies>
      <depend program="gawk" install-name="gawk31"
        add-path="prepend">v&gt;=3.1.8</depend>
      <depend program="help2man" var="HELP2MAN"
        install-name="help2man138">v&gt;=1.38.2</depend>
      <depend program="m4" var="M4"
        install-name="m414">v&gt;=1.4.15</depend>
      <depend program="sed" install-name="sed42"
        add-path="prepend">v&gt;=4.2.1</depend>
      <depend program="perl" var="PERL">v==5.12.2</depend>
    </dependencies>

    <script-header>
<![CDATA[
_datadir="${SB_INSTALL_PREFIX}/share"
_docdir="${SB_INSTALL_PREFIX}/doc"
]]>
    </script-header>

    <configure>
<![CDATA[
${SHELL} ./configure M4=${_m4:-${SB_VAR_M4}/bin/gm4} \
PERL=${SB_VAR_PERL}/bin/perl \
HELP2MAN=${SB_VAR_HELP2MAN}/bin/help2man --datarootdir=${_datadir} \
--datadir=${_datadir} --infodir="${SB_INSTALL_PREFIX}/info" \
--mandir="${SB_INSTALL_PREFIX}/man" --prefix=${SB_INSTALL_PREFIX}
]]>
    </configure>

    <build>
<![CDATA[
gmake pkgdatadir=${_datadir}
]]>
    </build>

    <test auto-include="0">
<![CDATA[
gmake check
]]>
    </test>

    <install>
<![CDATA[
gmake install pkgdatadir=${_datadir}

${SB_PATH_INSTALL} -m 755 -o root -g 0 -d ${_docdir}/texinfo
${SB_PATH_INSTALL} -m 644 -o root -g 0 doc/autoconf.texi \
doc/fdl.texi doc/install.texi doc/make-stds.texi doc/standards.texi \
doc/version.texi ${_docdir}/texinfo
]]>
    </install>

    <licenses>
      <license>
        <para align="center" skip="0">AUTOCONF CONFIGURE SCRIPT
EXCEPTION</para>
        <para align="center">Version 3.0, 18 August 2009</para>
        <para>Copyright (C) 2009 Free Software Foundation, Inc. <ulink url="http://fsf.org/">http://fsf.org/</ulink> Everyone is permitted to
copy and distribute verbatim copies of this license document, but
changing it is not allowed.</para>
        <para>This Exception is an additional permission under section
7 of the GNU General Public License, version 3 ("GPLv3"). It applies
to a given file that bears a notice placed by the copyright holder of
the file stating that the file is governed by GPLv3 along with this
Exception.</para>
        <para>The purpose of this Exception is to allow distribution
of Autoconf's typical output under terms of the recipient's choice
(including proprietary).</para>
        <orderedlist start-num="0">
          <item><para>Definitions</para>
          <para>"Covered Code" is the source or object code of a
version of Autoconf that is a covered work under this License.</para>
          <para>"Normally Copied Code" for a version of Autoconf means
all parts of its Covered Code which that version can copy from its
code (i.e., not from its input file) into its minimally verbose,
non-debugging and non-tracing output.</para>
          <para>"Ineligible Code" is Covered Code that is not Normally
Copied Code.</para></item>
          <item><para>Grant of Additional Permission.</para>
          <para>You have permission to propagate output of Autoconf,
even if such propagation would otherwise violate the terms of GPLv3.
However, if by modifying Autoconf you cause any Ineligible Code of the
version you received to become Normally Copied Code of your modified
version, then you void this Exception for the resulting covered work.
If you convey that resulting covered work, you must remove this
Exception in accordance with the second paragraph of Section 7 of
GPLv3.</para></item>
          <item><para>No Weakening of Autoconf Copyleft.</para>
          <para>The availability of this Exception does not imply any
general presumption that third-party software is unaffected by the
copyleft requirements of the license of Autoconf.</para></item>
        </orderedlist>
      </license>

      <license path="gpl-2.license"/>

      <license path="gpl-3.license"/>
    </licenses>

    <notes>
      <change from="2.64" to="2.65">
        <item><para>Autoconf is now licensed under the General Public
License version 3 or later (GPLv3+). As with earlier versions, the
license includes an exception clause so that you may release a
configure script generated by autoconf under the license of your own
program.</para></item>
        <item><para>New macros to support Objective C++.</para>
        <screen>
AC_PROG_OBJCXX
AC_PROG_OBJCXXCPP
        </screen></item>
        <item><para>The following undocumented autoconf macros,
removed in Autoconf 2.64, have been reinstated:</para>
        <screen>
AH_CHECK_HEADERS
        </screen>
        <para>These macros are present only for backwards
compatibility purposes.</para></item>
        <item><para>The macro AC_LANG_COMPILER no longer fails on
embedded systems that lack fopen in the C library, such as AVR or
RTEMS (regression introduced in 2.64).</para></item>
        <item><para>The AC_FC_FREEFORM macro no longer suffers from a
whitespace bug that made it fail with some Fortran compilers
(regression introduced in 2.64).</para></item>
        <item><para>The AC_TYPE_UINT64_T and AC_TYPE_INT64_T macros
have been fixed to no longer mistakenly select a 32-bit type on some
compilers (bug present since macros were introduced in
2.59c).</para></item>
        <item><para>The AC_FUNC_MMAP macro has been fixed to be
portable to systems like Cygwin (bug present since macro was
introduced in 2.0).</para></item>
        <item><para>The following documented autotest macros are
new:</para>
        <screen>
AT_CHECK_EUNIT
        </screen></item>
        <item><para>The following m4sugar macros now quote their
expansion:</para>
        <screen>
m4_toupper
m4_tolower
        </screen></item>
        <item><para>The following m4sugar macros are new:</para>
        <screen>
m4_escape
        </screen></item>
        <item><para>The m4sugar macro m4_text_wrap now copes with
embedded quoting without requiring quadrigraphs. For uses like
AC_ARG_VAR([a], [[b c]]), this gives the intuitive behavior of "[b c]"
in the output (2.63 gave the output of "[b], [c]", and 2.64
encountered a failure).</para></item>
        <item><para>The '$tmp' temporary directory used in
config.status is documented for public use now.</para></item>
        <item><para>config.status now provides a --config option to
produce the configuration.</para></item>
        <item><para>Many cache variables used by Autoconf's macros are
now documented.</para></item>
        <item><para>Configure scripts work better on DJGPP by avoiding
a bug present in the DJGPP port of bash 2.04 in handling 'return' in a
shell function (regression introduced in 2.64).</para></item>
      </change>

      <change from="2.63b" to="2.64">
        <item><para>Autoconf now requires GNU M4 1.4.6 or later.
Earlier versions of M4 have a bug in regular expression handling that
interferes with some of the speedups provided since Autoconf 2.63.
GNU M4 1.4.13 or later is recommended.</para></item>
        <item><para>AS_IF and AS_CASE have been taught to avoid syntax
errors even when given arguments that expand to just
whitespace.</para></item>
        <item><para>The following documented autoconf macros are
new:</para>
        <screen>
AC_ERLANG_SUBST_ERTS_VER
        </screen></item>
        <item><para>The autoheader tool now understands m4 macro
arguments passed to AC_DEFINE and AC_DEFINE_UNQUOTED.</para></item>
        <item><para>Ensure AT_CHECK can support commands that include
a # given with proper m4 quoting. For shell comments, this is a new
feature; for non-shell comments, this fixes a regression introduced in
2.63b. Additionally, AT_CHECK correctly supplies shell escapes for
metacharacters occurring in m4 macro expansions within the expected
stdout and stderr parameters.</para></item>
        <item><para>The macro AT_CHECK now understands the concept of
hard failure. If a test exits with an unexpected status 99, cleanup
actions for the test are inhibited and the test is treated as a
failure regardless of AT_XFAIL_IF. It also understands the new
directives ignore-nolog, stdout-nolog, and stderr-nolog.</para></item>
        <item><para>The following documented autotest macros are
new:</para>
        <screen>
AT_CHECK_UNQUOTED
AT_FAIL_IF
AT_SKIP_IF
        </screen></item>
        <item><para>The following documented m4sugar macros are
new:</para>
        <screen>
m4_argn
m4_copy_force
m4_default_nblank
m4_default_nblank_quoted
m4_ifblank
m4_ifnblank
m4_rename_force
        </screen></item>
        <item><para>The autoconf testsuite now exercises all Erlang
macros.</para></item>
      </change>

      <change from="2.63" to="2.63b">
        <item><para>The manual is now shipped under the terms of the
GNU FDL 1.3.</para></item>
        <item><para>AC_REQUIRE now detects the case of an outer macro
which first expands then later indirectly requires the same inner
macro. Previously, this case led to silent out-of-order expansion
(bug present since 2.50); it now issues a syntax warning, and
duplicates the expansion of the inner macro to guarantee dependencies
have been met. See the manual for advice on how to refactor macros in
order to avoid the bug in earlier autoconf versions and avoid
increased script size in the current version.</para></item>
        <item><para>AC_DEFUN_ONCE has improved semantics. Previously,
a macro declared with AC_DEFUN_ONCE warned on a second invocation; and
out-of-order expansion was still possible. Now, dependencies are
guaranteed, and subsequent invocations are a silent no-op. This makes
AC_DEFUN_ONCE an ideal macro for silencing AC_REQUIRE
warnings.</para></item>
        <item><para>The following macros are now defined with
AC_DEFUN_ONCE. This means a subtle change in semantics; previously,
an AC_DEFUN macro could expand one of these macros multiple times or
surround the macro inside shell conditional text to bypass the effects
of these macros, but now the macro will expand exactly once, and prior
to the start of any enclosing AC_DEFUN macro:</para>
        <screen>
AC_CANONICAL_BUILD
AC_CANONICAL_HOST
AC_CANONICAL_TARGET
AC_HEADER_ASSERT
AC_PROG_INSTALL
AC_PROG_MKDIR_P
AC_USE_SYSTEM_EXTENSIONS
        </screen></item>
        <item><para>AC_LANG_ERLANG works once again (regression
introduced in 2.61a).</para></item>
        <item><para>AC_HEADER_ASSERT is fixed so that './configure
--enable-assert' no longer mistakenly disables
assertions.</para></item>
        <item><para>AC_INIT now takes an optional fifth parameter that
can be used to set AC_PACKAGE_URL, a URL for the package's home page;
the URL is used in 'configure --help' and is also available via
AC_DEFINE.</para></item>
        <item><para>Autotest testsuites accept an option --jobs[=N]
for parallel testing. This feature is still in testing, and may not
work on every platform, help in improving it would be
appreciated.</para></item>
        <item><para>Autotest testsuites do not attempt to write
startup error messages to the log file before that is opened
(regression introduced in 2.63).</para></item>
        <item><para>Configure scripts now use shell functions. This
feature leads to smaller configure files and faster
execution.</para></item>
        <item><para>Present But Cannot Be Compiled: Autoconf will now
proceed with the compiler's result if a header is present but cannot
be compiled. The warning is still printed, and you should really fix
it by providing a fourth parameter to
AC_CHECK_HEADER/AC_CHECK_HEADERS.</para></item>
        <item><para>Autoreconf added aclocal to the set of programs
affected by the 'autoreconf -I dir' option.</para></item>
        <item><para>The following documented m4sugar macros are
new:</para>
        <screen>
m4_chomp
m4_chomp_all
m4_cleardivert
m4_curry
m4_default_quoted
m4_esyscmd_s
m4_map_args
m4_map_args_pair
m4_map_args_sep
m4_map_args_w
m4_set_map
m4_set_map_sep
m4_stack_foreach
m4_stack_foreach_lifo
m4_stack_foreach_sep
m4_stack_foreach_sep_lifo
        </screen></item>
        <item><para>The following m4sugar macros are documented now,
but in some cases with slightly different semantics than what the
previous undocumented version had:</para>
        <screen>
m4_copy
m4_dumpdefs
m4_rename
m4_version_prereq
        </screen></item>
        <item><para>The m4sugar macro m4_expand has been taught to
handle unterminated comments and shell case statements. As a result,
it is used internally in more places, such as AC_DEFINE and AT_CHECK.
Most uses of AC_DEFINE and AT_CHECK should not behave any differently;
however, it may be necessary to add double-quoting around unbalanced
'(' where single-quoting used to be sufficient.</para></item>
        <item><para>The following documented m4sh macros are
new:</para>
        <screen>
AS_INIT_GENERATED
AS_LINENO_PREPARE
AS_ME_PREPARE
AS_SET_STATUS
AS_VAR_APPEND
AS_VAR_ARITH
AS_VAR_COPY
        </screen></item>
        <item><para>The following m4sh macros are documented now, but
in some cases with slightly different semantics than what the previous
undocumented version had:</para>
        <screen>
AS_ECHO
AS_ECHO_N
AS_ESCAPE
AS_EXIT
AS_LITERAL_IF
AS_UNSET
AS_VAR_IF
AS_VAR_POPDEF
AS_VAR_PUSHDEF
AS_VAR_SET
AS_VAR_SET_IF
AS_VAR_TEST_SET
AS_VERSION_COMPARE
        </screen></item>
        <item><para>The m4sh macros AS_IF and AS_CASE can now be used
in shell lists. The responsibility for supplying a trailing newline
now belongs to the call site, but since most users did not add dnl,
this generally results in fewer empty lines in
configure.</para></item>
      </change>

      <change from="2.62" to="2.63">
        <item><para>AC_C_BIGENDIAN does not mistakenly report
"universal" for some bigendian hosts, a regression introduced with
universal binary support in 2.62.</para></item>
        <item><para>AC_PATH_X now includes /lib64 and /usr/lib64 in
its list of default library directories.</para></item>
        <item><para>AC_USE_SYSTEM_EXTENSIONS no longer conflicts with
an external AC_DEFINE([__EXTENSIONS__]). This fixes a regression
introduced in 2.62 when using macros such as AC_AIX that were made
obsolete in favor of the more portable
AC_USE_SYSTEM_EXTENSIONS.</para></item>
        <item><para>AC_CHECK_TARGET_TOOLS is usable in the
non-cross-compile case</para></item>
        <item><para>The following macro has been marked obsolete,
since current porting targets can safely assume C89 semantics that
signal handlers return void. We have no current plans to remove the
macro.</para>
        <screen>
AC_TYPE_SIGNAL
        </screen></item>
        <item><para>The macros m4_map and m4_map_sep now ignore any
list elements consisting of just empty quotes, and m4_map_sep now
expands its separator. This fixes a regression in 2.62 when these
macros were first documented, for the sake of clients expecting the
semantics that these macros had prior to that time. The new macros
m4_mapall and m4_mapall_sep, along with extra quoting of the
separator, can be used to get the semantics that m4_map_sep had in
2.62.</para></item>
        <item><para>Clients of m4_expand, such as AS_HELP_STRING and
AT_SETUP, can now handle properly quoted but otherwise unbalanced
parentheses (for some macros, this fixes a regression in
2.62).</para></item>
        <item><para>Two new quadrigraphs have been introduced: @{:@
for (, and @:}@ for ), allowing the output of unbalanced parentheses
in more contexts.</para></item>
        <item><para>The following m4sugar macros are new: m4_joinall,
m4_mapall, m4_mapall_sep, m4_reverse, m4_set_add, m4_set_add_all,
m4_set_contains, m4_set_contents, m4_set_delete, m4_set_difference,
m4_set_dump, m4_set_empty, m4_set_foreach, m4_set_intersection,
m4_set_list, m4_set_listc, m4_set_remove, m4_set_size,
m4_set_union</para></item>
        <item><para>The following m4sugar macros now accept multiple
arguments, as is the case with underlying m4: m4_defn, m4_popdef,
m4_undefine</para></item>
        <item><para>The following m4sugar macros now guarantee linear
scaling; they previously had linear scaling with m4 1.6 but quadratic
scaling when using m4 1.4.x. All macros built on top of these also
gain the scaling improvements. m4_bmatch, m4_bpatsubsts, m4_case,
m4_cond, m4_do, m4_dquote_elt, m4_foreach, m4_join, m4_list_cmp,
m4_map, m4_map_sep, m4_max, m4_min, m4_shiftn</para></item>
        <item><para>AT_KEYWORDS once again performs expansion on its
argument, such that AT_KEYWORDS([m4_if([$1], [], [default])]) no
longer complains about the possibly unexpanded m4_if [regression
introduced in 2.62].</para></item>
        <item><para>Config header templates "#undef UNDEFINED /*
comment */" do not lead to nested comments any more; regression
introduced in 2.62.</para></item>
      </change>

      <change from="2.61" to="2.62">
        <item><para>Many optimizations have been applied to make
overall execution faster</para></item>
        <item><para>Autotest now makes use of shell
functions</para></item>
        <item><para>config.status now uses awk instead of sed also for
config headers. As a side effect, AC_DEFINE and AC_DEFINE_UNQUOTED now
handle multi-line values, i.e., backslash-newline combinations are
handled correctly. Further, for config headers, the total size of
values is not limited by the POSIX length limit of text lines any
more, only each single line.</para></item>
        <item><para>New config variable
"top_build_prefix"</para></item>
        <item><para>New Autoconf macros: AC_AUTOCONF_VERSION,
AC_OPENMP, AC_PATH_PROGS_FEATURE_CHECK</para></item>
        <item><para>AC_C_BIGENDIAN now supports universal binaries a
la Mac OS X</para></item>
        <item><para>AC_C_RESTRICT now prefers to #define 'restrict' to
a variant spelling like '__restrict' if the variant spelling is
available, as this is more likely to work when mixing C and C++
code.</para></item>
        <item><para>AC_CHECK_ALIGNOF's type argument T is now
documented better: it must be a string of tokens such that "T y;" is a
valid member declaration in a struct.</para></item>
        <item><para>AC_CHECK_SIZEOF now accepts objects as well as
types: the general rule is that sizeof (X) works, then AC_CHECK_SIZEOF
(X) should work.</para></item>
        <item><para>AC_CHECK_TYPE and AC_CHECK_TYPES now work on any C
type-name; formerly, they did not work for function types. In C++,
they now work on any type-id that can be the operand of sizeof; this
is similar to C, except it excludes anonymous struct and union types.
Formerly, some (but not all) C++ types involving anonymous struct and
union were accepted, though this was not documented.</para></item>
        <item><para>AC_CONFIG_LINKS now prefers to link against files
in the build tree if found, and it works to link against a file of the
same name in the source tree, even if both trees
coincide.</para></item>
        <item><para>AC_INIT no longer alters $@; regression introduced
in 2.60</para></item>
        <item><para>AC_USE_SYSTEM_EXTENSIONS now defines _ALL_SOURCE
for Interix platforms</para></item>
        <item><para>AS_HELP_STRING no longer underquotes its first
argument; it also handles the case where the first argument contains
single-quoted commas. For example, "<command>AS_HELP_STRING([-a,
[--arg[=foo]]], [bar])</command>" produces:</para>
        <screen>
-a, --arg[=foo]         bar
        </screen>
        <para>Additionally, the macro now takes two additional
arguments, indent-column and wrap-column; these should not normally be
needed, but can be used to fine-tune how the output text is
wrapped.</para></item>
        <item><para>AC_PROG_INSTALL now requires an install program
that can install multiple files into a target directory</para></item>
        <item><para>The command 'autoconf -' now correctly processes a
file from stdin</para></item>
        <item><para>'autoreconf -m' now honors
$MAKE</para></item>
        <item><para>For all of the directory arguments for
'configure', such as '--prefix' or '--bindir', trailing slashes are
stripped. As an example, if tab completion in the user's shell appends
trailing slashes, the command './configure --prefix=/usr/' will still
result in an expanded libdir value of /usr/lib, not
/usr//lib.</para></item>
        <item><para>"configure --help=recursive" now works in
read-only trees and from unconfigured build trees</para></item>
        <item><para>If precious variables differ only in whitespace,
then the cache consistency check warns instead of fails, and reuses
the old value</para></item>
        <item><para>AT_BANNER is now documented</para></item>
        <item><para>AT_SETUP now handles macro expansions properly
when calculating line length</para></item>
        <item><para>Autotest now determines $srcdir
correctly</para></item>
        <item><para>Testsuites built by autotest now accept a
-C/--directory=DIR option to adjust the working directory prior to
creating files</para></item>
        <item><para>Autoconf now requires GNU M4 1.4.5 or later.
Earlier versions of M4 have a bug in macro tracing that interferes
with the interaction between Autoconf and Automake. GNU M4 1.4.11 or
later is recommended. The configure search for a working M4 is
improved.</para></item>
        <item><para>For portability with the eventual M4 2.0, macros
should no longer use anything larger than $9 to refer to
arguments.</para></item>
        <item><para>Documentation for m4sugar is improved.</para>
        <unorderedlist>
          <item><para>The following macros were previously available
as undocumented interfaces; the macros are now documented as stable
interfaces.</para>
          <screen>
__oline__ m4_assert m4_bmatch m4_bpatsubsts m4_car m4_case
m4_cdr m4_default m4_divert_once m4_divert_pop m4_divert_push
m4_divert_text m4_do m4_errprintn m4_fatal m4_flatten
m4_ifndef m4_ifset m4_ifval m4_ifvaln m4_location
m4_n m4_shiftn m4_strip m4_warn
          </screen></item>
          <item><para>The following macros were previously available
as undocumented interfaces, but had bug fixes or semantic changes as
part of this release. Packages that relied on the undocumented
behavior should be analyzed to make sure they will still work with the
new documented behavior.</para>
          <screen>
m4_cmp m4_list_cmp m4_join m4_map m4_map_sep m4_sign
m4_text_box m4_text_wrap m4_version_compare
          </screen></item>
          <item><para>The m4_wrap macro used to have unspecified
order, but now guarantees FIFO order. m4_wrap_lifo was added to
guarantee LIFO order.</para></item>
          <item><para>Packages using the undocumented m4sugar macro
m4_PACKAGE_VERSION should consider using the new AC_AUTOCONF_VERSION
instead.</para></item>
          <item><para>m4sugar macros that are not documented in the
manual are still deemed experimental, and should not be used outside
of Autoconf.</para></item>
        </unorderedlist></item>
        <item><para>The m4sugar macros m4_append and m4_append_uniq,
first documented in 2.60, have been fixed to treat both the string and
the separator arguments consistently with regards to quoting. Prior to
this fix, m4_append_uniq could mistakenly duplicate entries if the
expansion of the separator resulted in a different string (for
example, if it contained quotes, a comma, or a macro name). However,
it means that programs previously using</para>
        <screen>
m4_append([name], [string], [[, ]])
        </screen>
        <para>are now using a four-character separator instead of the
intended comma and space. If you need portability to earlier versions
of Autoconf, you can insert the following snippet after AC_INIT but
before any other macro expansions, to enforce the new
semantics:</para>
        <screen>
m4_pushdef([m4_append], [m4_define([$1],
     m4_ifdef([$1], [m4_defn([$1])[$3]])[$2])])
        </screen>
        <para>Additionally, m4_append_uniq now takes optional
parameters that can be used to take action depending on whether
anything was appended, and warns if a non-empty separator occurs
within the string being appended, since that can lead to
duplicates.</para></item>
        <item><para>The following m4sugar macros are new:
m4_append_uniq_w, m4_apply, m4_combine, m4_cond, m4_count,
m4_dquote_elt, m4_echo, m4_expand, m4_ignore, m4_make_list, m4_max,
m4_min, m4_newline, m4_shift2, m4_shift3, m4_unquote,
m4_wrap_lifo</para></item>
        <item><para>Warnings are now generated by default when an
installer invokes 'configure' with an unknown --enable-* or --with-*
option. These warnings can be disabled with the new
AC_DISABLE_OPTION_CHECKING macro, or by invoking 'configure' with
--disable-option-checking.</para></item>
        <item><para>The documentation for the following macros is
adjusted to make it more clear that they have previously been marked
obsolete, as their functionality can be accomplished by other macros.
We have no current plans to remove them from Autoconf.</para>
        <screen>
AC_ENABLE  AC_STRUCT_ST_BLKSIZE  AC_STRUCT_ST_RDEV  AC_WITH
        </screen></item>
        <item><para>The following macros have been marked obsolete, as
they only perform a subset of AC_USE_SYSTEM_EXTENSIONS. We have no
current plans to remove them.</para>
        <screen>
AC_AIX  AC_GNU_SOURCE  AC_ISC_POSIX  AC_MINIX
        </screen></item>
        <item><para>AC_C_LONG_DOUBLE is obsolescent. The documentation
now says that AC_C_LONG_DOUBLE is obsolescent: it tests for problems
that are so old that it is no longer of practical importance on
current systems. New programs need not use AC_C_LONG_DOUBLE. We have
no current plans to remove it.</para></item>
        <item><para>AC_DIAGNOSE, AC_WARNING, and AC_FATAL are
obsolescent. The documentation now favors the use of M4sugar macros
m4_warn and m4_fatal, since the naming makes it more obvious that the
diagnostics are associated with M4 expansion (ie. when running
"autoconf"), and offers less confusion with the AC_MSG_ERROR,
AC_MSG_FAILURE, and AC_MSG_WARN macros which manage diagnostics when
running "configure". We have no current plans to remove these
macros.</para></item>
      </change>
    </notes>

    <changelog>
      <change date="2012 January 12" revision="2"
      author="Albert Chin-A-Young" email="china@thewrittenword.com">
        <item><para>Allow URLs with '?' for the bug-report argument to
AC_INIT (regression fix)</para></item>
        <item><para>Update gawk dependency from 3.1.6 to
3.1.8</para></item>
        <item><para>Update help2man dependency from 1.36.4 to
1.38.2</para></item>
        <item><para>Update m4 dependency from 1.4.12 to
1.4.15</para></item>
        <item><para>Update perl dependency from 5.8.8 to
5.12.2</para></item>
        <item><para>Update sed dependency from 4.1.5 to
4.2.1</para></item>
      </change>
    </changelog>
  </program>
</programs>
