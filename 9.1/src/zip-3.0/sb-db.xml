<?xml version="1.0"?>
<programs>
<!DOCTYPE programs SYSTEM "sb-db.dtd">
  <program name="zip" version="3.0" revision="1">
    <build-name>${SB_PROG_NAME}30</build-name>

    <install-name>${SB_PROG_NAME}30</install-name>

    <sources>
      <source checksum="7b74551e63f8ee6aab6fbc86676c0d37"
        checksum-type="md5" size="1118845"
        path="src/zip30.tar.gz"/>
      <patch checksum="bd1bdf4575522d89f06d8082844625c1"
        checksum-type="md5" size="506"
        path="src/zip30.fc-currdir.patch"/>
      <patch checksum="2901cc9daeb27259edcbe5a6f7b5a12f"
        checksum-type="md5" size="5106"
        path="src/zip30.tww.patch"/>
    </sources>

    <dependencies>
      <depend program="bzip2" var="BZIP2"
        install-name="bzip210">v&gt;=1.0.6</depend>
    </dependencies>

    <build>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc CFLAGS="-O2 -qro -qroconst -qmaxmem=-1 -qarch=ppc"
  LDFLAGS="-Wl,-brtl -Wl,-blibpath:/usr/lib"
  CC_LD_RT="-Wl,-blibpath:" ;;
ia64*-hpux*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+b,"
  LDFLAGS="-Wl,+nodefaultrpath" ;;
*-hpux11.[01]*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +ESlit +DAportable \
+Oentrysched +Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+s,+b," ;;
*-hpux*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+s,+b," ;;
*-irix*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1009,1429 \
-use_readonly_const -G0 -rdata_shared -DEBUG:optimize_space=ON \
-O2 -OPT:Olimit=0"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-linux*)
  CFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"
  CC_LD_RT="-Wl,-rpath," ;;
*-linux*)
  CC_LD_RT="-Wl,-rpath," ;;
*-osf*)
  CC=cc CFLAGS="-O2 -arch ev5 -msym -readonly_strings"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=pentium4"
  CC_LD_RT="-R" ;;
*-solaris2.8)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-xarch=v8plusa"
  CC_LD_RT="-R" ;;
*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-m32 -xarch=sparcvis"
  CC_LD_RT="-R" ;;
esac

gmake -f unix/Makefile CC="${CC:-gcc}" \
CFLAGS="${CFLAGS:--O2} -I. -DUNIX \
${SB_VAR_BZIP2+-I${SB_VAR_BZIP2_INC}}" \
LFLAGS1="${SB_VAR_BZIP2+-L${SB_VAR_BZIP2_LIB} \
${CC_LD_RT}${SB_VAR_BZIP2_LIB}} ${LDFLAGS+${LDFLAGS}}" \
prefix=${SB_INSTALL_PREFIX} generic
]]>
    </build>

    <install>
<![CDATA[
gmake -f unix/Makefile INSTALL=${SB_PATH_INSTALL} \
MANDIR="${SB_INSTALL_PREFIX}/man/man1" \
prefix=${SB_INSTALL_PREFIX} install
]]>
    </install>

    <licenses>
      <license>
        <para>Copyright (c) 1990-2007 Info-ZIP.  All rights
reserved.</para>
        <para>For the purposes of this copyright and license,
"Info-ZIP" is defined as the following set of individuals:</para>
        <para>Mark Adler, John Bush, Karl Davis, Harald Denker,
Jean-Michel Dubois, Jean-loup Gailly, Hunter Goatley, Ed Gordon, Ian
Gorman, Chris Herborth, Dirk Haase, Greg Hartwig, Robert Heath,
Jonathan Hudson, Paul Kienitz, David Kirschbaum, Johnny Lee, Onno van
der Linden, Igor Mandrichenko, Steve P. Miller, Sergio Monesi, Keith
Owens, George Petrov, Greg Roelofs, Kai Uwe Rommel, Steve Salisbury,
Dave Smith, Steven M. Schweda, Christian Spieler, Cosmin Truta,
Antoine Verheijen, Paul von Behren, Rich Wales, Mike White.</para>
        <para>This software is provided "as is," without warranty of
any kind, express or implied.  In no event shall Info-ZIP or its
contributors be held liable for any direct, indirect, incidental,
special or consequential damages arising out of the use of or
inability to use this software.</para>
        <para>Permission is granted to anyone to use this software
for any purpose, including commercial applications, and to alter it
and redistribute it freely, subject to the above disclaimer and the
following restrictions:</para>
        <orderedlist>
          <item><para>Redistributions of source code (in whole or in
part) must retain the above copyright notice, definition, disclaimer,
and this list of conditions.</para></item>
          <item><para>Redistributions in binary form (compiled
executables and libraries) must reproduce the above copyright notice,
definition, disclaimer, and this list of conditions in documentation
and/or other materials provided with the distribution.  The sole
exception to this condition is redistribution of a standard UnZipSFX
binary (including SFXWiz) as part of a self-extracting archive; that
is permitted without inclusion of this license, as long as the normal
SFX banner has not been removed from the binary or
disabled.</para></item>
          <item><para>Altered versions--including, but not limited to,
ports to new operating systems, existing ports with new graphical
interfaces, versions with modified or added functionality, and
dynamic, shared, or static library versions not from Info-ZIP--must be
plainly marked as such and must not be misrepresented as being the
original source or, if binaries, compiled from the original source.
Such altered versions also must not be misrepresented as being
Info-ZIP releases--including, but not limited to, labeling of the
altered versions with the names "Info-ZIP" (or any variation thereof,
including, but not limited to, different capitalizations), "Pocket
UnZip," "WiZ" or "MacZip" without the explicit permission of Info-ZIP.
Such altered versions are further prohibited from misrepresentative
use of the Zip-Bugs or Info-ZIP e-mail addresses or the Info-ZIP
URL(s), such as to imply Info-ZIP will provide support for the altered
versions.</para></item>
          <item><para>Info-ZIP retains the right to use the names
"Info-ZIP," "Zip," "UnZip," "UnZipSFX," "WiZ," "Pocket UnZip," "Pocket
Zip," and "MacZip" for its own source and binary
releases.</para></item>
        </orderedlist>
      </license>
    </licenses>

    <notes>
      <change from="3.0h" to="3.0">
        <item><para>Unicode fixes.</para></item>
        <item><para>Test and fix various ports as
needed.</para></item>
        <item><para>Update Win32 resource to support more Windows
ports.</para></item>
        <item><para>Add djgpp 2.x makefile that includes
bzip2.</para></item>
        <item><para>Add Win32 version resource to Win32
executable.</para></item>
        <item><para>Bug fixes.</para></item>
        <item><para>Documentation updates.</para></item>
        <item><para>Package for release.</para></item>
      </change>

      <change from="3.0g" to="3.0h">
        <item><para>Allow -@ and -x to work together.</para></item>
        <item><para>Unicode code cleanup.</para></item>
        <item><para>Allow forcing use of UTF-8 storage in standard
path and comment.</para></item>
        <item><para>Update symbolic link checks.</para></item>
        <item><para>Add support for storing 32-bit UIDs/GIDs using new
extra field. Backward compatible support for the old 16-bit UID/GID
extra field remains if Zip is compiled on an OS that has 16-bit
UID/GID storage.</para></item>
        <item><para>Update VMS notes.</para></item>
        <item><para>Directory scan using -AS (include only files with
Windows archive bit set) now ignores archive bit on directories to
include all files with archive bit set in all directories.  Also, to
avoid empty directories being created, -AS now does not store
directory entries.</para></item>
        <item><para>Add Unix IBM support.</para></item>
        <item><para>Change -W to -ws to free -W for later
use.</para></item>
        <item><para>Fix large file support for MinGW.</para></item>
        <item><para>Fix large file support for bzip2.</para></item>
        <item><para>Fix compile error in ZipCloak when UNICODE_SUPPORT
is not enabled.</para></item>
        <item><para>Fix Unicode bug in ZipCloak involving Unicode
paths.</para></item>
        <item><para>Long Unicode escapes changed from #Lxxxxxxxx to
#Lxxxxxx to shorten paths with escaped Unicode.</para></item>
        <item><para>Bug fixes.</para></item>
      </change>

      <change from="3.0f" to="3.0g">
        <item><para>Add split support to VB project for
Zip64.</para></item>
        <item><para>Disable reading of Unix FIFOs unless new -FI
option used to avoid an archiving operation stopping when it hits an
active unfed FIFO.</para></item>
        <item><para>The "[list]" wildcard expression (regular
expression matching of any character or range of characters in list)
is now disabled on DOS and Windows as it has caused confusion when
filenames have [ and ] in them.  The new -RE option reenables
it.</para></item>
        <item><para>Add negation to many display options such as -dc
and -db.</para></item>
        <item><para>Allow -FF to read and fix archives having local
entries that appear after central directory entries.</para></item>
        <item><para>Bug fixes.</para></item>
      </change>

      <change from="3.0e" to="3.0f">
        <item><para>bzip2 - The bzip2 compression method looks
supported for at least Windows, Unix, and VMS using the bzip2 library.
A new option, -Z cm, selects the compression method.</para></item>
        <item><para>Split archives - Can now use -s to create a split
archive.  The default is to update split files as the archive is being
written, which requires all splits to remain open until the archive is
done. This should be no problem when writing the archive to a hard
drive, for example, and this approach creates archives that should be
supported by all unzips that support splits.  Adding the -sp option
enables split pause mode that instead writes splits that do not need
updating and pauses Zip after each split.  This allows splits to be
written directly to removable media, however -sp archives may not be
as universally compatible.</para></item>
        <item><para>Unicode support - Zip now stores Unicode paths
that should be more portable across character sets and languages.  The
unzip must have Unicode support enabled or the Unicode paths are
ignored.  If reading an archive with Unicode paths, unsupported
characters are replaced by #Uxxxx and #Lxxxxxxxx escapes in the file
name.  Option -UN controls how Unicode is handled.  Also, on systems
where the current character set is UTF-8, preliminary support for the
new General Purpose Bit Flag, bit 11, UTF-8 flag, that indicates UTF-8
is stored in the path and comment fields is implemented for
paths.</para></item>
        <item><para>Unicode on Win32 - On WIN32 systems that support
the wide character calls (mainly NT and later systems using NTFS),
when UNICODE SUPPORT is enabled Zip will now do directory scans using
Unicode and convert the Unicode paths to the local character set for
storage in the standard path field and store UTF-8 in the Unicode
extra field.  This allows directory scans to complete successfully
regardless of the character set the path is in.  On Win9x systems wide
character scans are not generally supported and Zip automatically uses
a local character scan instead.</para></item>
        <item><para>Keep extra fields option - The default operation
has been, and continues to be, to read then strip old extra fields
when reading entries from an existing archive and then recreate the
extra fields that Zip knows about. Extra fields specific to each
operating system get added by default also. The new option -X-
(negated -X) keeps any old extra fields, copying them to the updated
archive unchanged (unless Zip has updated them). The unnegated -X
still strips most all extra fields except Zip64, Unicode, and UT
time.</para></item>
        <item><para>License - minor updates to the
license.</para></item>
        <item><para>Windows OEM - When compiled with WIN32_OEM (the
default for WIN32), Zip on WIN32 now stores OEM paths, which should be
more compatible with other zips and should fix some character set
problems.</para></item>
        <item><para>Windows Archive Bit support - On Windows can now
use new -AS (include if archive bit set) option to select files with
the DOS archive bit set and use new -AC (clear archive bits) option to
clear the archive bits on files after the archive has been created.
But -DF is probably better.</para></item>
        <item><para>Difference mode - A new option -DF (--dif) creates
an output archive that includes only files changed or new since the
input archive was created.  Can use to create incremental
backups.</para></item>
        <item><para>File Sync - The new option -FS enables File Sync,
a new mode that synchronizes the entries in an archive with the files
on the file system, adding updating, and deleting entries as needed.
This should create the same results as creating a new archive, but
since existing entries are copied, may be much faster.</para></item>
        <item><para>Copy Mode - A new --out option allows creating a
new archive with a different name than the input archive, leaving the
input archive unchanged.  This allows updating split archives.  It
also allows for a new copy mode to select entries in one archive and
copy them directly to a new archive.</para></item>
        <item><para>Empty archives - Now an empty archive is created
when -i or -i@ is used and the file patterns given do not match
anything.  This has been requested to support scripts.</para></item>
        <item><para>Global dots - A new -dg option now displays
progress dots as -dd does, but instead of displaying them for each
file, the dots track the total bytes read for the archive.  The -dg
option also works when -q is used to disable most output, which allows
for something like zip -qdgds 100m to be used to not display specific
files but display a dot every 100 MB as a global status.</para></item>
        <item><para>Date range - Can now use -t and -tt to set a date
range</para></item>
        <item><para>Fix options - Option -F redone and can recover
files from an archive with a mostly complete central directory more
reliably, but no longer can handle truncated archives.  Option -FF
redone and now can salvage files from slightly more damaged archives,
including truncated archives. In some ways -F is less powerful but
more stable than it was and -FF will be needed where -F in Zip 2.32
was enough.  One big change is -F and -FF both now support split
archives.</para></item>
        <item><para>Console writing - Updates to how messages are
written to the console have been made including more consistent
handling of line breaks.</para></item>
        <item><para>Show Files options - Option -sf lists the files
that would be operated on.  This option can be used alone to list the
files in an archive. Also see options -su and -sU for showing Unicode
paths.</para></item>
        <item><para>UnZip Check - Now check that UnZip 6.00 or later
is being used for unzip if testing a Zip64 archive.  A new option -TT
can be used to set the unzip to use with the -T check.  Currently
UnZip does not support split archives so split archives can't be
tested by UnZip.</para></item>
        <item><para>Streaming - Directories are now handled better
when streaming.</para></item>
        <item><para>Case matching - Normally all matching against
archive entries is case sensitive, so *.BAR will not match or find
foo.bar in an archive when deleting, copying, or freshening entries
(deleting and copying only on VMS).  New option -ic (--ignore-case)
enables case insensitive matching.  Currently -ic is only implemented
on WIN32 and VMS.</para></item>
        <item><para>Delete date bug fixed - Bug when using -d to
delete files while using -t or -tt to select the files based on date
is fixed</para></item>
        <item><para>Large file encryption bug fixed - Fix for bug that
very rarely results in bad data being stored when deflating and
encrypting uncompressable data and resulting in CRC errors when
extracting, but the chance of error increases with file size (thanks
to WinZip for finding this bug).  See CHANGES for
details.</para></item>
      </change>

      <change from="3.0d" to="3.0e">
        <item><para>Bugs described in Debian patches 004 (unix
configure script update) and 005 (large path bug) fixed</para></item>
        <item><para>Various fixes</para></item>
        <item><para>Add optional running stats and also end stats if
not all files could be read</para></item>
        <item><para>Options -l and -ll now do quick binary check on
first buffer and skip formatting if first buffer has binary - still
check at end to note if formatting was done on file that was later
determined to be binary, but now potential file corruption is
generally avoided</para></item>
        <item><para>Main binary check now uses new algorithm that
should also treat UTF-8 and other similar encodings as text, allowing
proper line end translation for UTF-8 files</para></item>
        <item><para>When output is not updatable by seeking back and
Zip64 is enabled, output is forced to Zip64 to avoid possible later
need for Zip64 when not enabled - More work on splits, but still not
usable</para></item>
        <item><para>Fixes for djgpp</para></item>
        <item><para>Add log file capability to save all errors and
optionally messages</para></item>
        <item><para>Add code to test for a Zip64 archive when compiled
without Zip64 support</para></item>
        <item><para>New VC6 projects for Win32 and
WinDLL</para></item>
        <item><para>Updates to extended help</para></item>
        <item><para>Changes to force-zip64 option</para></item>
        <item><para>ZE_BIG error now given also for files too big to
read or write</para></item>
        <item><para>Fix file delete bug</para></item>
        <item><para>Update license</para></item>
        <item><para>Update export documentation</para></item>
        <item><para>Add VMS extended filename support</para></item>
        <item><para>Add directory traversal improvements, some for
Win32 ports and some for all ports, that can result in a 10 times
increase in speed in some cases</para></item>
      </change>

      <change from="3.0c" to="3.0d">
        <item><para>Some large file crypt fixes</para></item>
        <item><para>Some updates to support WiZ</para></item>
        <item><para>On VMS, changed -V (/VMS) processing to truncate
file at EOF, allowing greater compatability with non-VMS systems.  New
-VV (/VMS=ALL) option saves all allocated blocks in a file.
(Previously, -V did neither.)</para></item>
        <item><para>On VMS, pushed 2GB file size limit with -V out to
4GB</para></item>
        <item><para>On VMS (recent, non-VAX), with SET PROCESS /PARSE
= EXTEND, command-line case is preserved.  This obviates quoting
upper-case options, like -V, when enabled</para></item>
        <item><para>On VMS, fixed problems with mixed-case directory
names.  Also changed to keep ODS5 extended file name escape characters
("^") out of the archived names in simple cases</para></item>
        <item><para>Changes to the display dots</para></item>
        <item><para>Option -W should now force wildcard matching to
not cross directory separators.  For example, a/b*r/d will match
a/bar/d but not a/ba/r/d</para></item>
        <item><para>Option -nw should turn off all wildcard matching
so foo[bar] is matched literally and [bar] is not considered a regular
expression</para></item>
        <item><para>Atheos port</para></item>
        <item><para>Debugging of Unix and VMS large file ports.  Most
features may work now on these ports for large files.  Still need to
fix 2 GB to 4 GB when not compiled with large file
support</para></item>
        <item><para>On VMS, added an open callback function which
(where supported) senses the process RMS_DEFAULT values for file
extend quantity (deq) multi-block count (mbc), and multi-buffer count
(mbf), and sets the FAB/RAB parameters accordingly.  The default deq
is now much larger than before (16384 blocks, was none), and the
default mbc is now 127 (up from 64), speeding creation of a large
archive file.  The "-v" option shows some of the activity.  On old VMS
versions, RMS_DEFAULT sensing (GETJPI) fails (silently, without "-v"),
and no changes will be made.  Even there, (DCL) SET RMS /EXTEND =
&lt;big&gt; can help performance.  RMS_DEFAULT values override
built-in default values.</para></item>
      </change>

      <change from="3.0b" to="3.0c">
        <item><para>Converted to using 64-bit file environment instead
of transitional functions like fseeko64 for ports that support
it</para></item>
        <item><para>Added "--" argument to read all following
arguments as paths</para></item>
        <item><para>Second help page added</para></item>
        <item><para>Binary detection adjusted from 20% binary is
binary to 2%</para></item>
        <item><para>When -R and -i used together now -i has precedence
over -R</para></item>
        <item><para>Archive names with spaces can now be tested on
MSDOS and Win32</para></item>
      </change>

      <change from="3.0a" to="3.0b">
        <item><para>Fixed ifdefs so can test base code by compiling
with NO_LARGE_FILE_SUPPORT, then compiling with NO_ZIP64_SUPPORT to
test 64-bit file calls (if port enables) but otherwise use base code,
and compiling normally to enable Zip64 code</para></item>
        <item><para>Unix Zip64 fixes - should now be able to create
and read large files</para></item>
        <item><para>WinDLL changes to support Zip64.  Zip 3.0 dll
named Zip32z64.dll</para></item>
        <item><para>New VB example to show use of
Zip32z64.dll</para></item>
        <item><para>New options -sc (show final command line and exit)
and -sd (show each step zip is doing, a little different than verbose
which is still there) added to help debug but both or at least -sd
might go away in the release</para></item>
        <item><para>Some minor posted bugs fixed (see
Changes)</para></item>
      </change>

      <change from="2.3" to="3.0a">
        <item><para>Initial Zip64 support allowing large files and
large numbers of files</para></item>
        <item><para>New command line processor</para></item>
        <item><para>Other changes, see file Changes</para></item>
      </change>
    </notes>
  </program>
</programs>
