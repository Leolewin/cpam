<?xml version="1.0"?>
<programs>
<!DOCTYPE programs SYSTEM "sb-db.dtd">
  <program name="libIDL" version="0.8.14" revision="1">
    <build-name>${SB_PROG_NAME}-${SB_PROG_VER}</build-name>

    <install-name>libidl08</install-name>

    <sources>
      <source checksum="bb8e10a218fac793a52d404d14adedcb"
        checksum-type="md5" size="427149"
        path="src/libIDL-0.8.14.tar.bz2"/>
      <patch checksum="df3b346a167c8bc27022b8e99b66d929"
        checksum-type="md5" size="3381"
        path="src/libIDL-0.8.14.aix-lexer-breakage.patch"/>
      <patch checksum="dd1016fb42c750c10c43d945627a5d25"
        checksum-type="md5" size="3092"
        path="src/libIDL-0.8.14.tww.patch"/>
      <patch checksum="40675272f4ca4f5a816c516f9f440ea5"
        checksum-type="md5" size="1705364"
        path="src/libIDL-0.8.14.auto.patch"/>
    </sources>

    <dependencies>
      <depend program="bison" install-name="bison24"
        add-path="prepend" type="build">v&gt;=2.4.3</depend>
      <depend program="pkgconfig" install-name="pkgconfig02"
        add-path="prepend" type="build">v&gt;=0.25</depend>
      <depend program="flex" install-name="flex25" add-path="prepend"
        type="build">v&gt;=2.5.35</depend>
    </dependencies>

    <script-header>
<![CDATA[
_datadir="${SB_INSTALL_PREFIX}/share"
]]>
    </script-header>

    <module name="default">
      <dependencies replace="0">
        <depend program="gettext" var="GETTEXT"
          install-name="gettext018">v&gt;=0.18.1.1</depend>
        <depend program="glib" var="LIBGLIB"
          install-name="libglib226">v&gt;=2.26.1</depend>
        <depend program="libiconv" var="LIBICONV"
          install-name="libiconv113">v&gt;=1.13.1</depend>
      </dependencies>

      <script-header>
<![CDATA[
_datadir="${SB_INSTALL_PREFIX}/share"
]]>
      </script-header>

      <configure>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  CPP=/usr/ccs/lib/cpp
  CC=xlc CFLAGS="-O2 -qro -qroconst -qmaxmem=-1 -qarch=ppc"
  LDFLAGS="-Wl,-brtl -Wl,-blibpath:/usr/lib"
  CC_LD_RT="-Wl,-blibpath:" ;;
ia64*-hpux*)
  CPP="/usr/ccs/lbin/cpp -P"
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+b,"

# ORBit2 fails to build if we detect symlink() on *-hpux*, I do not
# know the reason for the ac_cv_cpp_pipe_stdin=no - pogma 
  export ac_cv_func_symlink=no
  export ac_cv_cpp_pipe_stdin=no ;;
*-hpux10*)
  CPP="/usr/ccs/lbin/cpp -P"
  CC=cc CFLAGS="-Ae -z +O2 +Ofltacc +ESlit +DAportable \
+Oentrysched +Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+s,+b,"

  export ac_cv_func_symlink=no
  export ac_cv_cpp_pipe_stdin=no ;;
*-hpux11.[01]*)
  CPP="/usr/ccs/lbin/cpp -P"
  CC=cc CFLAGS="-Ae -z +O2 +Ofltacc +Olit=all +DAportable \
+Oentrysched +Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+s,+b,"

  export ac_cv_func_symlink=no
  export ac_cv_cpp_pipe_stdin=no ;;
*-hpux*)
  CPP="/usr/ccs/lbin/cpp -P"
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+s,+b,"

  export ac_cv_func_symlink=no
  export ac_cv_cpp_pipe_stdin=no ;;
*-irix*)
  CPP="c99 -E"
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1429 \
-use_readonly_const -G0 -rdata_shared -DEBUG:optimize_space=ON \
-O2 -OPT:Olimit=0"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-linuxe3)
  CFLAGS="-O2 -mcpu=pentiumpro -march=pentiumpro"
  CPP=/usr/bin/cpp
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-linux*|i?86-suse-linux*)
  CFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"
  CPP=/usr/bin/cpp
  CC_LD_RT="-Wl,-rpath," ;;
*-linux*)
  CPP=/usr/bin/cpp
  CC_LD_RT="-Wl,-rpath," ;;
*-osf*)
  CPP=/usr/lib/cpp
  CC=cc CFLAGS="-O2 -arch ev5 -msym -readonly_strings"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-solaris*)
  CPP=/usr/ccs/lib/cpp
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=pentium4"
  CC_LD_RT="-R" ;;
*-solaris2.9|*-solaris2.1?)
  CPP=/usr/ccs/lib/cpp
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-m32 -xarch=sparcvis"
  CC_LD_RT="-R" ;;
*-solaris*)
  CPP=/usr/ccs/lib/cpp
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-xarch=v8plusa"
  CC_LD_RT="-R" ;;
esac

${SHELL} ./configure CC="${CC:-gcc}" ${CPP+CPP="${CPP}"} \
CFLAGS="${CFLAGS:--O2}" LDFLAGS="${LDFLAGS+${LDFLAGS}}" \
PKG_CONFIG_PATH="\
${SB_VAR_LIBGLIB+${SB_VAR_LIBGLIB_LIB}/pkgconfig:}\
${SB_VAR_GETTEXT+${SB_VAR_GETTEXT_LIB}/pkgconfig:}\
${SB_VAR_LIBICONV+${SB_VAR_LIBICONV_LIB}/pkgconfig}" \
--datadir=${_datadir} --infodir="${SB_INSTALL_PREFIX}/info" \
--libdir=${SB_INSTALL_PREFIX_LIB} \
--disable-dependency-tracking --prefix=${SB_INSTALL_PREFIX}

${SB_PATH_SED} -i -e "\
s!-L\(\$libdir\)!-L\1 ${CC_LD_RT}\1!;" libIDL-config-2

${SB_PATH_SED} -i -e "\
s!-L\(\${libdir}\)!-L\1 ${CC_LD_RT}\1!" libIDL-2.0.pc
]]>
      </configure>

      <install>
<![CDATA[
gmake install
]]>
      </install>
    </module>

    <licenses>
      <license path="lgpl-2.license"/>
    </licenses>

    <notes>
      <change from="0.8.13" to="0.8.14">
        <item><para>Fix build error in configure.in.</para></item>
        <item><para>Remove CPP_STDINC cruft from
configure.in.</para></item>
        <item><para>Enable silent build rules.</para></item>
      </change>

      <change from="0.8.12" to="0.8.13">
        <item><para>Clean up some warnings from
sparse/gcc.</para></item>
        <item><para>Makefile.am: Put local includes
first.</para></item>
      </change>

      <change from="0.8.11" to="0.8.12">
        <item><para>Fix the build with bison 2.4</para></item>
      </change>
    </notes>
  </program>
</programs>
