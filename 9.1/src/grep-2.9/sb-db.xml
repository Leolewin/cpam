<?xml version="1.0"?>
<programs>
<!DOCTYPE programs SYSTEM "sb-db.dtd">
  <program name="grep" version="2.9" revision="1">
    <build-name>${SB_PROG_NAME}-${SB_PROG_VER}</build-name>

    <install-name>${SB_PROG_NAME}29</install-name>

    <sources>
      <source checksum="03e3451a38b0d615cb113cbeaf252dc0"
        checksum-type="md5" size="1790291"
        path="src/grep-2.9.tar.gz"/>
      <patch checksum="41f0eb66927ab45fc6438bb9dfd7b306"
        checksum-type="md5" size="1542"
        path="src/grep-2.9.tww.patch"/>
      <patch checksum="86a288bb8261da0afa372dc01061ea7b"
        checksum-type="md5" size="1289"
        path="src/grep-2.9.gnulib.patch"/>
      <patch checksum="7a1a0d71eed29def92ce1e26ca9a908b"
        checksum-type="md5" size="464455"
        path="src/grep-2.9.auto.patch"/>
    </sources>

    <dependencies>
      <depend program="gettext" var="GETTEXT"
        install-name="gettext018"
        add-path="prepend">v&gt;=0.18.1.1</depend>
      <depend program="libiconv" var="LIBICONV"
        install-name="libiconv113"
        add-path="prepend">v&gt;=1.13.1</depend>
      <depend program="pcre" var="LIBPCRE"
        install-name="libpcre811">v&gt;=8.11</depend>
    </dependencies>

    <script-header>
<![CDATA[
_datadir="${SB_INSTALL_PREFIX}/share"
_docdir="${SB_INSTALL_PREFIX}/doc"
]]>
    </script-header>

    <configure>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc CFLAGS="-O2 -qro -qroconst -qmaxmem=-1 -qarch=ppc"
  LDFLAGS="-Wl,-brtl -Wl,-bnortllib -Wl,-blibpath:/usr/lib"
  CC_LD_RT="-Wl,-blibpath:" ;;
ia64*-hpux*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+b," ;;
*-hpux11.[01]*)
  CC=cc CFLAGS="-z -Ae +O2 +ESlit +Ofltacc +DAportable \
+Oentrysched +Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+s,+b," ;;
*-hpux*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+s,+b," ;;
*-irix*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1429 -O2 -OPT:Olimit=0"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-linux*)
  CFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"
  CC_LD_RT="-Wl,-rpath," ;;
*-freebsd*|*-linux*)
  CC_LD_RT="-Wl,-rpath," ;;
*-osf*)
  CC=cc CFLAGS="-O2 -arch ev5 -msym -readonly_strings"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=pentium4"
  CC_LD_RT="-R" ;;
*-solaris2.8)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-xarch=v8plusa"
  CC_LD_RT="-R" ;;
*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-m32 -xarch=sparcvis"
  CC_LD_RT="-R" ;;
esac

${SHELL} ./configure CC="${CC:-gcc}" CFLAGS="${CFLAGS:--O2}" \
CPPFLAGS="${SB_VAR_LIBPCRE+-I${SB_VAR_LIBPCRE_INC}}" \
LDFLAGS="${SB_VAR_LIBPCRE+-L${SB_VAR_LIBPCRE_LIB} \
${CC_LD_RT}${SB_VAR_LIBPCRE_LIB}} ${LDFLAGS+${LDFLAGS}}" \
${SB_VAR_LIBICONV+--with-libiconv-prefix=${SB_VAR_LIBICONV}} \
${SB_VAR_GETTEXT+--with-libintl-prefix=${SB_VAR_GETTEXT}} \
--datarootdir=${_datadir} --datadir=${_datadir} \
--disable-dependency-tracking --disable-silent-rules \
--program-prefix=g \
--mandir="${SB_INSTALL_PREFIX}/man" \
--infodir="${SB_INSTALL_PREFIX}/info" \
--prefix=${SB_INSTALL_PREFIX}
]]>
    </configure>

    <test auto-include="0">
<![CDATA[
gmake check -k
]]>
    </test>

    <install>
<![CDATA[
gmake install

${SB_PATH_INSTALL} -m 755 -o root -g 0 -d ${_docdir}/texinfo
${SB_PATH_INSTALL} -m 644 -o root -g 0 doc/fdl.texi doc/grep.texi \
doc/version.texi ${_docdir}/texinfo
]]>
    </install>

    <licenses>
      <license path="gpl-3.license"/>

      <license path="gfdl-1.3.license"/>
    </licenses>

    <notes>
      <change from="2.6.3" to="2.7">
        <items name="Bug Fixes">
          <item><para>grep --include=FILE works once again, rather than
working like --exclude=FILE.</para></item>
          <item><para>Searching with grep -Fw for an empty string would
not match an empty line.</para></item>
          <item><para>X{0,0} is implemented correctly.  It used to be a
synonym of X{0,1}.</para></item>
          <item><para>In multibyte locales, regular expressions
including backreferences no longer exhibit quadratic complexity (i.e.,
they are orders of magnitude faster).</para></item>
          <item><para>In UTF-8 locales, regular expressions including
"." can be orders of magnitude faster.  For example, "grep ." is now
twice as fast as "grep -v ^$", instead of being immensely slower.  It
remains slow in other multibyte locales.</para></item>
          <item><para>--mmap was meant to be ignored in 2.6.x, but it
was instead removed by mistake.</para></item>
        </items>

        <items name="New features">
          <item><para>grep now diagnoses (and fails with exit status 2)
commonly mistyped regular expression like [:space:], [:digit:], etc.
Before, those were silently interpreted as [ac:eps] and [dgit:]
respectively.  Virtually all who make that class of mistake should have
used [[:space:]] or [[:digit:]].  This new behavior is disabled when the
POSIXLY_CORRECT environment variable is set.</para></item>
          <item><para>On systems using glibc, grep can support
equivalence classes.  However, whether they actually work depends on
glibc's locale definitions.</para></item>
        </items>
      </change>

      <change from="2.6.2" to="2.6.3">
        <items name="Bug Fixes">
          <item><para>Searching with grep -F for an empty string in a
multibyte locale would hang grep.</para></item>
          <item><para>PCRE support is once again detected on systems
with &lt;pcre/pcre.h&gt;</para></item>
        </items>
      </change>

      <change from="2.6.1" to="2.6.2">
        <items name="Bug Fixes">
          <item><para>grep -F no longer mistakenly reports a match when
searching for an incomplete prefix of a multibyte
character.</para></item>
          <item><para>grep -F no longer goes into an infinite loop when
it finds a match for an incomplete (non-prefix of a) multibyte
character.</para></item>
          <item><para>Using any of the --include or --exclude* options
would cause a NULL dereference.</para></item>
        </items>

        <items name="Build-related">
          <item><para>configure no longer relies on pkg-config to detect
PCRE support.</para></item>
        </items>
      </change>

      <change from="2.6" to="2.6.1">
        <items name="Bug Fixes">
          <item><para>Character classes could cause a segmentation fault
if they included a multibyte character.</para></item>
          <item><para>Character ranges would not work in single-byte
character sets other than C (for example, ISO-8859-1 or KOI8-R) and some
multi-byte locales. For example, this should print "1", but would find
no match:</para>
          <screen>
$ echo 1 | env -i LC_COLLATE=en_US.UTF-8 grep '[0-9]'
          </screen></item>
          <item><para>The output of grep was incorrect for whole-word
(-w) matches if the patterns included a back-reference.</para></item>
        </items>

        <items name="Portability">
          <item><para>Avoid a link failure on Solaris 8.</para></item>
        </items>
      </change>

      <change from="2.5.4" to="2.6">
        <items name="Speed improvements">
          <item><para>grep is much faster on multibyte character sets,
especially (but not limited to) UTF-8 character sets.  The speed
improvement is also very pronounced with case-insensitive
matches.</para></item>
        </items>

        <items name="Bug Fixes">
          <item><para>Character classes would malfunction in multi-byte
locales when using grep -i. Examples which would print nothing for
LC_ALL=en_US.UTF-8 include:</para>
          <unorderedlist>
            <item><para>for ranges, echo Z | grep -i
'[a-z]'</para></item>
            <item><para>for single characters, echo Y | grep -i
'[y]'</para></item>
            <item><para>for character types, echo Y | grep -i
'[[:lower:]]'</para></item>
          </unorderedlist></item>
          <item><para>grep -i -o would fail to report some matches; grep
-i --color, while not missing any line containing a match, would fail to
color some matches.</para></item>
          <item><para>grep would fail to report a match in a multibyte
character set other than UTF-8, if another match occurred earlier in the
line but started in the middle of a multibyte character.</para></item>
          <item><para>Various bugs in grep -P, caused by expressions
such as [^b] or \S matching newlines, were fixed.  grep -P also supports
the special sequences \Z and \z, and can be combined with the
command-line option -z to perform searches on NUL-separated
records.</para></item>
          <item><para>grep would mistakenly exit with status 1 upon
error, rather than 2, as it is documented to do.</para></item>
          <item><para>Using options like -1 -2 or -1 -v -2 results in
two lines of context (the last value that appears on the command line)
instead twelve (the concatenation of all the values).  This is
consistent with the behavior of options -A/-B/-C.</para></item>
          <item><para>Two new command-line options,
--group-separator=ARGUMENT and --no-group-separator, enable further
customization of the output when -A, -B or -C is being
used.</para></item>
        </items>

        <items name="Other changes">
          <item><para>egrep accepts the -E option and fgrep accepts the
-F option.  If egrep and fgrep are given another of the -E/-F/-G
options, they print a more meaningful error message.</para></item>
        </items>
      </change>

      <change from="2.5.3" to="2.5.4">
        <item><para>This is a bugfix release. No new
features.</para></item>
      </change>

      <change from="2.5.1" to="2.5.3">
        <item><para>The new option --exclude-dir allows to specify a
directory pattern that will be excluded from recursive
grep.</para></item>
        <item><para>Numerous bug fixes.</para></item>
      </change>

      <change from="2.5" to="2.5.1">
        <item><para>Don't fail if we don't have an stdout fd and -q is
used (happens e.g. on calls from hotplug scripts)</para></item>
        <item><para>Don't hang forever if fed with an empty string to
grep for and --color enabled</para></item>
        <item><para>Fix infinite loop on</para>
        <screen>
echo "1 one" | grep -E "[0-9]*" -o
echo "1 one" | grep -E "[0-9]*" --color
        </screen></item>
      </change>

      <note type="compilation">
        <para>GNU grep has been compiled with support for Perl regular
expressions using the PCRE library.</para>
      </note>
    </notes>
  </program>
</programs>
