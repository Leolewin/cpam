<?xml version="1.0"?>
<!DOCTYPE programs SYSTEM "sb-db.dtd">
<programs>
  <program name="gsl" version="1.11" revision="3">
    <build-name>${SB_PROG_NAME}-${SB_PROG_VER}</build-name>

    <install-name>lib${SB_PROG_NAME}111</install-name>

    <sources>
      <source checksum="f28f9de8bec867f3f4f436d3ed80680a"
        checksum-type="md5" size="2700307"
        path="src/gsl-1.11.tar.gz"/>
      <patch checksum="b7629559841be9c82a92d14d1e254955"
        checksum-type="md5" size="1176"
        path="src/gsl-1.11.tww.patch"/>
      <patch checksum="8b433ad7b1207b9c69a81123023e1778"
        checksum-type="md5" size="2438634"
        path="src/gsl-1.11.auto.patch"/>
      <source checksum="6735279f7ee9e037bb8e194d913f6e89"
        checksum-type="md5" size="1109800"
        path="src/gsl-ref.ps.gz"
        noop="1" var="DOC_REF_PS"/>
    </sources>

    <script-header>
<![CDATA[
_datadir="${SB_INSTALL_PREFIX}/share"
_docdir="${SB_INSTALL_PREFIX}/doc"
]]>
    </script-header>

    <test>
<![CDATA[
gmake check

: ignore test failures
]]>
    </test>

    <module name="default">
      <validate>
        <depend program="gsl" module="64bit"
          systype="*-aix*|*-hpux*|*-irix*|*-solaris*?">v==1.11</depend>
      </validate>

      <script-header>
<![CDATA[
_datadir="${SB_INSTALL_PREFIX}/share"
_docdir="${SB_INSTALL_PREFIX}/doc"
]]>
      </script-header>

      <configure>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc CFLAGS="-O2 -qro -qroconst -qlanglvl=ansi \
-qmaxmem=-1 -qarch=ppc"
  LDFLAGS="-Wl,-brtl -Wl,-blibpath:/usr/lib"
  CC_LD_RT="-Wl,-blibpath:" ;;
ia64*-hpux*)
  CC=cc CFLAGS="-z +O2 +Olit=all +Oentrysched +Odataprefetch \
+Onolimit"
  CC_LD_RT="-Wl,+b," ;;
*-hpux11.[01]*)
  CC=cc CFLAGS="-z +O2 +ESlit +DAportable +Oentrysched \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+s,+b," ;;
*-hpux11*)
  CC=cc CFLAGS="-z +O2 +Olit=all +Oentrysched +Odataprefetch \
+Onolimit"
  CC_LD_RT="-Wl,+s,+b," ;;
*-irix*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1429 \
-use_readonly_const -G0 -rdata_shared -DEBUG:optimize_space=ON \
-O2 -OPT:Olimit=0 -OPT:IEEE_NaN_inf=ON -use_readonly_const"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-linux*)
  CFLAGS="-O0 -mtune=pentiumpro -march=pentiumpro"
  CC_LD_RT="-Wl,-rpath," ;;
*-linux*)
  CC_LD_RT="-Wl,-rpath," ;;
*-osf*)
  CC=cc CFLAGS="-O2 -arch ev5 -msym -readonly_strings"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=pentium4"
  CC_LD_RT="-R" ;;
*-solaris2.9|*-solaris2.1?)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-m32 -xarch=sparcvis"
  CC_LD_RT="-R" ;;
*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xO2 -xtarget=ultra2 -xarch=v8plusa"
  CC_LD_RT="-R" ;;
esac

${SHELL} ./configure CC="${CC:-gcc}" CFLAGS="${CFLAGS:--O2}" \
${LDFLAGS+LDFLAGS="${LDFLAGS}"} --enable-static --enable-shared \
--infodir="${SB_INSTALL_PREFIX}/info" \
--libdir=${SB_INSTALL_PREFIX_LIB} \
--mandir="${SB_INSTALL_PREFIX}/man" \
--datarootdir=${_datadir} --datadir=${_datadir} \
--prefix=${SB_INSTALL_PREFIX}

${SB_PATH_SED} -i -e "\
s!-L\(\${libdir}\) !-L\1 ${CC_LD_RT}\1 !" gsl-config

${SB_PATH_SED} -i -e "\
s!-L\(\${libdir}\)!-L\1 ${CC_LD_RT}\1!;" gsl.pc

# rebuild info files
(rm -f doc/*.info doc/*.info-*) 2>/dev/null || :
]]>
      </configure>

      <build>
<![CDATA[
gmake MAKEINFOFLAGS="--no-split"
]]>
      </build>

      <test>
<![CDATA[
gmake check

: ignore test failures
]]>
      </test>

      <install>
<![CDATA[
gmake install

${SB_PATH_INSTALL} -m 755 -o root -g 0 -d ${_docdir} \
${_docdir}/html ${_docdir}/ps ${_docdir}/texinfo

${SB_PATH_INSTALL} -m 644 -o root -g 0 doc/*.texi doc/*.eps \
${_docdir}/texinfo
${SB_PATH_INSTALL} -m 644 -o root -g 0 ${SRC_DOC_REF_PS} ${_docdir}/ps
gzip -d ${_docdir}/ps/gsl-ref.ps.gz

(cd ${_docdir}
 makeinfo --output=${_docdir}/html \
 -I ${SB_BUILD_PREFIX}/doc --html gsl-ref.texi
 ${SB_PATH_CHOWN} -hR 0:0 ${_docdir}/html)
]]>
      </install>
    </module>

    <module name="64bit"
    systype="*-aix*|*-hpux11*|*-irix*|*-solaris2.[789]|*-solaris2.1?">
      <script-header replace="0">
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  _libdir=lib/ppc64 ;;
ia64*-hpux*)
  _libdir=lib/hpux64 ;;
*-hpux*)
  _libdir=lib/pa20_64 ;;
*-irix*)
  _libdir=lib64 ;;
i?86*-solaris*)
  _libdir=lib/amd64 ;;
*-solaris*)
  _libdir=lib/sparcv9 ;;
esac

case "${SB_SYSTYPE}" in
*-aix*)
  export OBJECT_MODE=64 ;;
esac
]]>
      </script-header>

      <configure>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc CFLAGS="-O2 -qro -qroconst -q64 -qlanglvl=ansi -qmaxmem=-1"
  CC_LD_RT="-Wl,-blibpath:"
  LDFLAGS="-Wl,-brtl -Wl,-blibpath:/usr/lib" ;;
ia64*-hpux*)
  CC=cc CFLAGS="-z +O1 +Olit=all +Oentrysched +Odataprefetch +DD64 \
+Onolimit"
  CC_LD_RT="-Wl,+b," ;;
*-hpux*)
  CC=cc CFLAGS="+O2 +Olit=all +Ofltacc +Oentrysched +DD64 \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+s,+b,"

  case "${SB_SYSTYPE}" in
  *-hpux11.31)
    ARGS="--build=hppa64-hp-hpux11.31" ;;
  *-hpux11.23)
    ARGS="--build=hppa64-hp-hpux11.23" ;;
  *-hpux11.11)
    ARGS="--build=hppa64-hp-hpux11.11" ;;
  *-hpux11.00)
    ARGS="--build=hppa64-hp-hpux11.00" ;;
  esac ;;
*-irix*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1429 \
-use_readonly_const -G0 -rdata_shared -DEBUG:optimize_space=ON \
-64 -mips4 -O2 -OPT:Olimit=0"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=opteron -m64 \
-xarch=sse2"
  CC_LD_RT="-R" ;;
*-solaris2.9|*-solaris2.1?)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=generic -m64 \
-xarch=sparc"
  CC_LD_RT="-R" ;;
*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=generic -xarch=v9"
  CC_LD_RT="-R" ;;
esac

${SHELL} ./configure CC="${CC:-gcc}" CFLAGS="${CFLAGS:--O2}" \
${LDFLAGS+LDFLAGS="${LDFLAGS}"} --enable-static --enable-shared \
--datarootdir=${_datadir} --datadir=${_datadir} \
--libdir="${SB_INSTALL_PREFIX}/${_libdir}" ${ARGS+${ARGS}} \
--prefix=${SB_INSTALL_PREFIX}

${SB_PATH_SED} -i -e "\
s!-L\(\${libdir}\)!-L\1 ${CC_LD_RT}\1!;" gsl.pc
]]>
      </configure>

      <test>
<![CDATA[
gmake check

: ignore test failures
]]>
      </test>

      <install>
<![CDATA[
if [ ! -d ${SB_INSTALL_PREFIX}/lib/64 ]; then
  case "${SB_SYSTYPE}" in
  *-aix*|*-hpux*|*-solaris*)
    ln -s ./$(basename ${_libdir}) ${SB_INSTALL_PREFIX}/lib/64 ;;
  *-irix*)
    ln -s ../lib64 ${SB_INSTALL_PREFIX}/lib/64 ;;
  esac
fi

gmake install-libLTLIBRARIES install-pkgconfigDATA
gmake -C cblas install-libLTLIBRARIES
]]>
      </install>

      <uninstall>
<![CDATA[
rm -rf ${SB_INSTALL_PREFIX}/lib/64 ${SB_INSTALL_PREFIX}/${_libdir}
]]>
      </uninstall>
    </module>

    <licenses>
      <license path="gpl-3.license"/>
    </licenses>

    <notes>
      <change from="1.10" to="1.11">
        <item><para>The GSL repository and bug database are now hosted
at Savannah http://savannah.gnu.org/projects/gsl/</para></item>
        <item><para>Upgraded to latest libtool, autoconf and automake
(libtool-2.2, autoconf-2.61, automake-1.10.1)</para></item>
        <item><para>Fixed underflow in ODE adaptive step size
controller that could cause step size to decrease to zero (bug
#21933).</para></item>
        <item><para>Improved the handling of the asymptotic regime in
gsl_sf_bessel_jl.</para></item>
        <item><para>Improved the handling of large arguments in
cumulative distribution functions using the incomplete beta function,
such as gsl_cdf_fdist_P.</para></item>
        <item><para>Fixed overflow bug in gsl_cdf_hypergeometric_{P,Q}
for large arguments (bug #22293).</para></item>
        <item><para>gsl_ran_gaussian_ziggurat now handles generators
with different ranges explicitly, to minimise the number of function
calls required (bug #21820).  Also fixes bug #22446 (rng limit in
gsl_ran_chisq()).</para></item>
        <item><para>Added missing error terms in gsl_sf_exp_mult_e10_e
to prevent the error being underestimated (bug #22041).
</para></item>
        <item><para>Updated some constants to the CODATA 2006
values.</para></item>
        <item><para>The hypergeometric function gsl_sf_hyperg_2F1 now
handles the case where x==1.</para></item>
        <item><para>Fixed a bug in the brent minimiser which prevented
optimal convergence.</para></item>
        <item><para>Added functions for evaluating complex
polynomials</para></item>
        <item><para>The convergence condition for
gsl_multiroots_test_delta now accepts dxi == 0.</para></item>
        <item><para>Improved functions gsl_ldexp and gsl_frexp to
handle the full range of double precision numbers in all
cases.</para></item>
        <item><para>Added new quasi random generators gsl_qrng_halton
and gsl_qrng_reversehalton which support dimensions up to
1229.</para></item>
        <item><para>Added function gsl_multifit_linear_residuals for
computing the residuals of the fit</para></item>
      </change>

      <change from="1.9" to="1.10">
        <item><para>License updated to GNU GPL version
3.</para></item>
        <item><para>Added support for generalized
eigensystems</para></item>
        <item><para>Added function gsl_stats_correlation to compute
Pearson correlation of two datasets</para></item>
        <item><para>Added the new function gsl_sf_expint(n,x) for
computing the n-th order exponential integral.</para></item>
        <item><para>Added functions gsl_vector_isnonneg and
gsl_matrix_isnonneg.</para></item>
        <item><para>Added functions gsl_matrix_subrow and
gsl_matrix_subcolumn</para></item>
        <item><para>Extended Cholesky routines to complex
matrices</para></item>
        <item><para>Added support in gsl_ieee_set_mode for controlling
SSE exceptions and rounding through the MXCSR control word on x86
processors.</para></item>
        <item><para>The autoconf macro AM_PATH_GSL has been renamed to
AX_PATH_GSL, to avoid conflicts with the autoconf
namespace.</para></item>
        <item><para>Improved handling of underflow in
gsl_eigen_symm.</para></item>
        <item><para>The function gsl_multiroot_fdjacobian now returns
the error code GSL_ESING if any of the columns of the computed
jacobian matrix are zero.  This may occur if the step size of the
derivative is too small.</para></item>
        <item><para>Extended the function gsl_sf_beta_inc(a,b,x) to
handle cases where a&lt;0 or b&lt;0.</para></item>
        <item><para>Fixed the round-off error estimate in
gsl_deriv_{central,backwards, forward} to correctly account for
numerical error in the step-size h.</para></item>
        <item><para>Fixed gsl_cdf_beta_Pinv, gsl_cdf_gamma_Pinv,
gsl_cdf_beta_Pinv to avoid returning spurious values for large
parameters when the iteration did not converge.  If the iteration
cannot converge, GSL_NAN is returned.</para></item>
        <item><para>gsl_ran_dirichlet now handles smaller values of
alpha[] without underflow, avoiding a NaN in the returned
value.</para></item>
        <item><para>The SVD routines now avoid underflow in the Schur
decomposition for matrices with extremely small values
&lt;O(1e-150).</para></item>
        <item><para>gsl_complex_pow now returns 0^0=1 (instead of
zero) to match the usual pow function, and handles z^(1,0) and
z^(-1,0) as special cases.</para></item>
        <item><para>Fixed a bug in the set function for multifit lmder
solver so that previous values are cleared correctly.</para></item>
        <item><para>Improved the function gsl_log1p to prevent
possible loss of accuracy caused by optimisations.</para></item>
        <item><para>Improved the convergence test in the Lambert
functions to take account of finite precision and avoid possible
failure to converge.</para></item>
        <item><para>The configure script no longer redefines finite()
to isfinite() as a workaround for missing finite(), as this caused
problems on Solaris. If finite() is not present gsl_finite() will be
used instead.</para></item>
        <item><para>Improved the accuracy of the generalised laguerre
polynomials for large n when alpha=0.</para></item>
        <item><para>The functions gsl_{isnan,isinf,finite} will now
always use the system versions of isnan, isinf and finite if they are
available. Previously the portable GSL implementations were used
whenever the platform supported IEEE comparisons.  The portable
gsl_isinf function now returns -1 instead of +1 for -Inf, in line with
recent versions of the GNU C Library.</para></item>
      </change>

      <change from="1.8" to="1.9">
        <item><para>Fixed the elliptic integrals F,E,P,D so that they
have the correct behavior for phi &gt; pi/2 and phi &lt; 0.  The
angular argument is now valid for all phi.  Also added the complete
elliptic integral gsl_sf_ellint_Pcomp.</para></item>
        <item><para>Added a new BFGS minimisation method
gsl_multimin_fdfminimizer_vector_bfgs2 based on the algorithm given by
R.Fletcher in "Practical Methods of Optimisation" (Second edition).
This requires substantially fewer function and gradient evaluations,
and supercedes the existing BFGS minimiser.</para></item>
        <item><para>The beta functions gsl_sf_beta_e(a,b) and
gsl_sf_lnbeta_e(a,b) now handle negative arguments a,b.  Added new
function gsl_sf_lnbeta_sgn_e for computing magnitude and sign of
negative beta values, analagous to gsl_sf_lngamma_sgn_e.</para></item>
        <item><para>gsl_cheb_eval_mode now uses the same error
estimate as gsl_cheb_eval_err.</para></item>
        <item><para>Improved gsl_sf_legendre_sphPlm_e to avoid
underflow with large arguments.</para></item>
        <item><para>Added updated Knuth generator,
gsl_rng_knuthran2002, from 9th printing of "The Art of Computer
Programming".  Fixes various weaknesses in the earlier version
gsl_rng_knuthran.  See
http://www-cs-faculty.stanford.edu/~knuth/news02.htm</para></item>
        <item><para>The functions gsl_multifit_fsolver_set,
gsl_multifit_fdfsolver_set and gsl_multiroot_fsolver_set,
gsl_multiroot_fdfsolver_set now have a const qualifier for the input
vector x, reflecting their actual usage.</para></item>
        <item><para>gsl_sf_expint_E2(x) now returns the correct value
1 for x==0, instead of NaN.</para></item>
        <item><para>The gsl_ran_gamma function now uses the
Marsaglia-Tsang fast gamma method of gsl_ran_gamma_mt by
default.</para></item>
        <item><para>The matrix and vector min/max functions now always
propagate any NaNs in their input.</para></item>
        <item><para>Prevented NaN occuring for extreme parameters in
gsl_cdf_fdist_{P,Q}inv and gsl_cdf_beta_{P,Q}inv</para></item>
        <item><para>Corrected error estimates for the angular
reduction functions gsl_sf_angle_restrict_symm_err and
gsl_sf_angle_restrict_pos_err. Fixed gsl_sf_angle_restrict_pos to
avoid possibility of returning small negative values.  Errors are now
reported for out of range negative arguments as well as positive.
These functions now return NaN when there would be significant loss of
precision.</para></item>
        <item><para>Corrected an error in the higher digits of M_PI_4
(this was beyond the limit of double precision, so double precision
results are not affected).</para></item>
        <item><para>gsl_root_test_delta now always returns success if
two iterates are the same, x1==x0.</para></item>
        <item><para>A Japanese translation of the reference manual is
now available from the GSL webpage at http://www.gnu.org/software/gsl/
thanks to Daisuke TOMINAGA.</para></item>
        <item><para>Added new functions for basis splines, see the
"Basis Splines" chapter in the GSL Reference Manual for
details.</para></item>
        <item><para>Added new functions for testing the sign of
vectors and matrices, gsl_vector_ispos, gsl_vector_isneg,
gsl_matrix_ispos and gsl_matrix_isneg.</para></item>
        <item><para>Fixed a bug in gsl_sf_lnpoch_e and
gsl_sf_lnpoch_sgn_e which caused the incorrect value 1.0 instead of
0.0 to be returned for x==0.</para></item>
        <item><para>Fixed cancellation error in gsl_sf_laguerre_n for
n &gt; 1e7 so that larger arguments can be calculated without loss of
precision.</para></item>
        <item><para>Improved gsl_sf_zeta_e to return exactly zero for
negative even integers, avoiding less accurate trigonometric
reduction.</para></item>
        <item><para>Fixed a bug in gsl_sf_zetam1_int_e where 0 was
returned instead of -1 for negative even integer
arguments.</para></item>
        <item><para>When the differential equation solver
gsl_odeiv_apply encounters a singularity it returns the step-size
which caused the error code from the user-defined function, as opposed
to leaving the step-size unchanged.</para></item>
        <item><para>Added support for nonsymmetric
eigensystems</para></item>
        <item><para>Added Mathieu functions</para></item>
      </change>

      <change from="1.7" to="1.8">
        <item><para>Added an error check to trap multifit calls with
fewer observations than parameters. Previously calling the multifit
routines with n&lt;p would cause invalid memory access.</para></item>
        <item><para>Added the Debye unit to physical
constants</para></item>
        <item><para>Added cumulative distribution functions for the
discrete distributions, including binomial, poisson, geometric,
negative binomial, pascal and hypergeometric</para></item>
        <item><para>Added the functions gsl_cdf_beta_{Pinv,Qinv} and
gsl_cdf_fdist_{Pinv,Qinv} for computing the inverse of the cumulative
beta and F distributions</para></item>
        <item><para>Added the multilinear fit estimator function
gsl_multifit_linear_est for computing model values and their
errors</para></item>
        <item><para>Avoid division by zero in
gsl_multimin_fdfminimizer_vector_bfgs if the step-size becomes too
small</para></item>
        <item><para>Users on DEC Alpha systems will need to specify
their desired IEEE arithmetic options via CFLAGS when building the
library, as these are no longer added automatically</para></item>
        <item><para>Added new random variate generators
gsl_ran_gaussian_ziggurat and gsl_ran_gamma_mt for the Gaussian and
Gamma distributions based on the Marsaglia-Tsang ziggurat and fast
gamma methods</para></item>
        <item><para>Improved the speed of the exponential power
distribution gsl_ran_exppow</para></item>
        <item><para>Improved the speed of the Gaussian ratio method
by adding quadratic bounds in
gsl_ran_gaussian_ratio_method</para></item>
        <item><para>Added an extra term to the taylor series of the
synchrotron functions gsl_sf_synchrotron_1 and gsl_sf_synchrotron_2
for small x to ensure smooth matching with the chebyshev
expansion</para></item>
        <item><para>The binomial pdf gsl_ran_binomial_pdf now handles
the cases p=0 and p=1 and is more accurate for the case of small p
with k=0</para></item>
        <item><para>Fixed the spherical bessel function
gsl_sf_bessel_jl_e) to limit the use of gsl_sf_bessel_Jnu_asympx_e to
the range x&gt;100*l*l to satisfy he requirement x&gt;&gt;l*l in the
asymptotic expansion</para></item>
        <item><para>The scaled bessel function
gsl_sf_bessel_In_scaled now handles larger arguments x &gt; 1e7
correctly for n &lt; 150 using the uniform asymptotic expansion
instead of the continued fraction expansion</para></item>
        <item><para>The functions gsl_stats_min/max now return NaN if
the data contains NaN. Similarly, the functions
gsl_stats_min/max_index return the index of the first occurring NaN in
the data when it contains a NaN.</para></item>
        <item><para>Fixed an invalid memory access that caused
incorrect results for the special case in periodic cubic spline
interpolation of 3 points</para></item>
        <item><para>Added Debye functions for n=5 and
n=6</para></item>
        <item><para>Added the missing functions gsl_spline_name() and
gsl_spline_min_size()</para></item>
        <item><para>The function gsl_rng_uniform_int(r,n) now returns
an error for n=0, which can occur when passing an unsigned integer
value of 2^32</para></item>
      </change>

      <change from="1.6" to="1.7">
        <item><para>Switched gsl_randist_binomial to use the faster
binomial random variate TPE algorithm by default. The previous
binomial variate algorithm is available as gsl_randist_binomial_knuth.
This will result in a different sequence of binomial variates in
programs using this function.</para></item>
        <item><para>Improved the algorithm for gsl_sf_elljac_e to
avoid cancellation errors near quarter periods</para></item>
        <item><para>Fixed the branch selection in
gsl_sf_gamma_inc_Q_e to avoid inaccurate results for large a,x where
x~=~a</para></item>
        <item><para>The multilinear fitting functions now have forms
which accept a user-specified tolerance for the SVD cutoff and return
the corresponding effective rank of the design matrix</para></item>
        <item><para>The quadratic solvers in poly/ now handle linear
equations gracefully (i.e. quadratrics with a leading coefficient of
zero)</para></item>
        <item><para>The output of "make check" now only shows test
failures by default, to reduce the amount of output. Set the
environment variable GSL_TEST_VERBOSE=1 to display all the output. To
assist debugging, the test number of each failure is shown in square
brackets at the line-end [NNNN]</para></item>
        <item><para>Fixed bugs in gsl_linalg_SV_decomp_jacobi which
caused incorrect results for some input matrices</para></item>
        <item><para>Bessel, coulomb, dilogarithm and legendre_H3d
functions now use hypot internally to avoid overflow when computing
terms like sqrt(1+x*x)</para></item>
        <item><para>The 'Usage' chapter of the reference manual now
explains how to handle deprecated functions using the
GSL_DISABLE_DEPRECATED macro</para></item>
        <item><para>The conflicting enum definitions for 'forward'
and 'backward' in gsl_ftt.h and gsl_wavelet.h are deprecated. User
code should switch to the new definitions gsl_fft_forward,
gsl_fft_backward, gsl_wavelet_forward and gsl_wavelet_backward.
Selectively define GSL_DISABLE_DEPRECATED before including the headers
to use the new definitions on either or both modules.</para></item>
        <item><para>Fixed an error in the the brent minimisation
algorithm. Iterations should now follow Brent's original description
correctly</para></item>
        <item><para>The bound coulomb function gsl_sf_hydrogenicR_e
no longer reports an underflow for exact zeroes of the
wavefunction</para></item>
        <item><para>gsl_linalg_SV_decomp_jacobi now reports an error
for the unimplemented case M&lt;N correctly</para></item>
        <item><para>Fixed conformance test for the SYRK and HERK blas
functions gsl_blas_{s,d,c,z}syrk and gsl_blas_{c,z}herk for non-square
matrices</para></item>
        <item><para>Configure now checks for presence of ieeefp.h if
needed</para></item>
        <item><para>Differential equation solvers now propagate error
codes returned from user-defined functions to the top-level in all
cases</para></item>
        <item><para>Sort functions now avoid an infinite loop if Nans
are present in the input vector. The order of nans in the output is
undefined, although other elements will be sorted
correctly.</para></item>
      </change>
    </notes>

    <changelog>
      <change date="2011 October 15" revision="3"
      author="Gary V. Vaughan" email="gary@thewrittenword.com">
        <item><para>Add support for AIX 7</para></item>
        <item><para>Remove support for AIX 4</para></item>
        <item><para>Remove support for HP/UX 10.20</para></item>
        <item><para>Remove support for RHEL 3</para></item>
        <item><para>Remove support for Solaris 2.6 and
2.7</para></item>
      </change>

      <change date="2010 November 9" revision="2"
      author="Albert Chin-A-Young" email="china@thewrittenword.com">
        <item><para>Add support for RHEL 6</para></item>
      </change>
    </changelog>
  </program>
</programs>
