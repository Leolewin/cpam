<?xml version="1.0"?>
<programs>
<!DOCTYPE programs SYSTEM "sb-db.dtd">
  <program name="tcl" version="8.5.10" revision="1">
    <build-name>${SB_PROG_NAME}${SB_PROG_VER}</build-name>

    <install-name>${SB_PROG_NAME}85</install-name>

    <sources>
      <source checksum="a08eaf8467c0631937067c1948dd326b"
        checksum-type="md5" size="4498413"
        path="src/tcl8.5.10-src.tar.gz"/>
      <patch checksum="715728d7d6a798e23558770f95a4d100"
        checksum-type="md5" size="13609"
        path="src/tcl8.5.10.tww.patch"/>
      <patch checksum="23bd5a40259bc4931887155a41d18ea9"
        checksum-type="md5" size="7830"
        path="src/tcl8.5.10.incpaths.patch"/>
      <patch checksum="deb78b2dcc6194ee787e0100b6666592"
        checksum-type="md5" size="771905"
        path="src/tcl8.5.10.auto.patch"/>
    </sources>

    <script-header>
<![CDATA[
_sysconfdir="${SB_INSTALL_PREFIX}/etc"

case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc CFLAGS="-O2 -qro -qroconst -qmaxmem=-1 -qarch=ppc"

  ARGS="--enable-threads" ;;
ia64*-hpux*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+b,"

  ARGS="--enable-threads" ;;
*-hpux11.[01]*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +DAportable \
+Oentrysched +Odataprefetch +Onolimit"

  ARGS="--enable-threads" ;;
*-hpux*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"

  ARGS="--enable-threads" ;;
*-irix*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1009,1429 \
-use_readonly_const -G0 -rdata_shared -DEBUG:optimize_space=ON \
-O2 -OPT:Olimit=0"

  ARGS="--enable-threads" ;;
*-freebsd*)
  CFLAGS="-O2 -mtune=pentium4 -march=pentium4"

  ARGS="--enable-threads" ;;
i?86*-linux*)
  CFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"

  ARGS="--enable-threads" ;;
*-linux*)
  ARGS="--enable-threads" ;;
*-osf*)
  CC=cc CFLAGS="-O2 -nodtk -arch ev5 -msym -readonly_strings"

  ARGS="--enable-threads" ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=pentium4"

  ARGS="--enable-threads" ;;
*-solaris2.8)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-xarch=v8plusa"

  ARGS="--enable-threads" ;;
*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-m32 -xarch=sparcvis"

  ARGS="--enable-threads" ;;
esac
]]>
    </script-header>

    <build>
<![CDATA[
${SB_PATH_SED} -i -e "\
s!^TCL_CFLAGS_OPTIMIZE=.*!TCL_CFLAGS_OPTIMIZE='${CFLAGS:--O2}'!" \
unix/tclConfig.sh

gmake -C unix
]]>
    </build>

    <module name="default">
      <dependencies>
        <depend var="TCLP" install-name="tcl85p"
          set-var-only="1"/>
        <depend var="TK" install-name="tk85" set-var-only="1"/>
      </dependencies>

      <validate>
        <depend program="tcl" module="64bit"
          systype="*-aix*|*-hpux*|*-irix*|*-solaris*">v==8.5.10</depend>
        <depend program="tcl" module="64bit-static"
          systype="*-aix*|*-hpux*|*-irix*|*-solaris*">v==8.5.10</depend>
        <depend program="tcl" module="static">v==8.5.10</depend>
        <depend program="itcl" module="8.5.10">v==3.4</depend>
        <depend program="tcllib" module="8.5.10">v==1.11.1</depend>
        <depend program="tclx" module="8.5.10">v==8.4</depend>
      </validate>

      <script-header>
<![CDATA[
_sysconfdir="${SB_INSTALL_PREFIX}/etc"

case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc CFLAGS="-O2 -qro -qroconst -qmaxmem=-1 -qarch=ppc"

  ARGS="--enable-threads" ;;
ia64*-hpux*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+b,"

  ARGS="--enable-threads" ;;
*-hpux11.[01]*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +DAportable \
+Oentrysched +Odataprefetch +Onolimit"

  ARGS="--enable-threads" ;;
*-hpux*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"

  ARGS="--enable-threads" ;;
*-irix*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1009,1429 \
-use_readonly_const -G0 -rdata_shared -DEBUG:optimize_space=ON \
-O2 -OPT:Olimit=0"

  ARGS="--enable-threads" ;;
*-freebsd*)
  CFLAGS="-O2 -mtune=pentium4 -march=pentium4"

  ARGS="--enable-threads" ;;
i?86*-linux*)
  CFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"

  ARGS="--enable-threads" ;;
*-linux*)
  ARGS="--enable-threads" ;;
*-osf*)
  CC=cc CFLAGS="-O2 -nodtk -arch ev5 -msym -readonly_strings"

  ARGS="--enable-threads" ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=pentium4"

  ARGS="--enable-threads" ;;
*-solaris2.8)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-xarch=v8plusa"

  ARGS="--enable-threads" ;;
*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-m32 -xarch=sparcvis"

  ARGS="--enable-threads" ;;
esac
]]>
      </script-header>

      <configure>
<![CDATA[
cd unix
${SHELL} ./configure CC="${CC:-gcc}" CFLAGS="${CFLAGS:--O2}" \
--enable-shared --enable-langinfo tcl_cv_cc_visibility_hidden=no \
${ARGS+${ARGS}} --sysconfdir=${_sysconfdir} \
--libdir=${SB_INSTALL_PREFIX_LIB} \
--mandir="${SB_INSTALL_PREFIX}/man" --prefix=${SB_INSTALL_PREFIX}

chmod +x ldHP
]]>
      </configure>

      <build>
<![CDATA[
${SB_PATH_SED} -i -e "\
s!^TCL_CFLAGS_OPTIMIZE=.*!TCL_CFLAGS_OPTIMIZE='${CFLAGS:--O2}'!" \
unix/tclConfig.sh

gmake -C unix
]]>
      </build>

      <install>
<![CDATA[
gmake -C unix install

# Fix runtime path to tcl shared library
case "${SB_SYSTYPE}" in
hppa*-hpux*)
  (rm unix/tclsh
   gmake -C unix TCL_BUILD_LIB_SPEC="-L${SB_INSTALL_PREFIX_LIB} \
     -ltcl8.5" tclsh)

  ${SB_PATH_INSTALL} -m 755 -o root -g 0 unix/tclsh \
  ${SB_INSTALL_PREFIX}/bin/tclsh8.5 ;;
esac

# Fix path to ldAix, ldHP
case "${SB_SYSTYPE}" in
*-aix*)
  case "${SB_SYSTYPE}" in
  *-aix*)
    _ldcmd=ldAix ;;
  esac

  ${SB_PATH_SED} -i -e "\
s!${SB_BUILD_PREFIX}/unix/${_ldcmd}!\
${SB_INSTALL_PREFIX}/lib/tcl8.5/${_ldcmd}!" \
${SB_INSTALL_PREFIX}/lib/tclConfig.sh
  ${SB_PATH_CHMOD} 755 ${SB_INSTALL_PREFIX}/lib/tcl8.5/${_ldcmd} ;;
esac

# default include.paths configuration file
${SB_PATH_INSTALL} -m 755 -o root -g 0 -d ${_sysconfdir} \
${_sysconfdir}/include.paths.d
${SB_PATH_INSTALL} -m 644 -o root -g 0 /dev/null \
${_sysconfdir}/include.paths

# install path for Tcl's include.paths.d
cat >${_sysconfdir}/include.paths.d/99-tk <<_EOT_
${SB_VAR_TK}/lib/tk8.5
_EOT_
]]>
      </install>

      <uninstall>
        <remove-db-entry program="itcl"
          module="8.5.10-iwidgets">v==3.2.1</remove-db-entry>
        <remove-db-entry program="itcl" module="8.5.10">v==3.2.1</remove-db-entry>
        <remove-db-entry program="tcllib" module="8.5.10">v==1.11.1</remove-db-entry>
        <remove-db-entry program="tclx" module="8.5.10">v==8.4</remove-db-entry>
      </uninstall>
    </module>

    <module name="64bit"
    systype="*-aix*|*-hpux*|*-irix*|*-solaris*">
      <script-header>
<![CDATA[
_sysconfdir="${SB_INSTALL_PREFIX}/etc"

case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc_r CFLAGS="-O2 -q64 -qro -qroconst -qmaxmem=-1"
  BINDIR="bin/ppc64" LIBDIR="lib/ppc64" ;;
ia64*-hpux*)
  CC=cc CFLAGS="+O2 +Ofltacc +Olit=all +Oentrysched +DD64 \
+Odataprefetch +Onolimit"
  BINDIR="bin/hpux64" LIBDIR="lib/hpux64" ;;
*-hpux*)
  CC=cc CFLAGS="+O2 +Ofltacc +Olit=all +Oentrysched +DD64 \
+Odataprefetch +Onolimit"
  BINDIR="bin/pa20_64" LIBDIR="lib/pa20_64"

  case "${SB_SYSTYPE}" in
  *-hpux11.31)
    ARGS="--host=hppa64-hp-hpux11.31" ;;
  *-hpux11.23)
    ARGS="--host=hppa64-hp-hpux11.23" ;;
  *-hpux11.11)
    ARGS="--host=hppa64-hp-hpux11.11" ;;
  *-hpux11.00)
    ARGS="--host=hppa64-hp-hpux11.00" ;;
  esac ;;
*-irix*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1009,1429 \
-use_readonly_const -G0 -rdata_shared -DEBUG:optimize_space=ON \
-64 -mips4 -O2 -OPT:Olimit=0"
  BINDIR="bin/mips4" LIBDIR="lib64" ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=opteron -m64 \
-xarch=sse2"
  BINDIR="bin/amd64" LIBDIR="lib/amd64" ;;
*-solaris2.8)
  CC=cc CFLAGS="-mr -Qn -xO2 -xtarget=generic -xarch=v9"
  BINDIR="bin/sparcv9" LIBDIR="lib/sparcv9" ;;
*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=generic -m64 \
-xarch=sparc"
  BINDIR="bin/sparcv9" LIBDIR="lib/sparcv9" ;;
esac
]]>
      </script-header>

      <configure>
<![CDATA[
cd unix
${SHELL} ./configure CC="${CC:-gcc}" CFLAGS="${CFLAGS:--O2}" \
--enable-shared --enable-langinfo --enable-threads \
--enable-64bit ${ARGS+${ARGS}} --sysconfdir=${_sysconfdir} \
--bindir="${SB_INSTALL_PREFIX}/${BINDIR}" \
--libdir="${SB_INSTALL_PREFIX}/${LIBDIR}" \
--mandir="${SB_INSTALL_PREFIX}/man" --prefix=${SB_INSTALL_PREFIX}
]]>
      </configure>

      <build>
<![CDATA[
${SB_PATH_SED} -i -e "\
s!^TCL_CFLAGS_OPTIMIZE=.*!TCL_CFLAGS_OPTIMIZE='${CFLAGS:--O2}'!" \
unix/tclConfig.sh

gmake -C unix
]]>
      </build>

      <install>
<![CDATA[
if [ ! -d ${SB_INSTALL_PREFIX}/bin/64 ]; then
  ln -s ./$(basename ${BINDIR}) ${SB_INSTALL_PREFIX}/bin/64
fi
if [ ! -d ${SB_INSTALL_PREFIX}/lib/64 ]; then
  case "${SB_SYSTYPE}" in
  *-aix*|*-hpux*|*-solaris*)
    ln -s ./$(basename ${LIBDIR}) ${SB_INSTALL_PREFIX}/lib/64 ;;
  *-irix*)
    ln -s ../lib64 ${SB_INSTALL_PREFIX}/lib/64 ;;
  esac
fi

gmake -C unix install-binaries

# Fix path to ldAix and force 64-bit object files
case "${SB_SYSTYPE}" in
*-aix*)
  ${SB_PATH_SED} -i -e "\
s!${SB_BUILD_PREFIX}/unix/ldAix \${CC}!\
${SB_INSTALL_PREFIX}/lib/tcl8.5/ldAix \${CC} -X64!" \
${SB_INSTALL_PREFIX}/${LIBDIR}/tclConfig.sh ;;
esac
]]>
      </install>

      <uninstall>
<![CDATA[
rm ${SB_INSTALL_PREFIX}/${BINDIR}/tclsh8.5

rm ${SB_INSTALL_PREFIX}/${LIBDIR}/libtcl8.5.s[lo] \
${SB_INSTALL_PREFIX}/${LIBDIR}/libtclstub8.5.a \
${SB_INSTALL_PREFIX}/${LIBDIR}/tclConfig.sh

rmdir ${SB_INSTALL_PREFIX}/${BINDIR}
rm ${SB_INSTALL_PREFIX}/bin/64

rmdir ${INSTALL_PREFIX}/${LIBDIR} && rm ${INSTALL_PREFIX}/lib/64

:
]]>
      </uninstall>
    </module>

    <module name="static">
      <script-header>
<![CDATA[
_sysconfdir="${SB_INSTALL_PREFIX}/etc"

case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc CFLAGS="-O2 -qro -qroconst -qmaxmem=-1 -qarch=ppc"

  ARGS="--enable-threads" ;;
ia64*-hpux*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+b,"

  ARGS="--enable-threads" ;;
*-hpux11.[01]*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +DAportable \
+Oentrysched +Odataprefetch +Onolimit"

  ARGS="--enable-threads" ;;
*-hpux*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"

  ARGS="--enable-threads" ;;
*-irix*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1009,1429 \
-use_readonly_const -G0 -rdata_shared -DEBUG:optimize_space=ON \
-O2 -OPT:Olimit=0"

  ARGS="--enable-threads" ;;
*-freebsd*)
  CFLAGS="-O2 -mtune=pentium4 -march=pentium4"

  ARGS="--enable-threads" ;;
i?86*-linux*)
  CFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"

  ARGS="--enable-threads" ;;
*-linux*)
  ARGS="--enable-threads" ;;
*-osf*)
  CC=cc CFLAGS="-O2 -nodtk -arch ev5 -msym -readonly_strings"

  ARGS="--enable-threads" ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=pentium4"

  ARGS="--enable-threads" ;;
*-solaris2.8)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-xarch=v8plusa"

  ARGS="--enable-threads" ;;
*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-m32 -xarch=sparcvis"

  ARGS="--enable-threads" ;;
esac
]]>
      </script-header>

      <configure>
<![CDATA[
cd unix
${SHELL} ./configure CC="${CC:-gcc}" CFLAGS="${CFLAGS:--O2}" \
--disable-shared --enable-langinfo tcl_cv_cc_visibility_hidden=no \
${ARGS+${ARGS}} --sysconfdir=${_sysconfdir} \
--libdir=${SB_INSTALL_PREFIX_LIB} \
--mandir="${SB_INSTALL_PREFIX}/man" --prefix=${SB_INSTALL_PREFIX}

chmod +x ldHP
]]>
      </configure>

      <build>
<![CDATA[
${SB_PATH_SED} -i -e "\
s!^TCL_CFLAGS_OPTIMIZE=.*!TCL_CFLAGS_OPTIMIZE='${CFLAGS:--O2}'!" \
unix/tclConfig.sh

gmake -C unix
]]>
      </build>

      <install>
<![CDATA[
${SB_PATH_INSTALL} -m 755 -o root -g 0 -d ${SB_INSTALL_PREFIX_LIB}

${SB_PATH_INSTALL} -o root -g 0 unix/libtcl8.5.a \
${SB_INSTALL_PREFIX_LIB}
]]>
      </install>

      <uninstall>
<![CDATA[
rm -rf ${SB_INSTALL_PREFIX_LIB}/libtcl8.5.a
]]>
      </uninstall>
    </module>

    <module name="64bit-static"
    systype="*-aix*|*-hpux*|*-irix*|*-solaris*">
      <script-header>
<![CDATA[
_sysconfdir="${SB_INSTALL_PREFIX}/etc"

case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc_r CFLAGS="-O2 -q64 -qro -qroconst -qmaxmem=-1"
  BINDIR="bin/ppc64" LIBDIR="lib/ppc64" ;;
ia64*-hpux*)
  CC=cc CFLAGS="+O2 +Ofltacc +Olit=all +Oentrysched +DD64 \
+Odataprefetch +Onolimit"
  BINDIR="bin/hpux64" LIBDIR="lib/hpux64" ;;
*-hpux*)
  CC=cc CFLAGS="+O2 +Ofltacc +Olit=all +Oentrysched +DD64 \
+Odataprefetch +Onolimit"
  BINDIR="bin/pa20_64" LIBDIR="lib/pa20_64"

  case "${SB_SYSTYPE}" in
  *-hpux11.31)
    ARGS="--host=hppa64-hp-hpux11.31" ;;
  *-hpux11.23)
    ARGS="--host=hppa64-hp-hpux11.23" ;;
  *-hpux11.11)
    ARGS="--host=hppa64-hp-hpux11.11" ;;
  *-hpux11.00)
    ARGS="--host=hppa64-hp-hpux11.00" ;;
  esac ;;
*-irix*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1009,1429 \
-use_readonly_const -G0 -rdata_shared -DEBUG:optimize_space=ON \
-64 -mips4 -O2 -OPT:Olimit=0"
  BINDIR="bin/mips4" LIBDIR="lib64" ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=opteron -m64 \
-xarch=sse2"
  BINDIR="bin/amd64" LIBDIR="lib/amd64" ;;
*-solaris2.8)
  CC=cc CFLAGS="-mr -Qn -xO2 -xtarget=generic -xarch=v9"
  BINDIR="bin/sparcv9" LIBDIR="lib/sparcv9" ;;
*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=generic -m64 \
-xarch=sparc"
  BINDIR="bin/sparcv9" LIBDIR="lib/sparcv9" ;;
esac
]]>
      </script-header>

      <configure>
<![CDATA[
cd unix
${SHELL} ./configure CC="${CC:-gcc}" CFLAGS="${CFLAGS:--O2}" \
--disable-shared --enable-langinfo --enable-threads \
--enable-64bit ${ARGS+${ARGS}} --sysconfdir=${_sysconfdir} \
--libdir="${SB_INSTALL_PREFIX}/${LIBDIR}" \
--mandir="${SB_INSTALL_PREFIX}/man" --prefix=${SB_INSTALL_PREFIX}
]]>
      </configure>

      <build>
<![CDATA[
${SB_PATH_SED} -i -e "\
s!^TCL_CFLAGS_OPTIMIZE=.*!TCL_CFLAGS_OPTIMIZE='${CFLAGS:--O2}'!" \
unix/tclConfig.sh

gmake -C unix
]]>
      </build>

      <install>
<![CDATA[
if [ ! -d ${SB_INSTALL_PREFIX}/lib/64 ]; then
  case "${SB_SYSTYPE}" in
  *-aix*|*-hpux*|*-solaris*)
    ln -s ./$(basename ${LIBDIR}) ${SB_INSTALL_PREFIX}/lib/64 ;;
  *-irix*)
    ln -s ../lib64 ${SB_INSTALL_PREFIX}/lib/64 ;;
  esac
fi

${SB_PATH_INSTALL} -m 755 -o root -g 0 -d \
${SB_INSTALL_PREFIX}/${LIBDIR}
${SB_PATH_INSTALL} -m 555 -o root -g 0 unix/libtcl8.5.a \
${SB_INSTALL_PREFIX}/${LIBDIR}
]]>
      </install>

      <uninstall>
<![CDATA[
rm ${SB_INSTALL_PREFIX}/${LIBDIR}/libtcl8.5.a 

rmdir ${INSTALL_PREFIX}/${LIBDIR} && rm ${INSTALL_PREFIX}/lib/64

:
]]>
      </uninstall>
    </module>

    <notes>
      <change from="8.5.9" to="8.5.10">
        <items name="Bug fixes">
          <item><para>[3056775] race condition in Win
sockets</para></item>
          <item><para>Safe Tcl handling of empty path
lists</para></item>
          <item><para>[3098302] crash in compiled
[catch]</para></item>
          <item><para>[3142026] GrowEvaluationStack OBOE</para></item>
          <item><para>[3072640] protect writes to ::error*
variables</para></item>
          <item><para>[3200987,3192636] parser buffer
overruns</para></item>
          <item><para>[3202905] failed intrep release of interp
result</para></item>
          <item><para>[3202171] repair [namespace inscope]
optimizer</para></item>
          <item><para>Fixes from libtommath 0.42.0
release</para></item>
          <item><para>[3216070] [load] extension from embed Tcl
apps</para></item>
          <item><para>[3285472] intrep corruption in [string
reverse]</para></item>
          <item><para>[2662380] crash when variable append trace
unsets</para></item>
          <item><para>[3285375] Buffer overflow in [concat] (POTENTIAL
INCOMPATIBILITY)</para></item>
          <item><para>[3173086] Crash parsing long lists</para></item>
          <item><para>[2715421] surplus \n in POST</para></item>
          <item><para>Update http module to 2.7.6</para></item>
          <item><para>tzdata updated to Olson's
tzdata2011g</para></item>
          <item><para>Update msgcat module to 1.4.4</para></item>
          <item><para>[3185407] cmd resolution epoch
flaw</para></item>
          <item><para>[3315098] mem leak generating double string
rep</para></item>
          <item><para>Update tcltest module to 2.3.3</para></item>
          <item><para>Update platform module to 1.0.10</para></item>
        </items>

        <items name="Enhancements">
          <item><para>msgcat internal improvements</para></item>
          <item><para>dict-&gt;list w/o string rep
generation</para></item>
          <item><para>Restore TclFormatInt for
performance</para></item>
          <item><para>Tcl_PrintDouble performance
improvements</para></item>
        </items>

        <items name="New Features">
          <item><para>DEB_HOST_MULTIARCH support</para></item>
        </items>

        <items name="Platform support">
          <item><para>OpenBSD build improvements</para></item>
          <item><para>Revisions to support rpm 4.4.2</para></item>
        </items>

        <items name="Internal changes">
          <item><para>revised TclFindElement() interface</para></item>
        </items>

        <item><para>[3081184] improved TIP 280
performance</para></item>
        <item><para>[3085863] Update Unicode data to 6.0</para></item>
        <item><para>New command:
[tcltest::loadIntoSlaveInterpreter]</para></item>
      </change>

      <change from="8.5.8" to="8.5.9">
        <items name="Bug fixes">
          <item><para>[2891556] encoding finalization
crash</para></item>
          <item><para>[2913616] msgcat: improved safe interp
support</para></item>
          <item><para>Update msgcat module to 1.4.3</para></item>
          <item><para>[2913625] [info script/nameof] in safe
interps</para></item>
          <item><para>[2891362] enable time limit in child
interps</para></item>
          <item><para>[2895741] enable min(), max() in safe
interps</para></item>
          <item><para>[2918610] [file rootname]
corruption</para></item>
          <item><para>[2932421] less [format %s] shimmer</para></item>
          <item><para>[2918110] [chan postevent] crash</para></item>
          <item><para>[2942697] faster match: some pathological regexp
patterns</para></item>
          <item><para>[2939073] [array unset] unset trace
crash</para></item>
          <item><para>[2933089] [info frame] shared lit
trouble</para></item>
          <item><para>[2949740] [open |noSuch rb] crash</para></item>
          <item><para>[2954959] get sign of abs($zero)
right</para></item>
          <item><para>[2936225] stop [chan copy] to slow channel
consuming all memory with buffer backup</para></item>
          <item><para>[2383005] [return -errorcode] reject
non-list</para></item>
          <item><para>[2976504] broken fstatfs() call</para></item>
          <item><para>[2978773] refchan mem preservation</para></item>
          <item><para>[3004007] dict/list shimmer w/o string rep
loss</para></item>
          <item><para>platform: several fixes for 64 bit
systems</para></item>
          <item><para>Update platform module to 1.0.9</para></item>
          <item><para>[3016135] [clock format] in he_IL
locale</para></item>
          <item><para>[3019634] support errno.h changes in MSVC++
2010</para></item>
          <item><para>[3037525] crash deleting vars @ callframe
pop</para></item>
          <item><para>[3034840] mem corrupt when refchan loses
interp</para></item>
          <item><para>[2826551] line-sensitive matching in
regexp</para></item>
          <item><para>[3048354] buffer overflow detect in Fortify
build</para></item>
          <item><para>tzdata updated to Olson's
tzdata2010l</para></item>
          <item><para>[3057639] no read traces [lappend arr(elem) ...]
(POTENTIAL INCOMPATIBILITY)</para></item>
        </items>

        <items name="Enhancements">
          <item><para>rewrite of the Safe Base commands</para></item>
          <item><para>Haiku, CYGWIN support improvements</para></item>
          <item><para>permit [fcopy] of &gt; 2**31 bytes</para></item>
          <item><para>-errorcode for [expr] domain
errors</para></item>
          <item><para>Win [load] use LOAD_WITH_ALTERED_SEARCH_PATH
(POTENTIAL INCOMPATIBILITY)</para></item>
        </items>
      </change>

      <change from="8.5.7" to="8.5.8">
        <items name="Bug fixes">
          <item><para>[2446662] uniformly declare EOF on RST on
sockets</para></item>
          <item><para>[1028264] delay WSACleanup() from under our
feet</para></item>
          <item><para>[2785893] find command in deleted
namespace</para></item>
          <item><para>Update platform module to 1.0.5</para></item>
          <item><para>[2798543] incorrect [expr] integer **
results</para></item>
          <item><para>[2801413] overflow in [format]</para></item>
          <item><para>[2802881] corrected compile env
context</para></item>
          <item><para>[2806622] Win: bad tcl_platform(user)
value</para></item>
          <item><para>[2819200] underflow settings on MIPS
systems</para></item>
          <item><para>[2820349] plug event leak in
notifier</para></item>
          <item><para>[2826248] crash in
Tcl_GetChannelHandle</para></item>
          <item><para>[2830354] overflow in [format]</para></item>
          <item><para>[2827000] reflected channels can signal
EGAIN</para></item>
          <item><para>[2806250] EIAS violation in ~foo
pathnames</para></item>
          <item><para>[2837800] [glob */foo] return
./~x/foo</para></item>
          <item><para>nested event loop notifier w/TkAqua
Cocoa</para></item>
          <item><para>[info frame] account for continuation
lines</para></item>
          <item><para>[2845535] overflows in [format]</para></item>
          <item><para>improved error message in tcltest</para></item>
          <item><para>Update tcltest module to 2.3.2</para></item>
          <item><para>[2849860] http handle "quoted" charset
value</para></item>
          <item><para>[2569449] Core Foundation memory bug in
Tiger</para></item>
          <item><para>[1941434] broken tclTomMath.h
includes</para></item>
          <item><para>[2871908] leaked hash table</para></item>
          <item><para>[2874678] bignum leak in [dict
incr]</para></item>
          <item><para>[2629338] crash in var unset
traces</para></item>
          <item><para>[2107634] extend [read] and [gets] to Tcl string
limits</para></item>
          <item><para>[2882561] Haiku OS signal support</para></item>
          <item><para>Broken DST applied EU rules to US
zones</para></item>
          <item><para>[2800740] halved bignum memory on 64-bit systems
(POTENTIAL</para></item>
          <item><para>INCOMPATIBILITY)</para></item>
          <item><para>tzdata updated to Olson's
tzdata2009q</para></item>
          <item><para>[2854929] TM search path support in Safe
Base</para></item>
          <item><para>[2888099] [close] loses ENOSPC
error</para></item>
          <item><para>[2891171] RFC 3986 compliance for ? in
URL</para></item>
          <item><para>Update http module to 2.7.5</para></item>
          <item><para>[2895565] [fcopy -size] miscounts when
converting encodings</para></item>
        </items>

        <items name="Platform support">
          <item><para>account for ia64_32</para></item>
        </items>
      </change>

      <change from="8.5.6" to="8.5.7">
        <items name="Bug fixes">
          <item><para>[2481670] [clock add] error
message</para></item>
          <item><para>[2458202] exit crash with [chan create]d
channel</para></item>
          <item><para>[2519474] Tcl_FindCommand() bug exposed by
oo</para></item>
          <item><para>[2561746] [string repeat] overflow
crash</para></item>
          <item><para>[2571597] [file pathtype /a] wrong
result</para></item>
          <item><para>[2688184] memleak in [file
normalize]</para></item>
          <item><para>[2597185] crash in
Tcl_AppendStringToObj</para></item>
          <item><para>[2710920] [file dirname|tail /foo/]
errors</para></item>
          <item><para>[2603158] Tcl_AppendObjToObj: append to self
crash</para></item>
          <item><para>[2561794,2669109,2494093,2553906] string
overflow</para></item>
          <item><para>[2570363] unsafe [eval]s in
tcltest</para></item>
          <item><para>[26245326] [http::geturl] connection
failures</para></item>
          <item><para>[1961211]  Darwin [load]
back-compatibility</para></item>
        </items>

        <items name="Platform support">
          <item><para>MSVC and _WIN64</para></item>
          <item><para>more Darwin kernel patterns</para></item>
          <item><para>better tools for BSD ports</para></item>
          <item><para>translate SIGINFO where defined
(BSD)</para></item>
        </items>

        <items name="New features">
          <item><para>CONFIG_INSTALL_DIR - where tclConfig.sh
goes</para></item>
          <item><para>Darwin: embeddable CoreFoundation
notifier</para></item>
          <item><para>tzdata updated to Olson's
tzdata2009f</para></item>
        </items>
      </change>

      <note type="usage">
        <para>The default Tcl module search path directories are:</para>
        <screen>
${SB_INSTALL_BASE}/tcl85p/lib/itcl3.2
${SB_INSTALL_BASE}/tcl85p/lib/itk3.2
${SB_INSTALL_BASE}/tcl85p/lib/iwidgets4.0.1
${SB_INSTALL_BASE}/tcl85p/lib/tcllib
${SB_INSTALL_BASE}/tcl85p/lib/tclx8.4
        </screen>

        <para>The default search path is set by the
<command>TCLLIBPATH</command> environment variable. The executable
wrapper for <command>tclsh8.4</command> sets the variable to the paths
above.</para>
        <para>The following 3rd-party modules are provided: itcl
3.2.1, tcllib 1.11.1, tclX 8.4.</para>
      </note>
    </notes>
  </program>
</programs>
