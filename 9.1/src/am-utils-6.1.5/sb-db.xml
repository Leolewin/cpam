<?xml version="1.0"?>
<programs>
<!DOCTYPE programs SYSTEM "sb-db.dtd">
  <program name="am-utils" version="6.1.5" revision="3">
    <build-name>${SB_PROG_NAME}-${SB_PROG_VER}</build-name>

    <install-name>amutils615</install-name>

    <sources>
      <source checksum="bc07514f4316511ace5087b9e6dc3771"
        checksum-type="md5" size="1922684"
        path="src/am-utils-6.1.5.tar.gz"/>
      <patch checksum="e154cfa4361f4b69b9cf509c485facbf"
        checksum-type="md5" size="3468"
        path="src/am-utils-6.1.5.git-hpux-11.23.patch"/>
      <patch checksum="c7f5ca61ef4b96bd595e5dd7bccc3687"
        checksum-type="md5" size="5462"
        path="src/am-utils-6.1.5.hpux-11.31.patch"/>
      <patch checksum="e8642dcc7de5915d3639c08b9fc18889"
        checksum-type="md5" size="389"
        path="src/am-utils-6.1.5.debian-use-nfs-mount.patch"/>
      <patch checksum="20e0e9fa5877d0cfb041f6f5e6294b43"
        checksum-type="md5" size="547"
        path="src/am-utils-6.1.5.debian-nfs-mount-version.patch"/>
      <patch checksum="b6bfbef4bafaa799b8095e679ea34beb"
        checksum-type="md5" size="4623"
        path="src/am-utils-6.1.5.tww.patch"/>
      <patch checksum="b5ea7933c2869e1ca6105010c78d8294"
        checksum-type="md5" size="992624"
        path="src/am-utils-6.1.5.auto.patch"/>
    </sources>

    <dependencies>
      <depend program="bison" install-name="bison24"
        add-path="prepend" type="build">v&gt;=2.4.3</depend>
      <depend program="flex" var="FLEX" install-name="flex25"
        add-path="prepend">v&gt;=2.5.35</depend>
      <depend program="perl" add-path="prepend">v==5.12.2</depend>
    </dependencies>

    <script-header>
<![CDATA[
_sysconfdir="/etc${SB_INSTALL_PREFIX}"
_localstatedir="/var${SB_INSTALL_PREFIX}"
_docdir="${SB_INSTALL_PREFIX}/doc"
]]>
    </script-header>

    <configure>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc CFLAGS="-O2 -qro -qroconst -qmaxmem=-1 -qarch=ppc"
  LDFLAGS="-Wl,-brtl -Wl,-blibpath:/usr/lib"
  CC_LD_RT="-Wl,-blibpath:" ;;
ia64*-hpux*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+b,"
  LDFLAGS="-Wl,+nodefaultrpath"

  ARGS="ac_cv_header_tcpd_h=no ac_cv_lib_wrap_hosts_ctl=no" ;; 
*-hpux11.[01]*)
  CC=cc CFLAGS="-Ae -z +O2 +Ofltacc +Olit=all +DAportable \
+Oentrysched +Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+s,+b," ;;
*-hpux11*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+s,+b,"

  ARGS="ac_cv_header_tcpd_h=no ac_cv_lib_wrap_hosts_ctl=no" ;;
*-irix*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1009,1429 \
-use_readonly_const -G0 -rdata_shared -DEBUG:optimize_space=ON \
-O2 -OPT:Olimit=0"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-linux*)
  CFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"
  CC_LD_RT="-Wl,-rpath," ;;
*-linux*)
  CC_LD_RT="-Wl,-rpath," ;;
*-osf*)
  CC=cc CFLAGS="-O2 -arch ev5 -msym -readonly_strings"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=pentium4"
  CC_LD_RT="-R" ;;
*-solaris2.8)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-xarch=v8plusa"
  CC_LD_RT="-R" ;;
*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-m32 -xarch=sparcvis"
  CC_LD_RT="-R" ;;
esac

${SHELL} ./configure CC="${CC:-gcc}" CFLAGS="${CFLAGS:--O2}" \
LDFLAGS="-L${SB_VAR_FLEX_LIB} ${CC_LD_RT}${SB_VAR_FLEX_LIB} \
${LDFLAGS+${LDFLAGS}}" --enable-shared --enable-static \
--localstatedir=${_localstatedir} --sysconfdir=${_sysconfdir} \
--with-ldap=no ${ARGS+${ARGS}} --prefix=${SB_INSTALL_PREFIX}

# fix path to amd.conf
${SB_PATH_SED} -i -e "\
s!/etc/amd.conf!${_sysconfdir}/amd.conf!" \
amd/amd.8 amd/get_args.c doc/am-utils.texi

# rebuild info files
[ -f doc/am-utils.info ] && rm doc/am-utils.info*
]]>
    </configure>

    <build>
<![CDATA[
gmake MAKEINFOFLAGS="--no-split"
]]>
    </build>

    <install>
<![CDATA[
gmake install

${SB_PATH_INSTALL} -m 755 -o root -g 0 -d ${SB_INSTALL_PREFIX}/contrib
mv ${SB_INSTALL_PREFIX}/sbin/ctl-amd ${INSTALL_PREFIX}/sbin/ctl-hlfsd \
${SB_INSTALL_PREFIX}/contrib

${SB_PATH_INSTALL} -m 755 -o root -g 0 -d ${_sysconfdir}
${SB_PATH_INSTALL} -m 644 -o root -g 0 /dev/null ${_sysconfdir}/amd.conf
cat >${_sysconfdir}/amd.conf <<_EOT_
##
## Global options
##

[ global ]
restart_mounts = no
unmount_on_exit = no
log_file = syslog

## Without these, the startup script will not be able to
## shut down amd automatically. Please do not remove.
print_pid = yes
pid_file = ${_localstatedir}/run/amd.pid

_EOT_

${SB_PATH_INSTALL} -m 755 -o root -g 0 -d ${_localstatedir}
${SB_PATH_INSTALL} -m 755 -o root -g 0 -d ${_localstatedir}/run

${SB_PATH_INSTALL} -m 755 -o root -g 0 -d ${_docdir}/texinfo
${SB_PATH_INSTALL} -m 644 -o root -g 0 doc/am-utils.texi \
doc/version.texi ${_docdir}/texinfo

${SB_PATH_INSTALL} -m 644 -o root -g 0 README.autofs ${_docdir}
]]>
    </install>

    <uninstall>
<![CDATA[
rm -rf ${SB_INSTALL_PREFIX} ${_sysconfdir} ${_localstatedir}
]]>
    </uninstall>

    <licenses>
      <license>
        <para skip="0">Copyright (c) 1997-2006 Erez Zadok</para>
        <para skip="0">Copyright (c) 1989 Jan-Simon Pendry</para>
        <para skip="0">Copyright (c) 1989 Imperial College of Science,
Technology &amp; Medicine</para>
        <para skip="0">Copyright (c) 1989 The Regents of the
University of California.</para>
        <para>All rights reserved.</para>
        <para>This code is derived from software contributed to
Berkeley by Jan-Simon Pendry at Imperial College, London.</para>
        <para>Redistribution and use in source and binary forms, with
or without modification, are permitted provided that the following
conditions are met:</para>
        <orderedlist>
          <item><para>Redistributions of source code must retain the
above copyright notice, this list of conditions and the following
disclaimer.</para></item>
          <item><para>Redistributions in binary form must reproduce
the above copyright notice, this list of conditions and the following
disclaimer in the documentation and/or other materials provided with
the distribution.</para></item>
          <item><para>All advertising materials mentioning features or
use of this software must display the following acknowledgment:</para>
          <indent>
            <para>This product includes software developed by the
University of California, Berkeley and its contributors, as well as
the Trustees of Columbia University.</para>
          </indent></item>
          <item><para>Neither the name of the University nor the names
of its contributors may be used to endorse or promote products derived
from this software without specific prior written
permission.</para></item>
        </orderedlist>

        <para>THIS SOFTWARE IS PROVIDED BY THE REGENTS AND
CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</para>
      </license>
    </licenses>

    <notes>
      <change from="6.1.4" to="6.1.5">
        <items name="Bug Fixes">
          <item><para>handle old-style filehandles correctly (for
mount points longer than 28 chars)</para></item>
          <item><para>don't turn off attribute cache for regular NFS
mounts (improves performance)</para></item>
          <item><para>detect G/DBM support via gdbm_compat library
(Debian)</para></item>
          <item><para>detect NDBM support in libc (FreeBSD
6)</para></item>
        </items>

        <item><para>New amd.conf global parameter:
nfs_allow_any_interface. By default it is set to 'no' which means that
Amd accepts local NFS packets only from 127.0.0.1. If set to 'yes'
then Amd will accept local NFS packets from any local interface; this
is useful on hosts that may have multiple interfaces where the system
is forced to send all outgoing packets (even those bound to the same
host) via an address other than 127.0.0.1.</para></item>
        <item><para>Add support for specifying the host to match in
the mount selectors netgrp and netgrpd. Now one can use either
netgrp(&lt;group-name&gt;) or
netgrp(&lt;group-name&gt;,&lt;host-name&gt;).</para></item>
      </change>

      <change from="6.1.3" to="6.1.4">
        <items name="Bug Fixes">
          <item><para>one serious memory leak in amfs_generic (caught
by Coverity)</para></item>
          <item><para>assorted potential (but rare) NULL pointer
dereferences (Coverity)</para></item>
          <item><para>correctly print nfs_args-&gt;addr info
(sin_family/port/addr)</para></item>
          <item><para>pawd should resolve path repeatedly until no
more to do</para></item>
          <item><para>use-after-free bug in amfs_lookup_mntfs
(Coverity)</para></item>
        </items>

        <item><para>Support new mount options for type:=pcfs mounts:
longname, nowin95, shortname, user=N, group=N, mask=N, and
dirmask=N.</para></item>
        <item><para>Two new amd.conf [global] parameters:
nfs_retry_interval_toplvl and nfs_retransmit_counter_toplvl. They are
similar to nfs_retry_interval and nfs_retransmit_counter, and allow
you to set the "timeo" and "retrans" NFS mount parameters,
respectively, but ONLY for Amd's top-level mounts (which are NFSv2/UDP
currently). This is useful because on some systems you may wish to
set these parameters differently than the OS default, so as to better
tune Amd's responsiveness under heavy scheduler loads.</para></item>
      </change>

      <change from="6.1.2.1" to="6.1.3">
        <items name="Bug Fixes">
          <item><para>amq should de-register properly on
exit</para></item>
          <item><para>convert all sprintf to safer
xsnprintf</para></item>
          <item><para>convert all strcat to safer
xstrlcat</para></item>
          <item><para>convert all strcpy to safer
xstrlcpy</para></item>
          <item><para>fix three buffer overruns in expand_op
(amd/opts.c)</para></item>
          <item><para>pawd was trying UDP only, now try TCP if UDP
failed</para></item>
        </items>

        <item><para>Moved pawd's path-matching functionality into Amd,
where it can be done a lot more efficiently (we no longer need to
construct and send the whole mounted tree, only to match small parts
of it). This will lessen the CPU and network load on systems that use
pawd heavily, and also minimize the chance that we exceed default or
hard-coded UDP/TCP RPC packet sizes.</para></item>
      </change>

      <change from="6.1.2" to="6.1.2.1">
        <items name="Bug Fixes">
          <item><para>properly turn off the attrcache in freebsd and
openbsd</para></item>
          <item><para>can turn off attrcache on netbsd, but need
kernel patch, see README.attrcache</para></item>
          <item><para>pawd goes into an infinite loop on
type:=auto</para></item>
          <item><para>consistent search for file system mnttab/mount
names</para></item>
        </items>
      </change>

      <change from="6.1.1" to="6.1.2">
        <item><para>MAJOR BUG FIXES: Synchronize Amd's view of its
file systems with the kernel's NFS client-side DNLC/dcache. Amd
changes its view when it reloads maps (automatically or via "amq -f")
because new map entries could be added, old one removed, or existing
ones changed. Amd also changes its view when a simple entry has
expired and was flushed, or was forced out via "amq -u". Amd was not
updating the mtime of its parent directory (often the amd automount
point): this resulted in the kernel re-using cached entries, which are
now possibly stale. Many users had seen this problem in the form of
occasional ESTALE errors, or dangling/broken automounted symlinks,
especially on systems under heavy use. To tell the kernel to ignore
(flush) its old entries for an directory, the mtime of the directory
must be updated (monotonically incremented). Amd was indeed doing so
in several places, but unfortunately it was using time(2) which only
provides a one-second resolution clock: this was fine a decade ago,
but not good enough on today's fast systems; using only a one-second
resolution clock meant that on busy systems that invoke Amd many times
a second, some rapidly changing entries do not get flushed from the
kernel, and the kernel thus uses stale entries. The solution to all of
these was to rework the whole clock timer updates to use
gettimeofday(), using a micro-second resolution timer, and to use that
time whenever Amd needs to update an mtime/atime/ctime of any node.
Finally, we now update the mtime in places that were never updated
before (when a whole map is flushed or a single entry times
out).</para></item>
        <item><para>Warning: some OSs, we discovered, are incapable of
turning off their NFS attribute cache entirely. This means that Amd
cannot work fully reliability on these systems, not under heavy load.
This is documented in detail in the README.attrcache file included
with this distribution.</para></item>
        <item><para>Include test-attrcache script to test the NFS
attribute cache behavior using Amd.</para></item>
        <item><para>Tell syslog not to log automatically to
/dev/console; it's unfriendly. If user really wants to, they can set
it in /etc/syslog.conf.</para></item>
      </change>

      <change from="6.1" to="6.1.1">
        <items name="Bug Fixes">
          <item><para>safer mtab handling for Linux (locks + handles
/proc/mounts)</para></item>
          <item><para>small compile problems on Solaris 6
(rpcvers_t)</para></item>
          <item><para>small compile problems on HPUX 10
(h_errno)</para></item>
          <item><para>possibly missing definition of INADDR_NONE in
wire.c</para></item>
          <item><para>extern for sleep(3) may be missing on older gcc
systems</para></item>
          <item><para>updated nfs_args structure on
aix4.</para></item>
          <item><para>possible running off end of exported_ap[]
array.</para></item>
          <item><para>buffer overflow in pawd.</para></item>
          <item><para>aix4 clean build.</para></item>
          <item><para>use strlcat/snprintf in a few places for
safety.</para></item>
          <item><para>recover from IP address change of a down NFS
server</para></item>
          <item><para>don't discard restarted mntfs that was
used.</para></item>
        </items>

        <item><para>New amd.conf global parameter: forced_unmounts
(default to "no"). If set to "yes," and the client OS supports forced
or lazy unmounts, then Amd will attempt to use them if it gets any of
three serious error conditions when trying to unmount an existing
mount point or mount on top of one: EIO, ESTALE, or EBUSY. This could
be useful to recover from serious conditions such as hardware failure
of mounted disks, or NFS servers which are down permanently, were
migrated, or changed their IP address. Only "type:=toplvl" mounts
hung with EBUSY are forcibly unmounted using this option: this is
useful to ensure that a new Amd can mount itself even if a previous
Amd died and left its mount points hung, or to force Amd to shutdown
cleanly, even if some processes (i.e., user shells) have their CWD on
Amd's own mount point. This functionality is available for Linux,
BSD44 systems, Solaris, OSF/1, and partially for AIX.</para></item>
        <item><para>New amd.conf global parameter: truncate_log
(default to "no"). If set to "yes", then Amd will truncate the log
file (if it's a regular file) on startup. This could be useful when
conducting extensive testing on Amd maps (or Amd itself) and you don't
want to see log data from a previous run in the same
file.</para></item>
      </change>

      <change from="6.1.rc7" to="6.1">
        <items name="Bug Fixes">
          <item><para>set timeo/retrans for type:=nfs only if user
asked</para></item>
        </items>
      </change>

      <change from="6.1.rc6" to="6.1rc7">
        <item><para>Remove alloca from am-utils, and rewrite code that
used it</para></item>
        <item><para>Assorted minor code cleanups</para></item>
        <items name="Bug Fixes">
          <item><para>getwire() detects networks correctly on
OSF/1</para></item>
        </items>
      </change>

      <change from="6.1.rc5" to="6.1rc6">
        <items name="Bug Fixes">
          <item><para>minor compile error of nfs_subr.c on some
systems.</para></item>
          <item><para>AIX 5.2/5.3 PPC compile fixes.</para></item>
        </items>
      </change>

      <change from="6.1.rc4" to="6.1rc5">
        <item><para>For NetBSD systems, $os used to say "netbsdelf1"
or "netbsdelf2." Now it just says "netbsd."</para></item>
        <items name="Bug Fixes">
          <item><para>silly (but nasty) null pointer
dereferencing</para></item>
          <item><para>improved fix for '-opts' syntax for resetting
map options</para></item>
        </items>
      </change>

      <change from="6.1.rc3" to="6.1rc4">
        <items name="Bug Fixes">
          <item><para>check for "macosx" in M4 macros
properly</para></item>
          <item><para>minor memory leaks (thanks to
Valgrind)</para></item>
        </items>
      </change>

      <change from="6.1.rc2" to="6.1rc3">
        <item><para>Minor fix to configure.in. Reran bootstrap to get
a working configure script that indeed checks for certain Linux
nfs/autofs headers.</para></item>
      </change>

      <change from="6.1.rc1" to="6.1rc2">
        <item><para>New amd.conf global parameter: normalize_slashes
(default to "yes"). If set to "no," then Amd will not condense
repeated slashes or remove trailing ones from strings representing
pathnames. This is sometimes useful with SMB mounts, which often
require multiple slash characters in pathnames.</para></item>
        <item><para>Using a custom version of strlcpy instead of
strncpy (but only where it makes sense), to minimize string overflow
changes. Audited all use of strncpy/strlcpy to ensure
safety.</para></item>
        <item><para>On Apple machines, use "powerpc" for $arch,
instead of "Power Macintosh". Also, use sw_vers to find out more
appropriate OS name (macosx) and OS version (10.3.x) than uname(3)
reports.</para></item>
        <items name="Bug Fixes">
          <item><para>pawd handles all file systems</para></item>
          <item><para>fix double-free in type:=nfsx</para></item>
          <item><para>timeo and retrans shouldn't be set for
type:=toplvl</para></item>
          <item><para>fix inconsistency in handling filehandle
generation number</para></item>
          <item><para>document proper use of hosts.allow (don't
spawn)</para></item>
          <item><para>single dash '-' map entry now resets the
defaults</para></item>
        </items>
      </change>

      <change from="6.1.b4" to="6.1rc1">
        <item><para>support for executable maps ala Sun automounter.
Set map_type=exec in amd.conf, and map_name to a program/script that
takes a key as argv[1], and returns key-value pair on stdout. See also
exec_map_timeout [global] parameter which defines how many seconds
(default 10 sec) Amd will wait for an executable map program to return
output before timing out. See am-utils manual for full
details.</para></item>
        <item><para>new amd.conf parameter "nfs_allow_insecure_port".
Used to work around bugs in certain kernels, which cause them to try
and talk to amd from unprivileged ports.</para></item>
        <item><para>new amd.conf parameter: localhost_address. Used to
override the localhost (often 127.0.0.1) address Amd uses to connect
to for the local NFS server and RPC server.</para></item>
        <item><para>new amd.conf [global] parameter: domain_strip
(default "yes"). If set to "no," Amd won't strip domain names from
host names, which is useful if your Amd maps are served by multiple
domains and you want to tell from the logs which exact host did
what.</para></item>
        <item><para>new amd.conf [global] parameter: auto_attrcache
(default to 0). Sets Amd's own NFS attribute-cache timeout in seconds.
A value of 0 turns off attribute caching, meaning that Amd will be
consulted via a kernel-RPC each time someone stat's the mount point
(which could be abused as a denial-of-service attack). If you're
concerned, set this to something greater than zero (a value of 1
second is currently recommended). Warning: if you set this option to
any non-zero value, especially a large value, and you get ESTALE
errors on your particular OS, then set this value back to 0
seconds.</para></item>
        <item><para>four new amd.conf [global] parameters, similar to
nfs_retry_interval and nfs_retransmit_counter, which allow you to set
the "timeo" and "retrans" NFS mount parameters, respectively. Now you
can set those parameters globally and separately for UDP vs. TCP,
using any of these: nfs_retry_interval_udp, nfs_retransmit_counter_udp
nfs_retry_interval_tcp, and nfs_retransmit_counter_tcp.</para></item>
        <item><para>new amd.conf [global] parameter:
preferred_amq_port. Allows you to select the UDP+TCP port that Amd's
amq service will use with the RPC portmapper. Useful with firewalls
and NAT'ed environments.</para></item>
        <item><para>new amd.conf option "debug_mtab_file". Allows user
to define the mtab file during debug-mtab mode. The default path is
"/tmp/mnttab".</para></item>
        <item><para>new function selector xhost(ARG) which will match
ARG against the current host name. This works even if ARG is a CNAME
(unlike the host==ARG selector).</para></item>
        <item><para>support restarting the automounter's own mount
points (only over NFS, for now).</para></item>
        <item><para>fully support WebNFS as per RFC 2054. It now tries
v3/TCP first, falling back to v2/UDP if this doesn't work. The
"webnfs" pseudo-mount options has been renamed (again) to "public" to
match Solaris 2.</para></item>
        <item><para>restructured the restarting of already-mounted
filesystems, in the process also fixing a problem with restarting nfsx
components.</para></item>
        <item><para>support escaped slashes, needed for SMB mounts.
Use '\\\/\\\/' in a string to get a double slash.</para></item>
        <item><para>amd -v now prints domain, host, and hostd values:
foo, example.com, and foo.example.com, respectively.</para></item>
        <item><para>On Linux, if umount(2) failed with EIO or ESTALE,
try the new umount2(2) system call with MNT_FORCE+MNT_DETACH. This
could be quite helpful to unmounting hung mount points that otherwise
cannot be fixed without a reboot.</para></item>
        <item><para>The ping=N mount option now works. N defaults to
30 seconds for all NFS servers. It can now be set to any value for
each server separately. Setting it to a large value can reduce the
amount of NFS_NULL chatter on your network considerably, especially in
large sites. Setting this to -1 will turn off pings for that server
(useful in NFS-HA setups). Setting N to 0 will pick the default ping
value in Amd (currently 30 seconds). Note that if you have multiple
Amd entries using the same file server, and each entry sets a
different value of N, then each time Amd mounts a new entry, the ping
value will be re-evaluated (and updated, turned off, or turned back on
as needed). Note that NFS_NULL pings are sent for both UDP and TCP
mounts, because even a hung TCP mount can cause user processes to
hang.</para></item>
        <item><para>file system inheritance code restructured, so it's
no longer a pseudo file system, but actually integrated into Amd (as
it should have been)</para></item>
        <item><para>for type:=program, the "umount" program doesn't
have to be defined; it'll default to "unmount ${fs}"</para></item>
        <item><para>"amd -v" now prints the distribution name if it's
known (e.g., rh9, fc3, suse8, etc.)</para></item>
        <items name="Bug Fixes">
          <item><para>various memory management problems (leaks,
etc)</para></item>
          <item><para>fixed nfsx support</para></item>
          <item><para>fixed a race involving late replies to network
queries which arrive after the file system has already been
mounted</para></item>
          <item><para>recognize pcfs_args_t fields in FreeBSD
5</para></item>
          <item><para>recognize other mount types in pawd: host,
linkx, and nfsx</para></item>
          <item><para>allow exactly one of umount and unmount in
type:=program</para></item>
          <item><para>race condition between calls to mntctl() on
AIX</para></item>
          <item><para>plock/mlockall wasn't inherited by fork(); moved
after daemonizing</para></item>
          <item><para>fix inconsistency between Socket and TLI RPC
timeouts.</para></item>
          <item><para>don't warn when couldn't rmdir a dir with a
readonly ancestor.</para></item>
          <item><para>avoid hangs of amd in ctl-amd (must chdir to
/)</para></item>
          <item><para>workaround occasional daemonizing problems
(parent won't die)</para></item>
          <item><para>don't hang on exit if debug_options=mtab was
used</para></item>
          <item><para>utimeout=N mount option works with non-nfs types
(ufs, pcfs, etc.)</para></item>
          <item><para>SEGV (null pointer deref) in type:=program and
type:=cachefs</para></item>
          <item><para>unmount_on_exit of type:=program caused amd to
hang</para></item>
          <item><para>match amd2ldif output with
ldap.schema</para></item>
        </items>
      </change>

      <change from="6.1.b3" to="6.1b4">
        <item><para>speed up the recovery of inherited (restarted)
filesystems by using the proper waiting channels</para></item>
        <item><para>added support for mounting webnfs filesystems, see
entry below. It doesn't do any probing currently, so it will default
to v2/UDP unless another version and/or protocol are explicitly
specified.</para></item>
        <item><para>pseudo-mount option "ignore_portmapper" renamed to
"webnfs"</para></item>
        <items name="Bug Fixes">
          <item><para>properly time out autofs filesystems on
Linux</para></item>
          <item><para>link mounts with relative targets weren't
working on autofs</para></item>
          <item><para>the link side of the nfsl file system wasn't
working on autofs</para></item>
          <item><para>umount code was accidentally turning all
symlinks into directories during attempted umounts, causing stale
filehandles</para></item>
          <item><para>various minor build fixes for "impossible"
configurations</para></item>
          <item><para>prevent ldap code from dereferencing a null
pointer</para></item>
        </items>
      </change>

      <change from="6.1.b2" to="6.1b3">
        <item><para>new amd.conf option autofs_use_lofs, set by
default to "yes". "yes" means using in-place mounts (lofs, bind
mounts, etc.), thus utilizing one of Autofs's main advantages. "no"
means using symlinks instead, which has the "/bin/pwd" problem and
certain efficiency issues on Solaris 2.6+ and is also not supported on
Solaris Autofs v1 and derivatives; however, the autofs code that uses
symlinks is simpler and more thoroughly tested.</para></item>
        <item><para>new amd.conf option map_default (can be used in
[global] and overwritten in the per-map section). This will overwrite
the /defaults entry of the map itself, to allow people to set defaults
in amd.conf (useful when you cannot control your amd maps, or you'd
rather not modify them globally).</para></item>
        <item><para>for type:=program, you can use either unmount:=XXX
or umount:=XXX (but not both). This new 'unmount' name is an alias for
convenience.</para></item>
        <item><para>fixed the "multiple matching sub-entries in a map
entry" semantics to try mounting those sub-entries one by one, until
either one succeeds or all fail. The old semantics of trying to mount
everything in parallel and use the one that mounted fastest hasn't
worked in a long time; in fact, 6.0 currently simply ignores all but
the first matching sub-entry.</para></item>
        <item><para>made amd fail much faster (instantly, in fact) if
the remote server doesn't have a functional portmapper or NFS service.
Also reduced the total timeout to 3 seconds for a completely downed
server.</para></item>
        <item><para>new pseudo-mount option "ignore_portmapper"; not
very useful currently, will make more sense when we also accept
hard-coded ports for mountd and nfsd.</para></item>
        <item><para>amd will no longer query the portmapper for all
possible NFS versions and protocols if the user requested to use
specific ones.</para></item>
        <item><para>increased the major number for the library, so
that 6.0 and 6.1 can't share libraries anymore.</para></item>
        <item><para>support tcpd/libwrap tcpwrappers. If your system
supports libwrap, then you can use /etc/hosts.allow and
/etc/hosts.deny to control remote Amq access to Amd. The new amd.conf
parameter use_tcpwrappers is set to "yes" by default.</para></item>
        <item><para>support NULL entries in Hesiod maps, if they start
with a "."</para></item>
        <item><para>code reorganization</para></item>
        <item><para>documentation cleanup, corrections, and general
updates. Better references to all man pages. Support newer texi2html.
Proper building of DVI and PSI files. Allow building of am-utils
manual in one long Web page.</para></item>
        <items name="Bug Fixes">
          <item><para>autofs mode on Linux was segfaulting on a silly
error (and noone complained, which proves that I'm probably the only
one testing these beta releases, tsk tsk)</para></item>
          <item><para>fixed handling of host entries over
autofs.</para></item>
          <item><para>fixed handling of nfsl entries over
autofs.</para></item>
          <item><para>the matching in find_mntfs() was causing
problems for inherited filesystems, so make an exception for them.
Tighten the matching even more, to take into account the f/s type as
well.</para></item>
          <item><para>recognize xlatecookie mnttab option on
netbsd</para></item>
          <item><para>document Solaris lex bug (use
flex)</para></item>
          <item><para>document AIX 5.x NFS bug (need
patch)</para></item>
          <item><para>document Solaris 8 autofs version change (need
to fix system header file)</para></item>
          <item><para>ensure lex doesn't run out of output
slots</para></item>
          <item><para>support GNU flex-2.5.31+</para></item>
          <item><para>force version.texi to be rebuilt
unconditionally</para></item>
          <item><para>mk-amd-map open db file exclusively
(security)</para></item>
          <item><para>turn off maintainer-only rules in
distros</para></item>
          <item><para>don't core dump if log_file is NULL
(Solaris)</para></item>
          <item><para>don't include malloc.h if stdlib.h
exists</para></item>
          <item><para>recognize file system failures (EIO) upon
reading file maps</para></item>
        </items>
      </change>

      <change from="6.1.b1" to="6.1b2">
        <item><para>new mount flag "softlookup", which determines how
amd will respond to lookups of NFS shares already mounted (return a
valid symlink or return EIO). The default, if "softlookup" is not
specified, depends on whether the mount is "soft" or
"hard".</para></item>
        <item><para>return EIO instead of ENOENT if amd thinks the
server is down; this allows well-written applications to sleep and
retry the operation</para></item>
        <item><para>automatic support for loop mounts on Linux
(deprecates the "loop" mount option)</para></item>
        <item><para>new amd.conf parameter ldap_proto_version (default
2) for setting the LDAP protocol version to use</para></item>
        <items name="Bug Fixes">
          <item><para>redundancy mode (multiple servers for the same
share) wasn't working</para></item>
          <item><para>non-autofs mode had some rather nasty hangs on
downed file servers</para></item>
          <item><para>double-free'ing problem in assign_error_mntfs
and free_continuation</para></item>
          <item><para>free'ing non-malloc'ed memory in
amfs_auto_mount</para></item>
          <item><para>late server ping replies were not
ignored</para></item>
          <item><para>amfs_auto_lookup_mntfs wasn't propagating errors
up to callers</para></item>
          <item><para>autofs-v4 on Solaris 9 works</para></item>
          <item><para>handle std{in,out,err} correctly when releasing
controlling tty (for real this time)</para></item>
          <item><para>don't cast pointers between enum_t and u_long,
it doesn't work on 64-bit big-endian platforms</para></item>
          <item><para>fix compile problem with mlockall() on
Darwin</para></item>
        </items>
      </change>

      <change from="6.1.a5" to="6.1b1">
        <item><para>Work around IBM's NFSv3 ABI change in
aix4.3</para></item>
        <item><para>trivial regression test suite started: run "make
check" on a built am-utils to execute tests. Currently only one test
which checks to see if "amd -v" executes correctly.</para></item>
        <item><para>new command line option "amd -A arch" to overwrite
the value of $arch</para></item>
        <items name="Autofs">
          <item><para>Partial support for Sun Autofs v1</para></item>
          <item><para>Documented known problems with Sun Autofs v1
(possible deadlocks)</para></item>
          <item><para>Fixes for Sun Autofs v2/v3</para></item>
          <item><para>Preliminary support for Sun Autofs v4 (Solaris
9)</para></item>
          <item><para>Kernel-based expirations for Linux
Autofs</para></item>
        </items>

        <items name="Bug Fixes">
          <item><para>Linux loop mounts of ISO images</para></item>
          <item><para>assorted LDAP fixes</para></item>
          <item><para>strerror not found on some systems</para></item>
          <item><para>small fixes for hpux9 and aix43</para></item>
          <item><para>exclude ldap/hesiod support unless both
libraries+headers exist</para></item>
          <item><para>fully support "xlatecookie" mount
option</para></item>
          <item><para>security: if -D noamq option, don't listen on
socket.</para></item>
        </items>
      </change>

      <change from="6.1.a4" to="6.1a5">
        <item><para>browsable_dirs support for Solaris autofs,
*without* mount storms!</para></item>
        <item><para>new amd.conf global parameter: map_reload_interval
(default 1 hour). Determines how often Amd checks to see if maps have
changed at the source (and then reloading only those that have
changed).</para></item>
        <item><para>"amd -v" now lists bug-reporting
address</para></item>
        <item><para>assorted code cleanups and porting to use latest
versions of GNU Autotools.</para></item>
        <item><para>opts:=loop works for type:=cdfs, for mounting
ISO-9660 files on Linux</para></item>
        <items name="Bug Fixes">
          <item><para>fixed sublink support in Linux autofs (broken in
a4)</para></item>
          <item><para>hlfsd takes uid 0's home from root's passwd
entry instead of defaulting to '/'</para></item>
          <item><para>(not really our bug) Linux ignores the
microseconds field in mtime, so hlfsd and amd need to increment the
seconds field all the time to prevent symlink caching</para></item>
          <item><para>generic map parsing bug which was rejecting a
numerical mount option if it was the last option in the
string.</para></item>
          <item><para>file descriptor leak in Linux
autofs.</para></item>
          <item><para>"nolock" is an NFS mount option, not a generic
one.</para></item>
          <item><para>use mlockall(2) on systems that have it, for
plock=yes. Now pinning Amd's pages in memory works on
Linux.</para></item>
          <item><para>ctl-amd/ctl-hlfsd correctly refer to
@sysconfdir@ for alternate location of configuration
files</para></item>
        </items>
      </change>

      <change from="6.1.a3" to="6.1a4">
        <item><para>full autofs support for Solaris 2.[67], including
symlinks, sublinks and direct mounts</para></item>
        <item><para>fixed mount/umount deadlock in Linux
autofs</para></item>
        <item><para>fixed sublinks in Linux autofs</para></item>
        <item><para>support for network/netmask pairs in the
in_network() selector</para></item>
        <item><para>support disabling LDAP and Hesiod support using
configure</para></item>
        <item><para>forward-ported all the fixes from the stable
branch (MacOS X support, minor Linux fixes)</para></item>
        <item><para>bind-mount support for type==link and type==lofs
with Linux 2.4+</para></item>
        <item><para>FiST lofs support under Linux (also in
6.0.6s2)</para></item>
      </change>

      <change from="6.1.a2" to="6.1a3">
        <item><para>compile fixes for Linux 2.4-ac and
2.2.19pre+</para></item>
        <item><para>Darwin/Rhapsody/OS X support</para></item>
        <item><para>much reduced configure script (works around a bug
in Darwin's cpp)</para></item>
      </change>

      <change from="6.1.a1" to="6.1a2">
        <item><para>working autofs support for Solaris 2.[67], but
incomplete</para></item>
        <item><para>forward-ported all the changes up to
6.0.5s2</para></item>
        <item><para>removed support for amq -M</para></item>
      </change>

      <change from="6.0.x" to="6.1a1">
        <item><para>working autofs (v3 and v4) support for
Linux!</para></item>
        <item><para>forward-ported all the changes in
6.0.4s4</para></item>
        <items name="Bug Fixes">
          <item><para>client-side fail-over to NFSv2/UDP</para></item>
        </items>
      </change>

      <note type="configuration">
        <para>The default configuration file is
"<command>/etc${SB_INSTALL_PREFIX}/amd.conf</command>".</para>
        <para>The startup script depends on the
<command>print_pid</command> variable being set to
"<command>yes</command>" to shut down AMD after startup. The PID is
saved to the value of the "<command>pid_file</command>" variable,
"<command>/var${SB_INSTALL_PREFIX}/run/amd.pid</command>" by default.</para>
      </note>
    </notes>

    <changelog>
      <change date="2012 January 21" revision="3"
      author="Albert Chin-A-Young" email="china@thewrittenword.com">
        <item><para>Update compiler flags on HPUX from +Onofltacc to
+Ofltacc.</para></item>
        <item><para>Update bison dependency from 2.3 to
2.4.3</para></item>
        <item><para>Update perl dependency from 5.8.8 to
5.12.2</para></item>
      </change>

      <change date="2009 December 12" revision="2"
      author="Albert Chin-A-Young" email="china@thewrittenword.com">
        <item><para>Add support for RHEL5 (UTS_RELEASE no longer
defined in &lt;linux/version.h&gt;)</para></item>
      </change>
    </changelog>
  </program>
</programs>
