<?xml version="1.0"?>
<!DOCTYPE programs SYSTEM "sb-db.dtd">
<programs>
  <program name="jpeg" version="8b" revision="1">
    <build-name>${SB_PROG_NAME}-${SB_PROG_VER}</build-name>

    <install-name>lib${SB_PROG_NAME}8</install-name>

    <sources>
      <source checksum="e022acbc5b36cd2cb70785f5b575661e"
        checksum-type="md5" size="965125"
        path="src/jpegsrc.v8b.tar.gz"/>
      <patch checksum="f36483cc2c6e055c3fc64bc07934c369"
        checksum-type="md5" size="1808"
        path="src/jpeg-8b.tww.patch"/>
      <patch checksum="bd70ae7b26e402f510fca78f8de61c05"
        checksum-type="md5" size="1564511"
        path="src/jpeg-8b.auto.patch"/>
    </sources>

    <module name="default">
      <validate>
        <depend program="jpeg" module="64bit"
          systype="*-aix*|*-hpux*|*-irix*|*-solaris*">v==8b</depend>
      </validate>

      <configure>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc CFLAGS="-O2 -qro -qroconst -qmaxmem=-1 -qarch=ppc"
  CC_LD_RT="-Wl,-blibpath:"
  LDFLAGS="-Wl,-brtl" ;;
ia64*-hpux*)
  CC=cc CFLAGS="+O2 +Olit=all +Ofltacc +Oentrysched \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+b," ;;
*-hpux11.[01]*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +DAportable \
+Oentrysched +Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+s,+b," ;;
*-hpux*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+s,+b," ;;
*-irix*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1009,1429 \
-use_readonly_const -G0 -rdata_shared -DEBUG:optimize_space=ON \
-O2 -OPT:Olimit=0"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-linux*)
  CFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"
  CC_LD_RT="-Wl,-rpath," ;;
*-linux*)
  CC_LD_RT="-Wl,-rpath," ;;
*-osf*)
  CC=cc CFLAGS="-O2 -arch ev5 -msym -readonly_strings"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=pentium4"
  CC_LD_RT="-R" ;;
*-solaris2.8)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-xarch=v8plusa"
  CC_LD_RT="-R" ;;
*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-m32 -xarch=sparcvis"
  CC_LD_RT="-R" ;;
esac

${SHELL} ./configure CC="${CC:-gcc}" CFLAGS="${CFLAGS:--O2}" \
LDFLAGS="${LDFLAGS+${LDFLAGS}}" --enable-shared --enable-static \
--mandir="${SB_INSTALL_PREFIX}/man" --prefix=${SB_INSTALL_PREFIX}

${SB_PATH_SED} -i -e "\
s!-L\(\${libdir}\)!-L\1 ${CC_LD_RT}\1!;" jpeg.pc

# hack version info on IRIX for backward compatibility
case "${SB_SYSTYPE}" in
*-irix*)
  ${SB_PATH_SED} -i -e "\
s|^JPEG_LIB_VERSION.*|JPEG_LIB_VERSION = 61|" Makefile
  ${SB_PATH_SED} -i -e "\
s|verstring_prefix=sgi|verstring_prefix=|; \
/^soname_spec/ { s|\\\\\$major||; }" libtool
  ;;
esac
]]>
      </configure>

      <test>
<![CDATA[
gmake check
]]>
      </test>

      <install>
<![CDATA[
# Create directory hierarchy first
${SB_PATH_INSTALL} -m 755 -o root -g 0 -d ${SB_INSTALL_PREFIX} \
${SB_INSTALL_PREFIX}/bin ${SB_INSTALL_PREFIX}/include \
${SB_INSTALL_PREFIX}/lib ${SB_INSTALL_PREFIX}/man/man1

gmake install
]]>
      </install>
    </module>

    <module name="64bit"
    systype="*-aix*|*-hpux*|*-irix*|*-solaris*">
      <script-header>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  _libdir=lib/ppc64 ;;
ia64*-hpux*)
  _libdir=lib/hpux64 ;;
*-hpux*)
  _libdir=lib/pa20_64 ;;
*-irix*)
  _libdir=lib64 ;;
i?86*-solaris*)
  _libdir=lib/amd64 ;;
*-solaris*)
  _libdir=lib/sparcv9 ;;
esac

case "${SB_SYSTYPE}" in
*-aix*)
  export OBJECT_MODE=64 ;;
esac
]]>
      </script-header>

      <configure>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc CFLAGS="-O2 -q64 -qro -qroconst -qmaxmem=-1"
  CC_LD_RT="-Wl,-blibpath:"
  LDFLAGS="-Wl,-brtl" ;;
ia64*-hpux*)
  CC=cc CFLAGS="+O2 +Ofltacc +Olit=all +Oentrysched +DD64 \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+b," ;;
*-hpux*)
  CC=cc CFLAGS="+O2 +Ofltacc +Olit=all +Oentrysched +DD64 \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+s,+b,"

  case "${SB_SYSTYPE}" in
  *-hpux11.31)
    ARGS="--host=hppa64-hp-hpux11.31" ;;
  *-hpux11.23)
    ARGS="--host=hppa64-hp-hpux11.23" ;;
  *-hpux11.11)
    ARGS="--host=hppa64-hp-hpux11.11" ;;
  *-hpux11.00)
    ARGS="--host=hppa64-hp-hpux11.00" ;;
  esac ;;
*-irix*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1009,1429 \
-use_readonly_const -G0 -rdata_shared -DEBUG:optimize_space=ON \
-64 -mips4 -O2 -OPT:Olimit=0"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -m64 -xarch=sse2"
  CC_LD_RT="-R" ;;
*-solaris2.8)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=generic \
-xarch=v9"
  CC_LD_RT="-R" ;;
*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=generic -m64 \
-xarch=sparc"
  CC_LD_RT="-R" ;;
esac

${SHELL} ./configure CC="${CC:-gcc}" CFLAGS="${CFLAGS:--O2}" \
LDFLAGS="${LDFLAGS+${LDFLAGS}}" --enable-shared --enable-static \
${ARGS+${ARGS}} --libdir="${SB_INSTALL_PREFIX}/${_libdir}" \
--mandir="${SB_INSTALL_PREFIX}/man" --prefix=${SB_INSTALL_PREFIX}

${SB_PATH_SED} -i -e "\
s!-L\(\${libdir}\)!-L\1 ${CC_LD_RT}\1!;" jpeg.pc

# hack version info on IRIX for backward compatibility
case "${SB_SYSTYPE}" in
*-irix*)
  ${SB_PATH_SED} -i -e "\
s|^JPEG_LIB_VERSION.*|JPEG_LIB_VERSION = 61|" Makefile
  ${SB_PATH_SED} -i -e "\
s|verstring_prefix=sgi|verstring_prefix=|; \
/^soname_spec/ { s|\\\\\$major||; }" libtool
  ;;
esac
]]>
      </configure>

      <test>
<![CDATA[
gmake check
]]>
      </test>

      <install>
<![CDATA[
if [ ! -d ${SB_INSTALL_PREFIX}/lib/64 ]; then
  case "${SB_SYSTYPE}" in
  *-aix*|*-hpux*|*-solaris*)
    ln -s ./$(basename ${_libdir}) ${SB_INSTALL_PREFIX}/lib/64 ;;
  *-irix*)
    ln -s ../lib64 ${SB_INSTALL_PREFIX}/lib/64 ;;
  esac
fi

${SB_PATH_INSTALL} -m 755 -o root -g 0 -d ${SB_INSTALL_PREFIX}/${_libdir}

gmake install-libLTLIBRARIES install-pkgconfigDATA
]]>
      </install>
    </module>

    <licenses>
      <license>
        <para>The authors make NO WARRANTY or representation, either
express or implied, with respect to this software, its quality,
accuracy, merchantability, or fitness for a particular purpose.  This
software is provided "AS IS", and you, its user, assume the entire
risk as to its quality and accuracy.</para>
        <para>This software is copyright (C) 1991-2010, Thomas G.
Lane, Guido Vollbeding. All Rights Reserved except as specified
below.</para>
        <para>Permission is hereby granted to use, copy, modify, and
distribute this software (or portions thereof) for any purpose,
without fee, subject to these conditions:</para>
        <orderedlist>
          <item><para>If any part of the source code for this software
is distributed, then this README file must be included, with this
copyright and no-warranty notice unaltered; and any additions,
deletions, or changes to the original files must be clearly indicated
in accompanying documentation.</para></item>
          <item><para>If only executable code is distributed, then the
accompanying documentation must state that "this software is based in
part on the work of the Independent JPEG Group".</para></item>
          <item><para>Permission for use of this software is granted
only if the user accepts full responsibility for any undesirable
consequences; the authors accept NO LIABILITY for damages of any
kind.</para></item>
        </orderedlist>

        <para>These conditions apply to any software derived from or
based on the IJG code, not just to the unmodified library.  If you use
our work, you ought to acknowledge us.</para>
        <para>Permission is NOT granted for the use of any IJG
author's name or company name in advertising or publicity relating to
this software or products derived from it.  This software may be
referred to only as "the Independent JPEG Group's software".</para>
        <para>We specifically permit and encourage the use of this
software as the basis of commercial products, provided that all
warranty or liability claims are assumed by the product vendor.</para>
        <para>ansi2knr.c is included in this distribution by
permission of L. Peter Deutsch, sole proprietor of its copyright
holder, Aladdin Enterprises of Menlo Park, CA. ansi2knr.c is NOT
covered by the above copyright and conditions, but instead by the
usual distribution terms of the Free Software Foundation; principally,
that you must include source code if you redistribute it.  (See the
file ansi2knr.c for full details.)  However, since ansi2knr.c is not
needed as part of any program generated from the IJG code, this does
not limit you more than the foregoing paragraphs do.</para>
        <para>The Unix configuration script "configure" was produced
with GNU Autoconf. It is copyright by the Free Software Foundation but
is freely distributable. The same holds for its supporting scripts
(config.guess, config.sub, ltmain.sh).  Another support script,
install-sh, is copyright by X Consortium but is also freely
distributable.</para>
        <para>The IJG distribution formerly included code to read
and write GIF files. To avoid entanglement with the Unisys LZW patent,
GIF reading support has been removed altogether, and the GIF writer
has been simplified to produce "uncompressed GIFs".  This technique
does not use the LZW algorithm; the resulting GIF files are larger
than usual, but are readable by all standard GIF decoders.</para>
        <para>We are required to state that</para>
        <para>"The Graphics Interchange Format(c) is the Copyright
property of CompuServe Incorporated.  GIF(sm) is a Service Mark
property of CompuServe Incorporated."</para>
      </license>
    </licenses>

    <notes>
      <change from="8a" to="8b">
        <item><para>Repair problem in new memory source manager with
corrupt JPEG data.</para></item>
        <item><para>Repair problem in Makefile.am test
target.</para></item>
        <item><para>Support MinGW installation with automatic
configure.</para></item>
      </change>

      <change from="8" to="8a">
        <item><para>Writing tables-only datastreams via
jpeg_write_tables works again.</para></item>
        <item><para>Support 32-bit BMPs (RGB image with Alpha channel)
for read in cjpeg.</para></item>
        <item><para>Improve accuracy in floating point IDCT
calculation.</para></item>
      </change>

      <change from="7" to="8">
        <item><para>jpegtran now supports the same -scale option as
djpeg for "lossless" resize. An implementation of the JPEG SmartScale
extension is required for this feature.  A (draft) specification of
the JPEG SmartScale extension is available as a contributed document
at ITU and ISO.  Revision 2 or later of the document is required
(latest document version is Revision 3). The SmartScale extension will
enable more features beside lossless resize in future implementations,
as described in the document (new compression options).</para></item>
        <item><para>Add sanity check in BMP reader module to avoid
cjpeg crash for empty input image (thank to Isaev Ildar of ISP RAS,
Moscow, RU for reporting this error).</para></item>
        <item><para>Add data source and destination managers for read
from and write to memory buffers.  New API functions jpeg_mem_src and
jpeg_mem_dest.</para></item>
      </change>

      <change from="6b" to="7">
        <item><para>New scaled DCTs implemented.</para>
        <para>djpeg now supports scalings N/8 with all N from 1 to
16.</para>
        <para>cjpeg now supports scalings 8/N with all N from 1 to
16.</para>
        <para>Scaled DCTs with size larger than 8 are now also used
for resolving the common 2x2 chroma subsampling case without
additional spatial resampling. Separate spatial resampling for those
kind of files is now only necessary for N&gt;8 scaling cases.</para>
        <para>Furthermore, separate scaled DCT functions are
provided for direct resolving of the common asymmetric subsampling
cases (2x1 and 1x2) without additional spatial
resampling.</para></item>
        <item><para>cjpeg -quality option has been extended for
support of separate quality settings for luminance and chrominance (or
in general, for every provided quantization table slot).</para></item>
        <item><para>New API function jpeg_default_qtables() and
q_scale_factor array in library.</para></item>
        <item><para>Added -nosmooth option to cjpeg, complementary to
djpeg.</para></item>
        <item><para>New variable "do_fancy_downsampling" in library,
complement to fancy upsampling.  Fancy upsampling now uses direct DCT
scaling with sizes larger than 8.  The old method is not reversible
and has been removed.</para></item>
        <item><para>Support arithmetic entropy encoding and
decoding.</para></item>
        <item><para>Added files jaricom.c, jcarith.c,
jdarith.c.</para></item>
        <item><para>Straighten the file structure: Removed files
jidctred.c, jcphuff.c, jchuff.h, jdphuff.c, jdhuff.h.</para></item>
        <item><para>jpegtran has a new "lossless" cropping
feature.</para></item>
        <item><para>Implement -perfect option in jpegtran, new API
function</para></item>
        <item><para>jtransform_perfect_transform() in transupp. (DP
204_perfect.dpatch)</para></item>
        <item><para>Better error messages for jpegtran fopen failure.
(DP 203_jpegtran_errmsg.dpatch)</para></item>
        <item><para>Fix byte order issue with 16bit PPM/PGM files in
rdppm.c/wrppm.c: according to Netpbm, the de facto standard
implementation of the PNM formats, the most significant byte is first.
(DP 203_rdppm.dpatch)</para></item>
        <item><para>Add -raw option to rdjpgcom not to mangle the
output. (DP 205_rdjpgcom_raw.dpatch)</para></item>
        <item><para>Make rdjpgcom locale aware. (DP
201_rdjpgcom_locale.dpatch)</para></item>
        <item><para>Add extern "C" to jpeglib.h. This avoids the need
to put extern "C" { ... } around #include "jpeglib.h" in your C++
application.  Defining the symbol DONT_USE_EXTERN_C in the
configuration prevents this. (DP
202_jpeglib.h_c++.dpatch)</para></item>
      </change>
    </notes>
  </program>
</programs>
