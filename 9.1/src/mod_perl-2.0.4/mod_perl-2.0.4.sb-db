<?xml version="1.0"?>
<!DOCTYPE programs SYSTEM "sb-db.dtd">
<programs>
  <program name="mod_perl" version="2.0.4" revision="1"
  systype="!*-osf*">
    <build-name>${SB_PROG_NAME}-${SB_PROG_VER}</build-name>

    <install-name>modperl204</install-name>

    <sources>
      <source checksum="1a05625ae6843085f985f5da8214502a"
        checksum-type="md5" size="3727717"
        path="src/mod_perl-2.0.4.tar.gz"/>
      <patch checksum="1528408bb4a5dfe3d57725b0e087875d"
        checksum-type="md5" size="912"
        path="src/mod_perl-2.0.4.tww.patch"/>
    </sources>

    <dependencies>
      <depend program="gcc" install-name="gcc44"
        add-path="prepend">v&gt;=4.4.6</depend>
      <depend program="perl" var="PERL">v==5.12.2</depend>
    </dependencies>

    <configure>
<![CDATA[
${SB_VAR_PERL}/bin/perl Makefile.PL \
MP_APXS=${SB_VAR_HTTPD}/bin/apxs \
PREFIX=${SB_INSTALL_PREFIX} \
INSTALLARCHLIB="${SB_INSTALL_PREFIX}/lib" \
INSTALLSITEARCH="${SB_INSTALL_PREFIX}/lib" \
INSTALLSITELIB="${SB_INSTALL_PREFIX}/lib"

case "${SB_SYSTYPE}" in
*-aix*)
  ${SB_PATH_SED} -i -e "\
/^MODPERL_LDOPTS/ {
s!-blibpath:!-blibpath:${SB_VAR_PERL}/lib/5.12.2/aix-thread-multi/CORE:!;
}" src/modules/perl/Makefile ;;
esac
]]>
    </configure>

    <test auto-include="0">
<![CDATA[
gmake test APACHE_TEST_HTTPD="${SB_VAR_HTTPD}/bin/httpd.prefork"

: ignore test failures
]]>
    </test>

    <module name="default">
      <validate>
        <depend program="mod_perl" module="2.2.21">v==2.0.4</depend>
      </validate>

      <configure>
<![CDATA[
${SB_VAR_PERL}/bin/perl Makefile.PL \
MP_APXS=${SB_VAR_HTTPD}/bin/apxs \
PREFIX=${SB_INSTALL_PREFIX} \
INSTALLARCHLIB="${SB_INSTALL_PREFIX}/lib" \
INSTALLSITEARCH="${SB_INSTALL_PREFIX}/lib" \
INSTALLSITELIB="${SB_INSTALL_PREFIX}/lib"

case "${SB_SYSTYPE}" in
*-aix*)
  ${SB_PATH_SED} -i -e "\
/^MODPERL_LDOPTS/ {
s!-blibpath:!-blibpath:${SB_VAR_PERL}/lib/5.12.2/aix-thread-multi/CORE:!;
}" src/modules/perl/Makefile ;;
esac
]]>
      </configure>

      <test auto-include="0">
<![CDATA[
gmake test APACHE_TEST_HTTPD="${SB_VAR_HTTPD}/bin/httpd.prefork"

: ignore test failures
]]>
      </test>

      <uninstall>
<![CDATA[
rm -rf ${SB_INSTALL_PREFIX}
]]>
      </uninstall>
    </module>

    <module name="2.2.21">
      <dependencies replace="0">
        <depend program="httpd" var="HTTPD">v==2.2.21</depend>
      </dependencies>

      <configure>
<![CDATA[
${SB_VAR_PERL}/bin/perl Makefile.PL \
MP_APXS=${SB_VAR_HTTPD}/bin/apxs \
PREFIX=${SB_INSTALL_PREFIX} \
INSTALLARCHLIB="${SB_INSTALL_PREFIX}/lib" \
INSTALLSITEARCH="${SB_INSTALL_PREFIX}/lib" \
INSTALLSITELIB="${SB_INSTALL_PREFIX}/lib"

case "${SB_SYSTYPE}" in
*-aix*)
  ${SB_PATH_SED} -i -e "\
/^MODPERL_LDOPTS/ {
s!-blibpath:!-blibpath:${SB_VAR_PERL}/lib/5.12.2/aix-thread-multi/CORE:!;
}" src/modules/perl/Makefile ;;
esac
]]>
      </configure>

      <test auto-include="0">
<![CDATA[
gmake test APACHE_TEST_HTTPD="${SB_VAR_HTTPD}/bin/httpd.prefork"

: ignore test failures
]]>
      </test>

      <install>
<![CDATA[
gmake install UNINST=1 \
MODPERL_AP_LIBEXECDIR="${SB_INSTALL_PREFIX}/modules/${SB_MODULE_NAME}"
]]>
      </install>
    </module>

    <module name="Apache-DBI-5.12.2">
      <build-name>Apache-DBI-1.07</build-name>

      <sources>
        <source checksum="a8161e5c1083afa0ecb6ac94491481e0"
          checksum-type="md5" size="34438"
          path="src/Apache-DBI-1.07.tar.gz"/>
      </sources>

      <dependencies>
        <depend program="gcc" install-name="gcc44"
          add-path="prepend">v&gt;=4.4.6</depend>
        <depend program="mod_perl" module="2.2.21">v==2.0.4</depend>
        <depend program="perl" var="PERL">v==5.12.2</depend>
      </dependencies>

      <script-header>
<![CDATA[
_install_prefix="${SB_INSTALL_PREFIX_LIB}/perl5122"
]]>
      </script-header>

      <configure>
<![CDATA[
${SB_VAR_PERL}/bin/perl Makefile.PL \
INSTALLARCHLIB=${_install_prefix} \
INSTALLSITEARCH=${_install_prefix} \
INSTALLSITELIB=${_install_prefix} \
PREFIX=${SB_INSTALL_PREFIX}
]]>
      </configure>

      <test>
<![CDATA[
gmake test

: ignore test failures
]]>
      </test>

      <install>
<![CDATA[
gmake install

rm ${_install_prefix}/perllocal.pod

# install path for Perl's include.paths.d
${SB_PATH_INSTALL} -m 755 -o root -g 0 -d \
${_install_prefix}/include.paths.d
cat >${_install_prefix}/include.paths.d/99-${SB_PROG_NAME} <<_EOT_
${_install_prefix}
_EOT_
]]>
      </install>

      <uninstall>
<![CDATA[
rm -rf ${_install_prefix}

rm ${SB_INSTALL_PREFIX}/man/man3/Apache::AuthDBI.3 || :
rm ${SB_INSTALL_PREFIX}/man/man3/Apache::DBI.3 || :
]]>
      </uninstall>
    </module>

    <notes>
      <change from="2.0.3" to="2.0.4">
        <item><para>Fix $r-&gt;location corruption under certain
conditions</para></item>
        <item><para>Fix a crash when spawning Perl threads under Perl
5.10</para></item>
        <item><para>Fix erratic behaviour when filters were used with
Perl 5.10</para></item>
        <item><para>Fix problems with redefinitions of perl_free as
free and perl_malloc as malloc on Win32, as described at
http://marc.info/?l=apache-modperl&amp;m=119896407510526&amp;w=2</para></item>
        <item><para>Fix a crash when running a sub-request from within
a filter where mod_perl was not the content handler</para></item>
        <item><para>Refactor tests to use keepalives instead of
same_interp</para></item>
        <item><para>Apache2::Reload has been moved to an externally
maintained CPAN distribution</para></item>
        <item><para>PerlCleanupHandler are now registered with a
subpool of $r-&gt;pool, instead of $r-&gt;pool itself, ensuring they
run _before_ any other $r-&gt;pool cleanups</para></item>
        <item><para>Fix a bug that would prevent pnotes from being
cleaned up properly at the end of the request</para></item>
        <item><para>On Win32, embed the manifest file, if present, in
mod_perl.so, so as to work with VC 8</para></item>
        <item><para>Expose apr_thread_rwlock_t with the
APR::ThreadRWLock module</para></item>
        <item><para>Don't waste an extra interpreter anymore under
threaded MPMs when using a modperl handler</para></item>
        <item><para>Fix a bug that could cause a crash when using
$r-&gt;push_handlers() multiple times for a phase that has no
configured handler </para></item>
        <item><para>Catch up with some httpd API changes 2.2.4: The
full server version information is now included in the error log at
startup as well as server status reports, irrespective of the setting
of the ServerTokens directive. ap_get_server_version() is now
deprecated, and is replaced by ap_get_server_banner() and
ap_get_server_description()</para></item>
        <item><para>ap_get_server_version() has been removed.
Third-party modules must now use ap_get_server_banner() or
ap_get_server_description().</para></item>
        <item><para>fixed Apache2::compat
Apache2::ServerUtil::server_root() resolution issues</para></item>
        <item><para>*) SECURITY: CVE-2007-1349 (cve.mitre.org) fix
unescaped variable interprolation in regular expression</para></item>
        <item><para>Make $r-&gt;the_request() writeable</para></item>
        <item><para>fix ModPerl::RegistryCooker::read_script to handle
all possible errors, previously there was a case where
Apache2::Const::OK was returned on an error</para></item>
        <item><para>a minor compilation warning resolved in
modperl_handler_new_from_sv</para></item>
        <item><para>a minor compilation warning resolved in
modperl_gtop_size_string</para></item>
        <item><para>Prevent direct use of _deprecated_
Apache2::ReadConfig in &lt;Perl&gt; sections with httpd Alias
directives from incorrectly generating 'The Alias directive in xxxxx
at line y will probably never match' messages</para></item>
        <item><para>Prevent Apache2::PerSections::symdump() from
returning invalid httpd.conf snippets like 'Alias undef'</para></item>
        <item><para>Require B-Size 0.9 for Apache2::Status which fixes
Can't call method "script_name" on an undefined value</para></item>
        <item><para>-march=pentium4 or anything with an = in it in
CCFLAGS or @ARGV that gets passed to xs/APR/APR/Makefile.PL broke the
@ARGV parsing. I.E. FreeBSD port builds when users had CPUTYPE set in
/etc/make.conf.</para></item>
        <item><para>Fixes to get bleed-ithread (5.9.5+) to comile
again</para></item>
        <item><para>Prevent things in %INC that are not stat() able
from breaking Apache2::Status 'Loaded Modules' under fatal
warnings</para></item>
        <item><para>When using MP_AP_PREFIX on WIN32 make sure that
its a valid directory</para></item>
        <item><para>Fix bug concerning 'error-notes' having no value
on errordocument redirect</para></item>
        <item><para>Multi-line $PerlConfig is now
working</para></item>
        <item><para>PerlOptions None was previously incorrectly
reported as invalid inside &lt;VirtualHost&gt; or &lt;Directory&gt;
blocks</para></item>
        <item><para>Require B::Size 0.07 and B::TerseSize 0.07 for
Apache2::Status</para></item>
        <item><para>Apache2::Status was expecting B::TerseSize to
return an op count for things that it didn't causing requests like
http://localhost/perl-status/main?noh_b_package_size to cause
405s</para></item>
        <item><para>Updates for Win32 to allow building and testing on
Apache/2.2: - use httpd.exe as the Apache binary name when installing
apxs - use new apr library names (libapr-1.lib and
libaprutil-1.lib)</para></item>
        <item><para>Make sure that additional library paths are
included in the build flags so that mod_perl will use the same
versions of libraries that APR does</para></item>
        <item><para>Added $r-&gt;connection-&gt;pnotes, identical to
$r-&gt;pnotes, but for the entire lifetime of the
connection</para></item>
        <item><para>Fixed problems with add_config() and thread-safety
- $s-&gt;add_config is not allowed anymore after server startup -
$r-&gt;add_config can only affect configuration for the current
request, just like .htaccess files do</para></item>
        <item><para>Make sure that LIBS and other MakeMaker command
line flags are not ignored by the top level Makefile.PL and
xs/APR/APR/Makefile.PL</para></item>
        <item><para>Corrected a typo that would cause the corruption
of $), the effective group id as Perl sees it</para></item>
        <item><para>Added support for httpd-2.2's new override_opts in
Apache2::Access. Calls to add_config() now accept an override_opts
value as the 4th argument.</para></item>
        <item><para>Fix 'PerlSwitches +inherit' that got broken
somewhere along the way to 2.0. You can also use 'PerlOptions
+InheritSwitches' for the same result.</para></item>
        <item><para>Add perl API corresponding to User and Group
directives in httpd.conf: Apache2::ServerUtil-&gt;user_id and
Apache2::ServerUtil-&gt;group_id</para></item>
        <item><para>Apache2::Reload now first unloads all modified
modules before trying to reload them. This way, inter-module
dependencies are more likely to be correctly satisfied when
reloaded.</para></item>
        <item><para>$r-&gt;add_config() can now take an optionnal 3rd
argument that specifies what pseudo &lt;Location $path&gt; the
configuration is evaluated into</para></item>
        <item><para>remove -DAP_HAVE_DESIGNATED_INITIALIZER and
-DAP_DEBUG from MP_MAINTAINER mode to avoid collisions</para></item>
        <item><para>Back out r280262 which was causing Apache2::Reload
to misbehave</para></item>
        <item><para>Perl_do_open/close fixes to make mod_perl 2.0
compile with blead-perl@25889+ (5.9.3+)</para></item>
        <item><para>Added Apache2::PerlSections-&gt;server, returning
the server into which the &lt;Perl&gt; section is
defined</para></item>
        <item><para>Require B::Size and B::TerseSize v0.06 for
Apache2::Status options StatusTerse and StatusTerseSize which has now
been updated to support the new mod_perl2 api post RC5</para></item>
        <item><para>When using Apache2::PerlSections-&gt;dump, the
configuration would print out in the correct order, but when the
configuration was passed off to Apache the ordering was
lost</para></item>
      </change>

      <change from="2.0.1" to="2.0.2">
        <item><para>add :proxy import tag to Apache2::Const which
exposes new constants PROXYREQ_NONE, PROXYREQ_PROXY, and
PROXYREQ_REVERSE</para></item>
        <item><para>$0 Fixes: - Setting $0 works on Linux again -
HP-UX and *BSDes show the correct process name instead of
'-e'</para></item>
        <item><para>Fix a critical but trivial bug that would cause
MP_MAINTAINER=1 or MP_TRACE=1 builds to fail if not building against a
threaded APR. Functions such as apr_os_thread_current() would not be
linked in, but were expected to be.</para></item>
        <item><para>Add the output of ldd(unix/cygwin) and otool -L
(darwin) for httpd to the mp2bug report script.</para></item>
        <item><para>Prevent tools such as Apache2::Status's Loaded
Modules screen from displaying erroneous information about mod_perl.pm
being loaded.</para></item>
        <item><para>Correctly set the version of
ModPerl::MethodLookup, previously, it was not set because of the way
it was Generating via ModPerl::WrapXS</para></item>
        <item><para>Improve the detection of whether or not we are in
an mp2 build tree. This allows usage of ExtUtils::MakeMaker options
such as PREFIX to not break the probe of mp2 build
trees.</para></item>
        <item><para>Add support for the newer Smaps (/proc/self/statm)
on Linux systems that support it (i.e. linux-2.6.13-rc4-mm1) to
accurately count the amount of shared memory.</para></item>
        <item><para>On cygwin some dlls might happen to be with
identical base addresses and if you try to load both of them you'll
get an error and you'll have to use the rebase utility to fix them.
this fix should prevent this.</para></item>
        <item><para>Fix an undefined warning in DSO builds when not
using MP_APXS</para></item>
        <item><para>When running Makefile.PL with the MP_MAINTAINER=1
option add -Wdeclaration-after-statement if we are using gcc version
3.3.2 or higher and its not already part of the ccopts</para></item>
        <item><para>Several fixes to Apache2::Status</para></item>
        <item><para>When using Apache2::Reload and ReloadDebug is set
to 'On', sort the output alphabetically</para></item>
        <item><para>croak in case a filter returns DECLINED after
calling $f-&gt;read (as it is not supposed to happen)</para></item>
        <item><para>another round of cygwin fixes</para></item>
        <item><para>Multiple fixes to make mod_perl 2.0 work with
blead-perl (5.9.3+)</para></item>
        <item><para>t/modules/reload.t would fail if run more than 3
times, breaking smokes</para></item>
        <item><para>filter flushing now doesn't croak on connection
reset (ECONNRESET/ECONNABORTED), but just logs the event on the 'info'
level</para></item>
        <item><para>RPM Friendly builds: make dist tarballs can now be
built directly into RPMs with rpmbuild - Added a new target 'make rpm'
to directly build rpms from a checkout</para></item>
      </change>

      <change from="2.0" to="2.0.1">
        <item><para>B::Terse has problems with XS code, so adjust
Apache::Status to eval {} the code doing Syntax Tree Dump: syntax and
execution order options</para></item>
        <item><para>Fix a broken regexp in Apache2::Build::dir() on
win32 that would incorrectly attempt to fully-qualify paths like
c:/some/path</para></item>
        <item><para>Fix the "No library found" warnings when building
on win32 without apxs and MP_AP_PREFIX</para></item>
        <item><para>The pure-perl ModPerl::Util::unload_package
implementation was accidently deleting sub-stashes</para></item>
        <item><para>If running Makefile.PL unnatended (STDIN isn't a
terminal or MP_PROMPT_DEFAULT=1), break out of potentially infinite
prompt loops</para></item>
        <item><para>fix ModPerl::TestReport used by t/REPORT and
mp2bug to use ExtUtils::MakeMaker's MM-&gt;parse_version to get the
interesting packages version number, w/o trying to load them (which
may fail if the environment is not right)</para></item>
        <item><para>fix a bug in ModPerl::RegistryCooker: now
stripping __(END|DATA)__ only at the beginning of the
line</para></item>
        <item><para>APR::Base64: fix encode_len() to return the length
without accounting for the terminating '\0' as the C API does. - fix
encode() to create the string of the correct length (previously was
creating one too many)</para></item>
        <item><para>in mod_perl callbacks merge error-notes entries
rather than store just the newest error</para></item>
        <item><para>Expose Apache2::Const::EXEC_ON_READ (added to the
:override group)</para></item>
        <item><para>Fix a bug in custom directive implementation,
where the code called from modperl_module_config_merge() was setting
the global context after selecting the new interpreter which was
leading to a segfault in any handler called thereafter, whose context
was different beforehand</para></item>
      </change>

      <change from="1.999_23" to="2.0.0">
        <item><para>fix global anon_cnt double-initialization bug that
was causing startup segfaults on OSX</para></item>
        <item><para>fix the ap_install target in the top-level
Makefile (used for static build)</para></item>
        <item><para>Reintroduce a pure-Perl version of
ModPerl::Util::unload_package() The problematic XS version is now
called unload_package_xs() and not used by default</para></item>
        <item><para>More APR::Status wrappers: - is_EOF -
is_ECONNABORTED - is_ECONNRESET - is_TIMEUP</para></item>
        <item><para>make sure that the build picks up the include
directories based on the apxs queries and only search the httpd source
if $self-&gt;{MP_AP_PREFIX} was set. Earlier it was always picking the
headers from the httpd source if it was available, which was resulting
in the wrong headers if the installed httpd was different than the
source that was found</para></item>
        <item><para>introduce ModPerl::RegistryPrefork and
ModPerl::PerlRunPrefork, which behave the same as ModPerl::Registry
and ModPerl::PerlRun, respectively, but chdir to the script's
directory like mod_cgi does. These two new handlers will refuse to
load under threaded MPMs where chdir can't be used as it will affect
all running threads</para></item>
        <item><para>ModPerl::RegistryCooker::chdir_file_normal() now
chdirs to the current script's directory or the specified directory as
an argument, as it was planned in first place. Therefore switch
ModPerl::Registry and ModPerl::PerlRun to us NOP for this method call.
If chdir_file is mapped to chdir_file_normal(), then run() and
convert_script_to_compiled_handler() now call chdir to the script's
directory and at before returning go back to the server
root.</para></item>
        <item><para>prevent undef warnings in catfile() calls in
Apache2::Build when called from the ModPerl-Registry
tree</para></item>
        <item><para>fix modperl_brigade_dump to use apr_file_printf()
instead of fprintf(), which doesn't work everywhere</para></item>
        <item><para>Fix a warning triggered by `ln` on Cygwin, when
running perl Makefile.PL for a second time without previously running
make clean</para></item>
        <item><para>When compiling a static mod_perl and
MP_AP_CONFIGURE="--with-apr=/some/path" argument is given, Apache will
use the apr-config at the given path, but mod_perl was using the
default at "srclib/apr/.libs"</para></item>
        <item><para>Show MP_APU_CONFIG as an argument to Makefile.PL
in the Usage menu</para></item>
        <item><para>Makefile.PL: fix the pre-rename mp2 install
diagnostics code, to use the mp version of 1.999xx and not 1.999_xx,
as the latter is unsuitable for numerical comparison, also fix the
name of the reported conflicting directory.</para></item>
        <item><para>add APR::Status::is_(EACCES|ENOENT), and use in
ModPerl::RegistryCooker to return, as appropriate,
Apache2::Const::(FORBIDDEN|NOT_FOUND), based on $@. Also remove a
check in modperl_slurp_filename of src/modules/perl/modperl_util.c to
enable $@ to be set when opening or reading a file fails. This fixes a
bug on Win32, revealed in 404.t and redirect.t of the ModPerl-Registry
tests.</para></item>
        <item><para>link Apache2::* and ModPerl::* to mod_perl.a and
DynaLoader.a, but -lmod_perl and -lDynaLoader don't work, and we can't
supply the full paths, because MakeMaker doesn't allow this. I
workaround this by making a symlink to mod_perl.a (called
libmod_perl.a) and copy DynaLoader.a to libDynaLoader.a (I don't
create a symlink, because, when running make clean, the real
DynaLoader.a may get deleted). The APR::* extensions are not affected,
because in both cases we link them against aprext. Also other small
fixes are added.</para></item>
      </change>

      <change from="1.999_22" to="1.999_23">
        <item><para>fix Apache2::Build::dynamic_link_MSWin32 to
generate a new line after dynamic_link code in Makefile</para></item>
        <item><para>fix a warning in Apache2::Build::build_config()
when building with MP_STATIC_EXTS=1</para></item>
        <item><para>improving DSO support on cygwin. The problem with
cygwin is that it behaves like windows (it's a posix layer over
windows after all). That's why we need to supply all symbols during
linking time just like on win32, by adding -lapr-0 -laprutil-0 and
-lhttpd. On windows, Apache supplies all the three libraries and it's
easy to link, but on cygwin apache doesn't play nice and doesn't
supply libhttpd. This change adds libapr and libaprutil.</para></item>
        <item><para>improve the diagnostics when detecting mp2 &lt;
1.999022, tell the user which files and/or dirs need to be
removed</para></item>
        <item><para>restore the DESTDIR support partially nuked by the
apache2 rename branch</para></item>
        <item><para>add APR::Status to provide functions corresponding
to the APR_STATUS_IS_* macros of apr_errno.h, especially those
composites like APR_STATUS_IS_EAGAIN(s) which are satisfied by more
than one specific error condition. Presently only APR_STATUS_IS_EAGAIN
is provided</para></item>
        <item><para>fix the generation of the manpages for .pm files
from sub-projects like ModPerl-Registry (previously was creating
manpage files like .::ModPerl::PerlRun.3) </para></item>
        <item><para>fix the pod2man'ification part of 'make install'
(using POD2MAN_EXE instead of POD2MAN Makefile macro)</para></item>
      </change>

      <change from="1.999_21" to="1.999_22">
        <item><para>remove MP_INST_APACHE2 installation option and
Apache2.pm - all mod_perl related files will now be installed so they
are visible via standard @INC. also, refuse to install over mod_perl 2
versions less than 1.999_22.</para></item>
        <item><para>s/Apache::/Apache2::/g and s/mod_perl/mod_perl2/g
in all module APIs. so, Apache::RequestRec is now Apache2::RequestRec,
Apache::compat is now Apache2::compat, and so on.</para></item>
        <item><para>move all Apache:: constants to Apache2::Const and
all APR:: constants to APR::Const. for example, Apache:OK is now
Apache2::Const::OK and APR::SUCCESS is now
APR::Const::SUCCESS.</para></item>
        <item><para>add $ENV{MOD_PERL_API_VERSION} as something that
clearly distinguishes which mod_perl version is being used at request
time</para></item>
        <item><para>rename Apache-&gt;request() to
Apache2::RequestUtil-&gt;request(), and Apache-&gt;server() to
Apache2::ServerUtil-&gt;server()</para></item>
        <item><para>fix Apache2::Status which was bailing out on
trying to load modules with dev versions like 2.121_02</para></item>
        <item><para>When parsing Makefile.PL MP_* options, handle
correctly the MP_FOO=0 entries</para></item>
        <item><para>init the anonsub hash for base perl and each vhost
+Parent (previously was init'ed only for the base perl)</para></item>
        <item><para>fix a bug when a non-threaded perl is used and
anonymous sub is pushed at the server startup (the CV wasn't
surviving)</para></item>
        <item><para>Make sure that CPAN shell doesn't triple over
usage of $ExtUtils::MakeMaker::VERSION</para></item>
        <item><para>Apache2::RequestRec-&gt;new now sets
$r-&gt;request_time</para></item>
        <item><para>remove CGI.pm and Apache::Request dependencies
from Apache2::Status since they weren't used at all</para></item>
        <item><para>Fixes for Apache2::Reload's touchfile feature
(return Apache2::Const::OK instead of 1)</para></item>
        <item><para>cygwin fixes: doesn't like XS wrapper starting
with 'static' - need to compile everything with -DCYGWIN</para></item>
        <item><para>ModPerl::RegistryCooker API change:
s/rewrite_shebang/shebang_to_perl/ the new API now returns the string
to prepend before the rest of the script, instead of rewriting the
content, which is both faster and doesn't mislead the perl
debugger</para></item>
        <item><para>Starting from ExtUtils::MakeMaker 6.26 went back
to pm_to_blib target from pm_to_blib.ts introduced in 6.22, so needed
to fix the glue_pod target, so install will work
correctly</para></item>
        <item><para>Syntax errors in &lt;Perl&gt; sections were not
correctly caught and reported.</para></item>
        <item><para>when building mp2 EU::MM looks into
Apache-Test/MANIFEST and complains about the missing
Apache-Test/META.yml (which is indeed not included in the modperl
package due to the PAUSE problems of dealing with more than one
META.yml. Solution: Exclude Apache-Test/MANIFEST from mod_perl
distribution package.</para></item>
        <item><para>ModPerl::Registry no longer checks for -x bit (we
don't executed scripts anyway), and thus works on acl-based
filesystems. Also replaced the -r check with a proper error handling
when the file is read in.</para></item>
        <item><para>Apache2::RequestUtil::slurp_filename now throws an
APR::Error exception object (before it was just
croaking)</para></item>
        <item><para>fix APR::Error's overload of '==' (it was always
returning true before), and add the corresponding '!='</para></item>
        <item><para>if $r-&gt;document_root was modified, restore it
at the end of request</para></item>
        <item><para>Apache2::ServerRec method which set the
non-integer fields in the server_rec, now copy the value from the perl
scalar, so if it changes or goes out of scope the C struct is not
affected. Using internal perl variables to preserve the value, since
using the server pool to allocate the memory will mean a memory
leak</para></item>
        <item><para>add the escape_url entry in the
ModPerl::MethodLookup knowledgebase</para></item>
        <item><para>Apache2::SubProcess::spawn_proc_prog now can be
called in a void context, in which case all the communication std
pipes will be closed</para></item>
        <item><para>fix a bug in $r-&gt;document_root, which
previously weren't copying the new string away</para></item>
        <item><para>introduce a new build option MP_AP_DESTDIR to aid
package builders direct the Apache-specific files to the right
place</para></item>
        <item><para>Fix bug in modperl_package_clear_stash()
segfaulting when encountering declared but not yet defined
subroutines</para></item>
        <item><para>win32 needs PERL_SYS_INIT3/PERL_SYS_TERM
calls</para></item>
        <item><para>Fix broken MP_STATIC_EXTS=1 build</para></item>
        <item><para>Perl -Duse64bit fix. Pointers can't just be
generically casted from/to IVs. Use PTR2IV/INT2PTR
instead.</para></item>
        <item><para>Perl -Duse64bit fix. apr_size_t pointers can't
just be generically casted from/to UVs. Use PTR2UV/INT2PTR
instead.</para></item>
        <item><para>fix a bug in Apache2::Build::dir: If the right
directory isn't found in the for loop $dir still contains a &gt;
value, so the ||= has no effect</para></item>
      </change>

      <note type="installation">
        <para>The Apache module, <command>mod_perl.so</command>, is
installed to the following directories depending on the Apache
version:</para>
        <screen>
${SB_INSTALL_PREFIX}/modules/2.2.14          # 2.2.14
        </screen>

        <para>The postinstall script automatically updates the Apache
configuration file to load the mod_perl module. The postinstall script
will search for an installed version of Apache, first looking for
2.2.2, 2.0.55, then 2.0.53. It will update the Apache configuration
file for the first version of Apache found on the system, in the
abovementioned order.</para>
        <para>The postinstall script adds the following entry to the
httpd configuration file:</para>
        <screen>
LoadModule perl_module ${SB_INSTALL_PREFIX}/modules/[ver]/mod_perl.so
        </screen>

        <para>The default Perl library path,
<command>${SB_INSTALL_PREFIX}/lib</command>, is automatically added
to the list of Perl module paths by adding it to the library search
path configuration file,
<command>${SB_INSTALL_BASE}/perl5122/etc/include.paths</command>.</para>
      </note>

      <note type="installation">
        <para>Care should be taken when updating to this release of
mod_perl. The mod_perl 2.0 release was based on the 1.999_21 release.
From the release notes for the 1.999_22 release:</para>
        <screen>
******************** IMPORTANT ********************
this version of mod_perl is completely incompatible
  with prior versions of mod_perl, both 1.XX and
 1.99_XX. Please read the below changes carefully.
***************************************************
        </screen>
      </note>
    </notes>

    <changelog>
      <change date="2012 January 31" revision="2"
      author="Albert Chin-A-Young" email="china@thewrittenword.com">
        <item><para>Update gcc dependency from 4.2.4 to
4.4.6</para></item>
        <item><para>Update perl dependency from 5.8.8 to
5.12.2</para></item>
      </change>
    </changelog>
  </program>
</programs>
