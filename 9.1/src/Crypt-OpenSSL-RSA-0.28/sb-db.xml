<?xml version="1.0"?>
<programs>
<!DOCTYPE programs SYSTEM "sb-db.dtd">
  <program name="Crypt-OpenSSL-RSA" version="0.28" revision="1">
    <build-name>${SB_PROG_NAME}-${SB_PROG_VER}</build-name>

    <sources>
      <source checksum="86217a5036fc63779c30420b5fd84129"
        checksum-type="md5" size="20035"
        path="src/Crypt-OpenSSL-RSA-0.28.tar.gz"/>
    </sources>

    <configure>
<![CDATA[
# use our OpenSSL library
${SB_PATH_SED} -i -e "\
s!-lssl ! -L${SB_VAR_LIBOPENSSL_LIB} -lssl !" \
Makefile.PL

${SB_VAR_PERL}/bin/perl Makefile.PL PREFIX=${SB_INSTALL_PREFIX} \
INC="-I${SB_VAR_LIBOPENSSL_INC}"

# The Config.pm for HP-UX/IA64 has -L/usr/lib/hpux32 in LDFLAGS
# so we need to override this search path for -lssl -lcrypto.
case "${SB_SYSTYPE}" in
ia64*-hpux*)
  ${SB_PATH_SED} -i -e "\
s!-L/usr/lib/hpux32!-L${SB_VAR_LIBOPENSSL_LIB} -L/usr/lib/hpux32!" \
Makefile ;;
*osf*)
  ${SB_PATH_SED} -i -e "\
s!-L${SB_VAR_LIBOPENSSL_LIB}!\
-L${SB_VAR_LIBOPENSSL_LIB} ${_bsymbolic+${_bsymbolic}}!" Makefile ;;
esac
]]>
    </configure>

    <test>
<![CDATA[
case ${SB_SYSTYPE} in
*osf4*)
  export LD_LIBRARY_PATH=${SB_VAR_LIBOPENSSL_LIB} ;;
esac

gmake test
]]>
    </test>

    <install>
<![CDATA[
gmake install UNINST=1
]]>
    </install>

    <uninstall>
<![CDATA[
_installsitearch=$(${SB_VAR_PERL}/bin/perl -e \
'use Config;
print $Config{"installsitearch"} . "\n";')

cat ${_installsitearch}/auto/Crypt/OpenSSL/RSA/.packlist |\
while read _file; do
  rm ${_file}

  _dir=$(dirname ${_file})
  test -d ${_dir} && rmdir ${_dir} 2>/dev/null
done

rm ${_installsitearch}/auto/Crypt/OpenSSL/RSA/.packlist
rmdir ${_installsitearch}/auto/Crypt/OpenSSL/RSA 2>/dev/null
rmdir ${_installsitearch}/auto/Crypt/OpenSSL 2>/dev/null
rmdir ${_installsitearch}/auto/Crypt 2>/dev/null

${SB_PATH_SED} -i -e "\
/head2.*L<Crypt::OpenSSL::RSA|/,/back/ {
  g
  N
  d
}" ${_installsitearch}/perllocal.pod
]]>
    </uninstall>

    <module name="5.12.2">
      <install-name>perl5122p</install-name>

      <dependencies>
        <depend program="Crypt-OpenSSL-Random"
          module="5.12.2">v&gt;=0.04</depend>
        <depend program="gcc" install-name="gcc44"
          add-path="prepend">v&gt;=4.4.6</depend>
        <depend program="openssl" var="LIBOPENSSL"
          install-name="libopenssl10">v&gt;=1.0.0e</depend>
        <depend program="perl" var="PERL">v==5.12.2</depend>
      </dependencies>

      <script-header replace="0">
<![CDATA[
case ${SB_SYSTYPE} in
*osf*)
  _bsymbolic="-Wl,-B,symbolic" ;;
esac
]]>
      </script-header>

      <configure>
<![CDATA[
# use our OpenSSL library
${SB_PATH_SED} -i -e "\
s!-lssl ! -L${SB_VAR_LIBOPENSSL_LIB} -lssl !" \
Makefile.PL

${SB_VAR_PERL}/bin/perl Makefile.PL PREFIX=${SB_INSTALL_PREFIX} \
INC="-I${SB_VAR_LIBOPENSSL_INC}"

# The Config.pm for HP-UX/IA64 has -L/usr/lib/hpux32 in LDFLAGS
# so we need to override this search path for -lssl -lcrypto.
case "${SB_SYSTYPE}" in
ia64*-hpux*)
  ${SB_PATH_SED} -i -e "\
s!-L/usr/lib/hpux32!-L${SB_VAR_LIBOPENSSL_LIB} -L/usr/lib/hpux32!" \
Makefile ;;
*osf*)
  ${SB_PATH_SED} -i -e "\
s!-L${SB_VAR_LIBOPENSSL_LIB}!\
-L${SB_VAR_LIBOPENSSL_LIB} ${_bsymbolic+${_bsymbolic}}!" Makefile ;;
esac
]]>
      </configure>

      <test>
<![CDATA[
case ${SB_SYSTYPE} in
*osf4*)
  export LD_LIBRARY_PATH=${SB_VAR_LIBOPENSSL_LIB} ;;
esac

gmake test
]]>
      </test>

      <install>
<![CDATA[
gmake install UNINST=1
]]>
      </install>

      <uninstall>
<![CDATA[
_installsitearch=$(${SB_VAR_PERL}/bin/perl -e \
'use Config;
print $Config{"installsitearch"} . "\n";')

cat ${_installsitearch}/auto/Crypt/OpenSSL/RSA/.packlist |\
while read _file; do
  rm ${_file}

  _dir=$(dirname ${_file})
  test -d ${_dir} && rmdir ${_dir} 2>/dev/null
done

rm ${_installsitearch}/auto/Crypt/OpenSSL/RSA/.packlist
rmdir ${_installsitearch}/auto/Crypt/OpenSSL/RSA 2>/dev/null
rmdir ${_installsitearch}/auto/Crypt/OpenSSL 2>/dev/null
rmdir ${_installsitearch}/auto/Crypt 2>/dev/null

${SB_PATH_SED} -i -e "\
/head2.*L<Crypt::OpenSSL::RSA|/,/back/ {
  g
  N
  d
}" ${_installsitearch}/perllocal.pod
]]>
      </uninstall>
    </module>
  </program>
</programs>
