<?xml version="1.0"?>
<programs>
<!DOCTYPE programs SYSTEM "sb-db.dtd">
  <program name="grap" version="1.43" revision="3">
    <build-name>${SB_PROG_NAME}-${SB_PROG_VER}</build-name>

    <install-name>${SB_PROG_NAME}14</install-name>

    <sources>
      <source checksum="d1f4b44da4a8a9ef30d0c7adf0d3d330"
        checksum-type="md5" size="187854"
        path="src/grap-1.43.tar.gz"/>
      <patch checksum="9c41739ce1cd26320d8d6d5c71298eb9"
        checksum-type="md5" size="6429"
        path="src/grap-1.43.tww.patch"/>
      <patch checksum="deffdf327fb8a10290fba825c1432d71"
        checksum-type="md5" size="68535"
        path="src/grap-1.43.auto.patch"/>
    </sources>

    <dependencies>
      <depend program="bison" install-name="bison24"
        add-path="prepend" type="build">v&gt;=2.4.3</depend>
      <depend program="flex" install-name="flex25" add-path="prepend"
        type="build">v&gt;=2.5.35</depend>
    </dependencies>

    <script-header>
<![CDATA[
_datadir="${SB_INSTALL_PREFIX}/share"
_docdir="${SB_INSTALL_PREFIX}/doc"
]]>
    </script-header>

    <configure>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc CFLAGS="-O2 -qro -qroconst -qmaxmem=-1 -qarch=ppc"
  CXX=xlC CXXFLAGS="-O2 -qro -qroconst -qnotempinc \
-qnotemplateregistry -qmaxmem=-1 -qarch=ppc"
  CC_LD_RT="-Wl,-blibpath:" ;;
ia64*-hpux*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"
  CXX=aCC CXXFLAGS="-AA -z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+b," ;;
*-hpux11.[01]*)
  CC=cc CFLAGS="-Ae -z +O2 +Ofltacc +ESlit +DAportable \
+Oentrysched +Odataprefetch +Onolimit"
  CXX=aCC CXXFLAGS="-AA -z +O2 +Ofltacc +ESlit +DAportable \
+Oentrysched +Odataprefetch +Onolimit" ;
  CC_LD_RT="-Wl,+s,+b," ;;
*-hpux*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"
  CXX=aCC CXXFLAGS="-AA -z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit" ;
  CC_LD_RT="-Wl,+s,+b," ;;
*-irix*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1429 -O2 -OPT:Olimit=0"
  CXX=CC CXXFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1429 \
-O2 -OPT:Olimit=0"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-linux*)
  CFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"
  CXXFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"
  CC_LD_RT="-Wl,-rpath," ;;
*-linux*)
  CC_LD_RT="-Wl,-rpath," ;;
*-osf*)
  CC=cc CFLAGS="-O2 -arch ev5 -msym -readonly_strings"
  CXX=cxx CXXFLAGS="-O2 -std gnu -model ansi -msym \
-readonly_strings -timplicit_local"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=pentium4"
  CXX=CC CXXFLAGS="-xO2 -xtarget=pentium4"
  CC_LD_RT="-R" ;;
*-solaris2.8)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-xarch=v8plusa"
  CXX=CC CXXFLAGS="-xO2 -xtarget=ultra2 -xarch=v8plusa"
  CC_LD_RT="-R" ;;
*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-m32 -xarch=sparcvis"
  CXX=CC CXXFLAGS="-xO2 -xtarget=ultra2 -m32 -xarch=sparcvis"
  CC_LD_RT="-R" ;;
esac

${SHELL} ./configure CC="${CC:-gcc}" CFLAGS="${CFLAGS:--O2}" \
CXX="${CXX:-g++}" CXXFLAGS="${CXXFLAGS:--O2}" \
LDFLAGS="${SB_VAR_GCC_RT+-L${SB_VAR_GCC_RT_LIB} \
${CC_LD_RT}${SB_VAR_GCC_RT_LIB}} ${LDFLAGS+${LDFLAGS}}" \
--with-doc-dir=${_docdir} --datadir=${_datadir} \
--datarootdir=${_datadir} --mandir="${SB_INSTALL_PREFIX}/man" \
--prefix=${SB_INSTALL_PREFIX}
]]>
    </configure>

    <notes>
      <change from="1.42" to="1.43">
        <item><para>g++ 4.3.1 was emitting all sorts of dire warnings
about the hash_map data structure and associated support being pulled
from g++ in the future. SuSe seems to ship with this and there's no
point scaring people (or letting a time bomb tick). Grap now detects
and uses unordered_map if it's present on your system, which stops the
wailing and gnashing of teeth from g++ 4.3.1. That g++ version also
requires a compiler option to support that include file, which we also
autodetect and use. (This is essentially autodetecting the flags
described in the changes to grap 1.41 below, along with some code
changes to make that actually function correctly.)</para></item>
        <item><para>Cygwin sometimes has rand but not random (a very
rare configuration these days). This led me to find a corner of the
autoconf code that I apparently hadn't checked sufficiently. If rand
was found and a declaration made in the system files, the grap config
stuff failed to note the declaration and made its own incompatible
one. This should be gone now.</para></item>
        <item><para>This system can also be lacking snprintf - which
again is very odd. I hadn't reflected the change to grap sprintf in
version 1.23 into the code that emulates snprintf on systems without
it. That code has been added.</para></item>
        <item><para>Changed the examples to include a brief tutorial
on string matching in grap.</para></item>
      </change>

      <change from="1.41" to="1.42">
        <item><para>There's been a long standing bug with how
different versions of pic interpret the "line from (x,y) then down 5"
construct. There was once a bug report at
http://lists.gnu.org/archive/html/groff/2008-03/msg00003.html about
this. As of version 1.42 grap no longer outputs this pic
construct.</para></item>
        <item><para>The key was incomplete for the bar graph example.
The fix to restore the key is included.</para></item>
        <item><para>Bars in coordinate systems other than the default
just didn't work. This was a bug in my yacc grammer. It's corrected
to match the manual page.</para></item>
        <item><para>For loops were strange in that:</para>
        <screen>
.G1
for xx  from  15 to 13  do  { print "YYY" }
print "ZZZZ"
.G2
        </screen>
        <para>would loop infinitely. xx never passes 13. Added a
test to make that a null loop as well as making</para>
        <screen>
.G1
for xx  from  13 to 13  do  { print "YYY" }
print "ZZZZ"
.G2
        </screen>
        <para>print one "YYY". You can still confuse loops, using
strange by clauses - for example "by 0" or "by * -1" but common cases
should be covered.</para></item>
        <item><para>Found a lurking initializer bug while fixing the
for loop.</para></item>
        <item><para>I added references to standard plot strings in a
couple places to make them somewhat easier to find.</para></item>
      </change>

      <change from="1.40" to="1.41">
        <item><para>Small changes to compile without warnings under
g++ 4.2.0 and to find and use ext/hash_map under g++ versions that
include it.</para></item>
        <item><para>Incorporated Tobias Toedter's patch to the
grap.spec. I'd found another place to misspell "Kernighan" and Tobias
fixed it.</para></item>
        <item><para>Got rid of an ambiguous else construct in
grap_pic.cc</para></item>
        <item><para>Support g++-4.3.0 by either compiling under
compatibility headers (with a warning) or using the c++0x standard
header &lt;unordered_map&gt; if you set CXXFLAGS=-std=c++0x
CPPFLAGS=-std=c++0x in the environment (during configure and compile).
Using unordered_set avoids the warnings, but is
experimental.</para></item>
      </change>

      <change from="1.39" to="1.40">
        <item><para>In previous versions doing something like
this:</para>
        <screen>
coord temp x -2,2 y 3,4
ticks left out from temp -1 to 1
        </screen>
        <para>would interpret the ticks as starting from the value of
the uninitialized variable temp with one subtracted from it to 1 in
the default coordinate space rather than (correctly) interpreting that
as ticks from -1 to 1 in the temp coordinate space. This is a two
character fix to a regular expression, but a weird bug. I believe
it's fixed.</para></item>
        <item><para>The changes I put into version 1.38 to address
issues raised by Hartmut Henkel affected large number comparisions in
unpleasently non-intuitive ways. Specifically doing this:</para>
        <screen>
coord pressure x -2.400000, 27.000000 y 1035.124000, 1039.000000
ticks right in left 0.6 from pressure 1035.200 to 1039.000000 by 0.200
        </screen>
        <para>Results in the top tick - the one at 1039 - being
clipped because the 19 additions in the tick loop introduce enough
floating point error that the limit (1039) and the index
(1039+epsilon) differ by a large enough value that the loop terminates
one iteration early. Essentially the &lt;= at the top of the tick
loop fails because the error induced by the 19 additions accumulates
to be detectable.</para></item>
        <item><para>I've reverted the default comparison thresholds
back to their pre-1.38 levels; numbers must differ by more than 1e-6
to be considered different by grap. For people who explicitly want to
work with very small quantities directly - a decision I still disagree
with - the -r flag has been added to make grap use the system's idea
of what the smallest comparable numbers are (the 1.38 and 1.39
behavior). The output of -v or -h lists these two values and the
manual page documents the flags.</para></item>
        <item><para>I've updated the grap.spec</para></item>
      </change>

      <change from="1.38" to="1.39">
        <item><para>Fixed a typo that upsets gcc 4.1, though earlier
versions don't even generate a warning (Grrrr). (Original report at
http://bugs.debian.org/357184.) This is fixed. I didn't issue a new
FreeBSD port, because it doesn't change anything
functionally.</para></item>
        <item><para>Cleaned up the man page a bit, and fixed a couple
typos in the man page and the README file.</para></item>
      </change>

      <change from="1.37" to="1.38">
        <item><para>DESTDIR variable be added to the Makefile to allow
staged installs or temporary installs or other stuff. Setting DESTDIR
when making install or deinstall will create a tree under DESTDIR that
contains the full grap install. E.g.,</para>
        <screen>
make DESTDIR=/usr/tmp install
        </screen>
        <para>Does something like:</para>
        <screen>
/usr/bin/install -c -d /usr/tmp/usr/local/share/doc/grap || true
/usr/bin/install -c -m 644 README CHANGES COPYRIGHT grap.man
/usr/tmp/usr/local/share/doc/grap
strip grap || true
/usr/bin/install -c -d /usr/tmp/usr/local/bin || true
/usr/bin/install -c -d /usr/tmp/usr/local/man/man1 || true
/usr/bin/install -c -d /usr/tmp/usr/local/share/grap || true
/usr/bin/install -c -d /usr/tmp/usr/local/share/examples/grap || true
/usr/bin/install -c grap /usr/tmp/usr/local/bin
/usr/bin/install -c -m 644 grap.1 /usr/tmp/usr/local/man/man1
/usr/bin/install -c -m 644 grap*.defines /usr/tmp/usr/local/share/grap
/usr/bin/install -c -m 644 examples/*.d examples/example.ms \
	examples/*.result examples/Makefile \
	/usr/tmp/usr/local/share/examples/grap
        </screen>
        <para>There is a possibility of munging the manpage by doing
this, but that's actually pretty difficult, and the modifications
below to print install locations will still print the original (that
is DESTDIR-free) install locations.</para></item>
        <item><para>Fixed bad typesetting in the
examples</para></item>
        <item><para>configure should allow installers to place
documentation and examples where their system likes them. I've
altered the configuration script to accept these locations as --with
arguments (--help lists them). grap -v or grap -h (or the long
versions: grap --version/grap --help) prints out the
examples/documentation locations and that new behavior is documented
in the manual page. (The locations aren't directly given in the man
page, because the ASCII and postscript versions of the manual are
created before the source tar file is so that grap man pages can be
installed places that don't have doc manual pages).</para></item>
        <item><para>Fixed a bug where lines acquired the
lindescription of the last drawn line. This was a typo level error
that just never got exercised. Thickness attributes on frames were
being ignored. They're not anymore, but they're of limited usefulness
and they don't thicken the ticks. The easiest way to draw a thick
frame with thick ticks is:</para>
        <screen>
.G1
pic linethick=5
frame
.\" ticks statement here
pic linethick=1
draw solid bullet
next at 1,2
next at 3,4
.G2
        </screen>
        <para>That draws a thick frame and thin line.</para></item>
        <item><para>I integrated some changes suggested by Hartmut
Henkel to better handle graphing small numbers. I didn't include his
patch exactly, but I think that most of the functionality has been
added. His test cases look the same. If you're graphing things in
the 1e-30 range, you should see autoscaling and not have your graph
stop at 1e-6, assuming that your compiler has &lt;limits&gt;. I really
think it's a bad idea to graph in that domain, as the math with
numbers that small can be really hairy, and grap isn't exactly tuned
for numerical analysis. But I think we do better now.</para></item>
      </change>

      <change from="1.36" to="1.37">
        <item><para>Fixed an error handling bug where an error at end
of file/line could cause a core dump.</para></item>
      </change>

      <change from="1.35" to="1.36">
        <item><para>The following does not work:</para>
        <screen>
plot "\(bu" at 0, -306
        </screen>
        <para>grap was requiring a numeric expression before the
format string. Now both the expression and the format string are
optional. plot at x,y will plot a 0 at x,y. plot "x" at x,y is exactly
equivalent to "x" at x,y in output, but slightly slower. plot 3 at x,y
works as before as does plot 2 "%g of clubs" at x,y</para></item>
        <item><para>Modified the grammar to accept the base and wid
paramaters to bar in any order</para></item>
      </change>

      <change from="1.32" to="1.35">
        <item><para>Changes to lex code to compiler under newer
versions of lex and configure code to activate them</para></item>
        <item><para>Copy statements with a macro and neither an until
nor a filename didn't work as they should</para></item>
        <item><para>Support gpic's "thickness" just like the color
attributes</para></item>
      </change>

      <change from="1.31" to="1.32">
        <item><para>Color modifiers were misparsed in implicit plot
statements. Now things like:</para>
        <screen>
bullet color "blue" at 1, 3
        </screen>
        <para>work.</para></item>
        <item><para>Minor code tweaks to make grap compile under g++
3.4.2</para></item>
      </change>

      <change from="1.30" to="1.31">
        <item><para>In compatibility mode grap will no longer add
whitespace around graphs</para></item>
      </change>

      <platform name="HP-UX 11.00">
        <para>Patch <command>PHSS_22543</command> providing the
<command>libstd_v2</command> Standard C++ library is required as the
HP C++ compiler was used.</para>
      </platform>

      <platform name="Tru64 UNIX">
        <para>The latest C++ runtime library is required due to the
usage of the latest Compaq C++ compiler. It is available from the
following locations:</para>
        <unorderedlist>
          <item><para>package CXXREDIST651V37.tar in the support
directory of the CD</para></item>
          <item><para>online support directory <ulink url="ftp://support.thewrittenword.com/dists">ftp://support.thewrittenword.com/dists</ulink></para></item>
          <item><para>directly from Compaq at <ulink url="ftp://ftp.compaq.com/pub/products/C-CXX/Tru64/cxx/cxxredist.htm">ftp://ftp.compaq.com/pub/products/C-CXX/Tru64/cxx/cxxredist.htm</ulink></para></item>
        </unorderedlist>
      </platform>
    </notes>

    <changelog>
      <change date="2012 January 26" revision="3"
      author="Gary V. Vaughan" email="gary@thewrittenword.com">
        <item><para>Remove support for AIX 4.3.</para></item>
        <item><para>Remove support for HPUX 10.20.</para></item>
        <item><para>Remove support for RHEL 3 and SLED.</para></item>
        <item><para>Remove support for Solaris 2.6 and 7.</para></item>
        <item><para>Upgrade bison dependency from 2.3 to
2.4.3.</para></item>
      </change>

      <change date="2010 November 9" revision="2"
      author="Albert Chin-A-Young" email="china@thewrittenword.com">
        <item><para>Add support for RHEL 6</para></item>
      </change>
    </changelog>
  </program>
</programs>
