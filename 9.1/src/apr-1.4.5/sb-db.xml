<?xml version="1.0"?>
<programs>
<!DOCTYPE programs SYSTEM "sb-db.dtd">
  <program name="apr" version="1.4.5" revision="1">
    <build-name>${SB_PROG_NAME}-${SB_PROG_VER}</build-name>

    <install-name>lib${SB_PROG_NAME}14</install-name>

    <sources>
      <source checksum="8b53f5a5669d0597f2da889a2f576eb6"
        checksum-type="md5" size="754763"
        path="src/apr-1.4.5.tar.bz2"/>
      <patch checksum="389bb90be0fb8fdf81e60b34f389fb9b"
        checksum-type="md5" size="8342"
        path="src/apr-1.4.5.CVE-2012-0840.patch"/>
      <patch checksum="5d5f6c5b9fb9d7c2d1485de6da5416b3"
        checksum-type="md5" size="5941"
        path="src/apr-1.4.5.tww.patch"/>
      <patch checksum="9da365ef4f2666a95ab9b5413fb3ace4"
        checksum-type="md5" size="908909"
        path="src/apr-1.4.5.auto.patch"/>
    </sources>

    <dependencies>
      <depend program="prngd" var="PRNGD" install-name="prngd"
        systype="*-hpux11.[01]*|*-irix*|*-osf*">v&gt;=0.9.25</depend>
      <depend program="grep" install-name="grep29" add-path="prepend"
        type="build">v&gt;=2.9</depend>
      <depend program="sed" install-name="sed42" add-path="prepend"
        type="build">v&gt;=4.2.1</depend>
    </dependencies>

    <script-header>
<![CDATA[
_prngdsocket="${SB_VAR_PRNGD+/var${SB_VAR_PRNGD}/pool}"

# use system sh rather than ${CONFIG_SHELL} in #! header
# for generated libtool script
unset CONFIG_SHELL
]]>
    </script-header>

    <module name="default">
      <validate>
        <depend program="apr" module="64bit"
          systype="*-aix*|*-hpux*|*-irix*|*-solaris*">v==1.4.5</depend>
        <depend program="apr" module="gcc44">v==1.4.5</depend>
      </validate>

      <script-header>
<![CDATA[
_prngdsocket="${SB_VAR_PRNGD+/var${SB_VAR_PRNGD}/pool}"

# use system sh rather than ${CONFIG_SHELL} in #! header
# for generated libtool script
unset CONFIG_SHELL
]]>
      </script-header>

      <configure>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc CFLAGS="-O2 -qro -qroconst -qmaxmem=-1 -qarch=ppc"
  CC_LD_RT="-Wl,-blibpath:" ;;
ia64*-hpux*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+b,"
  LDFLAGS="-Wl,+nodefaultrpath" ;;
*-hpux11.[01]*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +DAportable \
+Oentrysched +Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+s,+b," ;;
*-hpux*)
  CC=cc CFLAGS="-z +O2 +Ofltacc +Olit=all +Oentrysched \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+s,+b," ;;
*-irix*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1429 \
-use_readonly_const -G0 -rdata_shared -DEBUG:optimize_space=ON \
-O2 -OPT:Olimit=0"
  CC_LD_RT="-Wl,-rpath," ;;
*-freebsd*)
  CFLAGS="-O2 -mtune=pentium4 -march=pentium4"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-linux*)
  CFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"
  CC_LD_RT="-Wl,-rpath," ;;
*-linux*)
  CC_LD_RT="-Wl,-rpath," ;;
*-osf*)
  CC=cc CFLAGS="-O2 -nodtk -arch ev5 -msym -readonly_strings"
  CC_LD_RT="-Wl,-rpath,"

  # Commercial C compiler finds <stdint.h> in /usr/include.dtk but
  # cxx doesn't look there. So, C++ projects including <apr.h>
  # fail because <stdint.h>, included by <apr.h>, cannot be found.
  #export ac_cv_header_stdint_h=0 ;;
  ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=pentium4"
  CC_LD_RT="-R" ;;
*-solaris2.8)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-xarch=v8plusa"
  CC_LD_RT="-R" ;;
*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=ultra2 \
-m32 -xarch=sparcvis"
  CC_LD_RT="-R" ;;
esac

sh ./configure SHELL=/bin/sh \
CC="${CC:-gcc}" CFLAGS="${CFLAGS:--O2}" \
LDFLAGS="${LDFLAGS+${LDFLAGS}}" --enable-threads \
${SB_VAR_PRNGD+--with-egd=${_prngdsocket}} \
--with-installbuilddir="${SB_INSTALL_PREFIX}/lib/build" \
--enable-layout=TWW --libdir=${SB_INSTALL_PREFIX_LIB} \
--prefix=${SB_INSTALL_PREFIX}

${SB_PATH_SED} -i -e "\
s!-L\(\$libdir\) -l!-L\1 ${CC_LD_RT}\1 -l!" apr-1-config

${SB_PATH_SED} -i -e "\
s!-L\(\${libdir}\)!-L\1 ${CC_LD_RT}\1!;" apr.pc
]]>
      </configure>

      <install>
<![CDATA[
gmake install

${SB_PATH_CHOWN} -hR 0:0 ${SB_INSTALL_PREFIX_LIB}
]]>
      </install>
    </module>

    <module name="64bit"
    systype="*-aix*|*-hpux*|*-irix*|*-solaris*">
      <script-header replace="0">
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  _bindir=bin/ppc64
  _incdir=include/ppc64
  _libdir=lib/ppc64 ;;
ia64*-hpux*)
  _bindir=bin/hpux64
  _incdir=include/hpux64
  _libdir=lib/hpux64 ;;
*-hpux*)
  _bindir=bin/pa20_64
  _incdir=include/pa20_64
  _libdir=lib/pa20_64 ;;
*-irix*)
  _bindir=bin/mips4
  _incdir=include/mips4
  _libdir=lib64 ;;
i?86*-solaris*)
  _bindir=bin/amd64
  _incdir=include/amd64
  _libdir=lib/amd64 ;;
*-solaris*)
  _bindir=bin/sparcv9
  _incdir=include/sparcv9
  _libdir=lib/sparcv9 ;;
esac

case "${SB_SYSTYPE}" in
*-aix*)
  export OBJECT_MODE=64 ;;
esac
]]>
      </script-header>

      <configure>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  CC=xlc CFLAGS="-O2 -qro -qroconst -q64 -qmaxmem=-1"
  CC_LD_RT="-Wl,-blibpath:" ;;
ia64*-hpux*)
  CC=cc CFLAGS="+O2 +Olit=all +Ofltacc +Oentrysched +DD64 \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+b,"
  LDFLAGS="-Wl,+nodefaultrpath" ;;
*-hpux*)
  CC=cc CFLAGS="+O2 +Olit=all +Ofltacc +Oentrysched +DD64 \
+Odataprefetch +Onolimit"
  CC_LD_RT="-Wl,+s,+b,"

  case "${SB_SYSTYPE}" in
  *-hpux11.31)
    ARGS="--build=hppa64-hp-hpux11.31" ;;
  *-hpux11.23)
    ARGS="--build=hppa64-hp-hpux11.23" ;;
  *-hpux11.11)
    ARGS="--build=hppa64-hp-hpux11.11" ;;
  *-hpux11.00)
    ARGS="--build=hppa64-hp-hpux11.00" ;;
  esac ;;
*-irix*)
  CC=cc CFLAGS="-Wl,-woff,84 -Wl,-woff,85 -woff 1429 \
-use_readonly_const -G0 -rdata_shared -DEBUG:optimize_space=ON \
-64 -mips4 -O2 -OPT:Olimit=0"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=opteron -m64 \
-xarch=sse2"
  CC_LD_RT="-R" ;;
*-solaris2.8)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=generic -xarch=v9"
  CC_LD_RT="-R" ;;
*-solaris*)
  CC=cc CFLAGS="-mr -Qn -xstrconst -xO2 -xtarget=generic -m64 \
-xarch=sparc"
  CC_LD_RT="-R" ;;
esac

sh ./configure SHELL=/bin/sh \
CC="${CC:-gcc}" CFLAGS="${CFLAGS:--O2}" \
${LDFLAGS+LDFLAGS="$LDFLAGS"} --enable-threads \
${SB_VAR_PRNGD+--with-egd=${_prngdsocket}} \
--with-installbuilddir="${SB_INSTALL_PREFIX}/${_libdir}/build" \
--enable-layout=TWW ${ARGS+${ARGS}} \
--bindir="${SB_INSTALL_PREFIX}/${_bindir}" \
--includedir="${SB_INSTALL_PREFIX}/${_incdir}" \
--libdir="${SB_INSTALL_PREFIX}/${_libdir}" \
--prefix=${SB_INSTALL_PREFIX}

${SB_PATH_SED} -i -e "\
s!-L\(\$libdir\) -l!-L\1 ${CC_LD_RT}\1 -l!" apr-1-config

${SB_PATH_SED} -i -e "\
s!-L\(\${libdir}\)!-L\1 ${CC_LD_RT}\1!;" apr.pc
]]>
      </configure>

      <install>
<![CDATA[
if [ ! -d ${SB_INSTALL_PREFIX}/bin/64 ]; then
  ln -s ./$(basename ${_bindir}) ${SB_INSTALL_PREFIX}/bin/64
fi
if [ ! -d ${SB_INSTALL_PREFIX}/include/64 ]; then
  ln -s ./$(basename ${_incdir}) ${SB_INSTALL_PREFIX}/include/64
fi
if [ ! -d ${SB_INSTALL_PREFIX}/lib/64 ]; then
  case "${SB_SYSTYPE}" in
  *-aix*|*-hpux*|*-solaris*)
    ln -s ./$(basename ${_libdir}) ${SB_INSTALL_PREFIX}/lib/64 ;;
  *-irix*)
    ln -s ../lib64 ${SB_INSTALL_PREFIX}/lib/64 ;;
  esac
fi

gmake install

${SB_PATH_CHOWN} -hR 0:0 ${SB_INSTALL_PREFIX}/${_libdir}
]]>
      </install>

      <uninstall>
<![CDATA[
rm -rf ${SB_INSTALL_PREFIX}/bin/64 ${SB_INSTALL_PREFIX}/include/64 \
${SB_INSTALL_PREFIX}/lib/64 ${SB_INSTALL_PREFIX}/${_bindir} \
${SB_INSTALL_PREFIX}/${_incdir} ${SB_INSTALL_PREFIX}/${_libdir}
]]>
      </uninstall>
    </module>

    <module name="gcc44">
      <dependencies replace="0">
        <depend program="gcc" install-name="gcc44"
          add-path="prepend">v&gt;=4.4.6</depend>
        <depend var="GCC_RT" install-name="gcc44r"/>
      </dependencies>

      <script-header replace="0">
<![CDATA[
_gcc_subdir="gcc44"
]]>
      </script-header>

      <configure>
<![CDATA[
case "${SB_SYSTYPE}" in
*-aix*)
  CFLAGS="-O2 -mcpu=powerpc" CXXFLAGS="-O2 -mcpu=powerpc"
  LDFLAGS="-Wl,-brtl -Wl,-blibpath:/usr/lib"
  CC_LD_RT="-Wl,-blibpath:" ;;
ia64*-hpux*)
  CC_LD_RT="-Wl,+b," ;;
*-hpux*)
  CC_LD_RT="-Wl,+s,+b," ;;
*-irix*)
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-linux*)
  CFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"
  CXXFLAGS="-O2 -mtune=pentiumpro -march=pentiumpro"
  CC_LD_RT="-Wl,-rpath," ;;
*-linux*)
  CC_LD_RT="-Wl,-rpath," ;;
*-osf*)
  CFLAGS="-O2 -mcpu=ev5" CXXFLAGS="-O2 -mcpu=ev5"
  CC_LD_RT="-Wl,-rpath," ;;
i?86*-solaris*)
  CFLAGS="-O2 -mtune=pentium4 -march=pentium4"
  CXXFLAGS="-O2 -mtune=pentium4 -march=pentium4"
  CC_LD_RT="-R" ;;
*-solaris*)
  CFLAGS="-O2 -mcpu=ultrasparc -mvis"
  CXXFLAGS="-O2 -mcpu=ultrasparc -mvis"
  CC_LD_RT="-R" ;;
esac

sh ./configure SHELL=/bin/sh \
CC="${CC:-gcc}" CFLAGS="${CFLAGS:--O2}" \
LDFLAGS="${LDFLAGS+${LDFLAGS}}" --enable-threads \
${SB_VAR_PRNGD+--with-egd=${_prngdsocket}} \
--with-installbuilddir="${SB_INSTALL_PREFIX_LIB}/${_gcc_subdir}/build" \
--enable-layout=TWW ${ARGS+${ARGS}} \
--bindir="${SB_INSTALL_PREFIX}/bin/${_gcc_subdir}" \
--includedir="${SB_INSTALL_PREFIX}/include/${_gcc_subdir}" \
--libdir="${SB_INSTALL_PREFIX_LIB}/${_gcc_subdir}" \
--prefix=${SB_INSTALL_PREFIX}

${SB_PATH_SED} -i -e "\
s!-L\(\$libdir\) -l!-L\1 ${CC_LD_RT}\1 -l!" apr-1-config

${SB_PATH_SED} -i -e "\
s!-L\(\${libdir}\)!-L\1 ${CC_LD_RT}\1!;" apr.pc
]]>
      </configure>

      <uninstall>
<![CDATA[
rm -rf ${SB_INSTALL_PREFIX}/${_bindir} \
${SB_INSTALL_PREFIX}/${_incdir} ${SB_INSTALL_PREFIX}/${_libdir}
]]>
      </uninstall>
    </module>

    <licenses>
      <license path="apache-2.0.license"/>

      <license module="strings/apr_fnmatch.c, include/apr_fnmatch.h, misc/unix/getopt.c, file_io/unix/mktemp.c, strings/apr_strings.c">
        <para skip="0">Copyright (c) 1987, 1993, 1994</para>
        <para>The Regents of the University of California. All rights
reserved.</para>
        <para>Redistribution and use in source and binary forms, with
or without modification, are permitted provided that the following
conditions are met:</para>
        <orderedlist>
          <item><para>Redistributions of source code must retain the
above copyright notice, this list of conditions and the following
disclaimer.</para></item>
          <item><para>Redistributions in binary form must reproduce
the above copyright notice, this list of conditions and the following
disclaimer in the documentation and/or other materials provided with
the distribution.</para></item>
          <item><para>All advertising materials mentioning features or
use of this software must display the following
acknowledgement:</para>
          <indent>
            <para>This product includes software developed by the
University of California, Berkeley and its contributors.</para>
          </indent></item>
          <item><para>Neither the name of the University nor the names
of its contributors may be used to endorse or promote products derived
from this software without specific prior written
permission.</para></item>
        </orderedlist>

        <para>THIS SOFTWARE IS PROVIDED BY THE REGENTS AND
CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</para>
      </license>

      <license module="network_io/unix/inet_ntop.c, network_io/unix/inet_pton.c">
        <para>Copyright (c) 1996 by Internet Software
Consortium.</para>
        <para>Permission to use, copy, modify, and distribute this
software for any purpose with or without fee is hereby granted,
provided that the above copyright notice and this permission notice
appear in all copies.</para>
        <para><command>THE SOFTWARE IS PROVIDED "AS IS" AND INTERNET
SOFTWARE CONSORTIUM DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS
SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
FITNESS. IN NO EVENT SHALL INTERNET SOFTWARE CONSORTIUM BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT
OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.</command></para>
      </license>

      <license module="dso/aix/dso.c">
        <para skip="0">Based on libdl (dlfcn.c/dlfcn.h) which is
Copyright (c) 1992,1993,1995,1996,1997,1988 Jens-Uwe Mager, Helios
Software GmbH, Hannover, Germany.</para>
        <para>Not derived from licensed software.</para>
        <para>Permission is granted to freely use, copy, modify, and
redistribute this software, provided that the author is not construed
to be liable for any results of using the software, alterations are
clearly marked as such, and this notice is not modified.</para>
      </license>

      <license module="strings/apr_strnatcmp.c, include/apr_strings.h">
        <para skip="0">strnatcmp.c -- Perform 'natural order'
comparisons of strings in C.</para>
        <para>Copyright (C) 2000 by Martin Pool
&lt;mbp@humbug.org.au&gt;</para>
        <para>This software is provided 'as-is', without any express
or implied warranty. In no event will the authors be held liable for
any damages arising from the use of this software.</para>
        <para>Permission is granted to anyone to use this software for
any purpose, including commercial applications, and to alter it and
redistribute it freely, subject to the following restrictions:</para>
        <orderedlist>
          <item><para>The origin of this software must not be
misrepresented; you must not claim that you wrote the original
software. If you use this software in a product, an acknowledgment in
the product documentation would be appreciated but is not
required.</para></item>
          <item><para>Altered source versions must be plainly marked
as such, and must not be misrepresented as being the original
software.</para></item>
          <item><para>This notice may not be removed or altered from
any source distribution.</para></item>
        </orderedlist>
      </license>
    </licenses>

    <notes>
      <change from="1.4.4" to="1.4.5">
        <item><para>Security: CVE-2011-1928 apr_fnmatch(): Fix high
CPU loop</para></item>
        <item><para>Fix top_builddir in installed
apr_rules.mk</para></item>
      </change>

      <change from="1.4.3" to="1.4.4">
        <item><para>Windows: Fix command-line builds</para></item>
      </change>

      <change from="1.4.2" to="1.4.3">
        <item><para>Security: CVE-2011-0419 Reimplement apr_fnmatch()
from scratch using a non-recursive algorithm; now has improved
compliance with the fnmatch() spec</para></item>
        <item><para>Fix environment-related crash using some
non-standard builds on Windows 7/Server 2008</para></item>
        <item><para>poll, pollset, pollcb on Windows: Handle calls
with no file/socket descriptors. PR 49882.</para></item>
        <item><para>Fix APR_IPV6_V6ONLY issues on Windows related to
run-time behavior on Windows older than Vista and SDK/MinGW levels
without IPV6_V6ONLY. PR 45321.</para></item>
        <item><para>Fix address handling when accepting an AF_INET
socket from a socket bound as AF_INET6. PR 49678.</para></item>
        <item><para>Fix error return values from
apr_sockaddr_info_get() on Windows for IPv6 builds.</para></item>
        <item><para>Add new experimental configure option
--enable-allocator-uses-mmap to use mmap instead of malloc in
apr_allocator_alloc(). This greatly reduces memory fragmentation with
malloc implementations (e.g. glibc) that don't handle allocationss of
a page-size-multiples in an efficient way. It also makes
apr_allocator_max_free_set() actually have some effect on such
platforms.</para></item>
        <item><para>configure: Support 64 and 32 bit universal builds
for Darwin/ OS X 10.6+.</para></item>
        <item><para>apr_sockaddr_info_get() on AIX: Fix a problem
which could set the port field in the native socket address to 1 when
0 was specified. PR 46964.</para></item>
        <item><para>configure: Make definition of apr_ino_t
independent of _FILE_OFFSET_BITS even on platforms where ino_t is
'unsigned int'.</para></item>
        <item><para>apr_ring: Workaround for aliasing problem that
causes gcc 4.5 to miscompile some brigade related code. PR
50190.</para></item>
        <item><para>apr_file_flush_locked(): Handle short
writes.</para></item>
        <item><para>apr_pollset_create_ex(): Trap errors from pollset
providers. PR 49094.</para></item>
        <item><para>apr_pollset_create*(): Fix memory lifetime problem
with the wakeup pipe when the pollset was created with
APR_POLLSET_NOCOPY.</para></item>
        <item><para>Fix detection of some Linux variants when
configure is built with recent GNU tools.</para></item>
        <item><para>Avoid a redundant fcntl() call in apr_file_open()
where O_CLOEXEC is supported. PR 46297.</para></item>
        <item><para>Improve platform detection by updating
config.guess and config.sub.</para></item>
      </change>

      <change from="1.4.1" to="1.4.2">
        <item><para>Undo a crash-bug introduced in 1.4.1 affecting
some applications of the apr hash and table structures, reported to
affect Subversion</para></item>
      </change>

      <change from="1.4.0" to="1.4.1">
        <item><para>Win32: Properly handle the ERROR_DIRECTORY system
error code</para></item>
      </change>

      <change from="1.3.13" to="1.4.0">
        <item><para>Windows: Default build configurations assume NT or
higher at run-time</para></item>
        <item><para>Add apr_global_mutex_lockfile() for retrieving the
file, if any, associated with the mutex. Add apr_global_mutex_name()
for retrieving the name of the lock mechanism used by the underlying
proc mutex.</para></item>
        <item><para>Add apr_socket_atreadeof to determine whether the
receive part of the socket has been closed by the peer.</para></item>
        <item><para>Make apr_pollset and apr_pollcb implementations
using providers. Added apr_pollset_create_ex and apr_pollcb_create_ex
that allows choosing non-default providers.</para></item>
        <item><para>Win32: Use WSAPoll as default pollset method if
supported and found inside winsock dll</para></item>
        <item><para>apr_temp_dir_get() now checks the TMPDIR
environment variable first, instead of third</para></item>
        <item><para>Add apr_file_sync() and apr_file_datasync()
calls</para></item>
        <item><para>apr_pollset_wakeup() on Windows: Fix core caused
by closing the file_socket_pipe with standard file_close</para></item>
        <item><para>Introduce apr_hash_do() for iterating over a hash
table</para></item>
        <item><para>Make sure WIN32 behaves the same as posix for
file-backed shared memory by removing the file on
cleanup/remove</para></item>
        <item><para>Introduce apr_pollset_wakeup() for interrupting
the blocking apr_pollset_poll() call</para></item>
        <item><para>Add apr_file_link() function. PR
44841.</para></item>
      </change>

      <change from="1.3.12" to="1.3.13">
        <item><para>Fix flag character '#' in combination with format
character 'x' in apr snprintf implementations</para></item>
      </change>

      <change from="1.3.11" to="1.3.12">
        <item><para>Fix detection of some Linux variants when
configure is built with recent GNU tools</para></item>
      </change>

      <change from="1.3.10" to="1.3.11">
        <item><para>Fix bad autoconf version number in messages from
buildcheck.sh (called from buildconf)</para></item>
      </change>

      <change from="1.3.9" to="1.3.10">
        <item><para>Avoid a redundant fcntl() call in apr_file_open()
where O_CLOEXEC is supported. PR 46297.</para></item>
        <item><para>Solaris 10 and later: Change the default
cross-mutex mechanism from fcntl to pthread to resolve EDEADLK
failures with some multi-threaded, multi-process applications (e.g.,
httpd's worker MPM with certain plug-in modules).</para></item>
        <item><para>Solaris pollcb support: Fix a hang in
apr_pollcb_poll()</para></item>
        <item><para>Solaris pollset support: Fix a 1.3.9 regression in
apr_pollset_poll() which could result in a crash when the call was
interrupted by a signal. PR 48030.</para></item>
        <item><para>Solaris pollset support: Fix a 1.3.9 regression in
apr_pollset_poll() which resulted in invalid return codes from the APR
function. A work- around was needed for bad return codes from 32-bit
port_getn() on Solaris 10 x86. PR 48029.</para></item>
      </change>

      <change from="1.3.8" to="1.3.9">
        <item><para>Posix semaphores can now be named and used as
named semaphores.</para></item>
        <item><para>Better handling of APR_OFF_T_FMT for Darwin 10
depending on -arch setting of compiler.</para></item>
        <item><para>Add comments describing the thread-safety
properties of apr_pool_t.</para></item>
        <item><para>Pass default environment to testsock, testshm and
testproc children, so that tests run when APR is compiled with Intel C
Compiler.</para></item>
        <item><para>Fix error handling in the Solaris pollset support
(Event Port backend). PR 47645.</para></item>
        <item><para>Add the remainder of this fix from trunk: Fix
Solaris poll failure. PR 43000</para></item>
      </change>

      <change from="1.3.7" to="1.3.8">
        <item><para>SECURITY: CVE-2009-2412 Fix overflow in pools and
rmm, where size alignment was taking place</para></item>
        <item><para>Make sure that "make check" is used in the RPM
spec file, consistent with apr-util</para></item>
        <item><para>Pass default environment to testflock, testoc and
testpipe children, so that tests run when APR is compiled with Intel C
Compiler</para></item>
      </change>

      <change from="1.3.6" to="1.3.7">
        <item><para>More elaborate detection for dup3(), accept4() and
epoll_create1()</para></item>
      </change>

      <change from="1.3.5" to="1.3.6">
        <item><para>On Linux/hppa flock() returns EAGAIN instead of
EWOULDBLOCK. This causes proc mutex failures.</para></item>
        <item><para>Set CLOEXEC flags where appropriate. Either use
new O_CLOEXEC flag and associated functions, such as dup3(),
accept4(), epoll_create1() etc., or simply set CLOEXEC flag using
fcntl(). PR 46425.</para></item>
      </change>

      <change from="1.3.4" to="1.3.5">
        <item><para>Dropped kqueue and apr_poll detection from Mac
OS/X 10.5/Darwin 9 due to various reported problems</para></item>
      </change>

      <change from="1.3.3" to="1.3.4">
        <item><para>apr_strerror() on OS/2: Fix problem with
calculating buffer size. PR 45689.</para></item>
        <item><para>Prefer glibtool1/glibtoolize1</para></item>
        <item><para>Fix buildconf with libtool 2.2</para></item>
        <item><para>Fix a bug with the APR_DELONCLOSE flag. Child
processes were (also) unlinking the file.</para></item>
        <item><para>Fix compilation error on systems that do not have
IPV6. PR 46601.</para></item>
        <item><para>apr_socket_sendfile() on Solaris: Fix handling of
files truncated after the sender determines the length. (This fixes a
busy loop in httpd when a file being served is
truncated.)</para></item>
        <item><para>Fix documentation for apr_temp_dir_get(). PR
46303.</para></item>
        <item><para>Add AC_MSG_RESULT after AC_MSG_CHECKING. PR
46427.</para></item>
        <item><para>Reset errno to zero in apr_strtoi64 to prevent
returning an errno not equal zero in cases where the operation worked
fine.</para></item>
        <item><para>Win32: Do not error out on apr_pollset_poll() when
there are no sockets.</para></item>
        <item><para>Fix apr_tokenize_to_argv parsing. PR
46128.</para></item>
      </change>

      <change from="1.3.2" to="1.3.3">
        <item><para>Rename apr_pool_create_core to
apr_pool_create_unmanaged and deprecate the old API name. It better
reflects the scope and usage of this function.</para></item>
        <item><para>Use proper return code for fcntl-based
apr_proc_mutex_trylock() on platforms that return EACCES instead of
EAGAIN when the lock is already held (AIX, HP-UX).</para></item>
        <item><para>Fix APR_PID_T_FMT detection on Solaris. PR
45513</para></item>
      </change>

      <change from="1.3.1" to="1.3.2">
        <item><para>Fix getservbyname_r() detection.</para></item>
      </change>

      <change from="1.3.0" to="1.3.1">
        <item><para>Fix win32 apr.hw to pick up XP/2003 TCP/IP
multicast constants and revert to IPV6 disabled-by-default (a change
present only in 1.3.0).</para></item>
        <item><para>Fix autoconf cached detection of atomic
builtins.</para></item>
        <item><para>Use thread safe versions of
getservbyname().</para></item>
        <item><para>Use thread safe getpass_r on
Netware.</para></item>
      </change>

      <change from="1.2.12" to="1.3.0">
        <item><para>Fix Solaris poll failure. PR 43000</para></item>
        <item><para>apr_getservbyname(): Use proper method for
converting port to host byte order. PR 44903.</para></item>
        <item><para>Use /dev/urandom in preference to /dev/random as
entropy source for apr_generate_random_bytes. PR 44881.</para></item>
        <item><para>Implement apr_proc_wait_all_procs for windows. The
implementation uses tool help library present on Windows 2000 and
later. APR_ENOTIMPL is returned on platforms missing tool help from
kernel32.dll.</para></item>
        <item><para>Introduce apr_pool_pre_cleanup_register() for
registering a cleanup that is called before any subpool is destroyed
within apr_pool_clear or apr_pool_destroy. This allows to register a
cleanup that will notify subpools about its inevitable
destruction.</para></item>
        <item><para>Introduce apr_pool_create_core_ex() for creation
of standalone pools without parent. This function should be used for
short living pools, usually ones that are created and destroyed either
in a loop or inside function call. Since the pools created with this
function doesn't have a parent they must be explicitly destroyed when
done.</para></item>
        <item><para>Fix return value when apr_pollset_poll
interrupted. PR 42580</para></item>
        <item><para>Add missing semi-colon in Win9x code path of
apr_file_open that breaks Win9X Debug builds. PR 44329.</para></item>
        <item><para>z/OS: return standard apr_status_t codes from
apr_dso_load() and apr_dso_sym().</para></item>
        <item><para>Fix the make test target in the spec
file.</para></item>
        <item><para>Fix DSO-related crash on z/OS caused by incorrect
memory allocation.</para></item>
        <item><para>Implement Darwin-semantic (9.0.0 and later)
sendfile support. Use writev in lieu of hdtr vecs since how Darwin
counts the data is undocumented.</para></item>
        <item><para>Implemented the APR_FOPEN_SPARSE flag, permits
win32 to create sparse data files. Also bestow apr_fileinfo_t csize
field for Windows versions 2000 and later, which helps in the
detection that a sparse file is truly in use (see test/testlfs.c for
an example, because different filesystems can vary in behavior even on
an OS supporting sparse files).</para></item>
        <item><para>Corrected for Darwin and others to toggle
APR_HAS_LARGE_FILES where large off_t's are enabled without any extra
defines, hints or additional functions. This is binary compatible,
but apps may need to be recompiled to take full advantage depending on
how they detect this feature.</para></item>
        <item><para>Implement apr_atomic_casptr() and
apr_atomic_xchgptr() for z/OS.</para></item>
        <item><para>Introduce apr_file_pipe_create_ex() to portably
permit one pipe end or another to be entirely blocking for non-APR
applications (e.g. stdio streams) and the other (or both ends) non
blocking, with a timeout of 0 by default.</para></item>
        <item><para>apr_procattr_io_set() on Windows: Set non-blocking
pipe handles to a default timeout of 0, following the Unix default.
No effect on pipe handles configured to block. PR
43522.</para></item>
        <item><para>apr_file_write() on Windows: Fix return code when
writing to a non-blocking pipe would have blocked. PR
43563.</para></item>
        <item><para>Introduce APR_NO_FILE as an option to
apr_procattr_io_set() for any of the three stdio streams to cause the
corresponding streams to be closed to the child process. This becomes
effective in 1.3.0 across platforms (equivilant to APR_NO_PIPE in
1.2.x except on Win32.)</para></item>
        <item><para>Solve WinNT inherited pipe leaks by mutexing
apr_proc_create calls, on WinNT (not WinCE, nor 9x) so that we toggle
the inherited state of the stdin/out/err pipes. All other file
handles are treated as not-inherited until apr_file_dup2'ed a std
handle of this process, or while they are used by
apr_proc_create.</para></item>
        <item><para>Define the Mac OS/X filesystem_encoding as utf-8
(in previous releases the interpretation would vary).</para></item>
        <item><para>Add table cloning (deep copy) convenience
function.</para></item>
        <item><para>Rework the WIN32 CV code to signal the condition
only if one or more threads are blocked on the condition variable. If
no threads are waiting on the condition variable, nothing happens. The
change also eliminates the thundering-herd problem of the manual-reset
event, which (theoretically) wakes up all threads waiting on. Now the
behavior of the CV's should be the same on Unix and win32 platforms.
PR 42305.</para></item>
        <item><para>Define SEM_FAILED if it isn't already defined, as
the proc mutex code already does it. Also search for the sem_open
function in the realtime library. (This fixes HP-UX sem_open
detection).</para></item>
        <item><para>Define the _HPUX_SOURCE feature test macro to
obtain maximum functionality. PR 42261.</para></item>
        <item><para>Stop invoking the testshm* helpers upon 'make
test' invocation.</para></item>
        <item><para>Register a cleanup only if APR_FILE_NOCLEANUP was
not flagged in apr_file_mktemp.</para></item>
        <item><para>Numerous build fixes for non-GCC builds and GCC
builds on Win32, as well as WinCE builds.</para></item>
        <item><para>Discard file buffers when running cleanups for
exec. PR 41119.</para></item>
        <item><para>Improve thread safety of assorted file_io
functions. PR 42400.</para></item>
        <item><para>Add the apr_pollcb API as an alternative more
efficient method of polling sockets, compared to
apr_pollset.</para></item>
        <item><para>Fix possible crash in apr_pool_initialize() when
built with verbose pool debugging. PR 41063.</para></item>
        <item><para>Fix --disable-ipv6 build on platforms with
getifaddrs(). PR 39199.</para></item>
        <item><para>Correctly retrieve 'empty' environment values with
apr_env_get on Win32 (e.g. "VAR="), and added validation to testall
suite. PR 40764.</para></item>
        <item><para>Portably check for EEXIST in mktemp code. PR
40818</para></item>
        <item><para>Fix apr_socket_recvfrom() to ensure the peer's
address is returned through the "from" parameter.</para></item>
        <item><para>Fix error checking in kqueue, epoll and event port
versions of apr_pollset_create. PR 40660, 40661, 40662</para></item>
        <item><para>Add some documentation on the format matched by
apr_fnmatch.</para></item>
        <item><para>Add apr_hash_clear.</para></item>
        <item><para>Don't try to build apr_app.c on
MinGW.</para></item>
        <item><para>Fix the timeout converstion in apr_pollset with
the KQueue backend.</para></item>
        <item><para>Support MinGW.</para></item>
        <item><para>Implement apr_thread_yield on Unix in terms of
pthread_yield or sched_yield.</para></item>
        <item><para>Provide folding in autogenerated .manifest files
for Win32 builders using VisualStudio 2005.</para></item>
        <item><para>Utilise Solaris' native atomic_* functions for
apr_atomics where appropriate.</para></item>
        <item><para>Make apr_socket_recvfrom initialize the port field
in the from sockaddr. PR 39325</para></item>
        <item><para>NetBSD: Avoid leaving zombie process when using
apr_signal() to ignore SIGCHLD. PR 36750.</para></item>
        <item><para>Implement support for apr_proc_mutex_trylock() on
Unix platforms. PR 38785.</para></item>
        <item><para>APR_FIND_APR macro now supports customisable
detailed checks on each installed apr</para></item>
        <item><para>APR_FIND_APR macro no longer checks
/usr/local/apache2/</para></item>
        <item><para>Add APR_POLLSET_NOCOPY option to apr_pollset API
to eliminate O(n)-time lookup in apr_pollset_remove() (currently
implemented only for epoll).</para></item>
        <item><para>Add apr_file_buffer_set() and
apr_file_buffer_size_get() functions to support variable buffer sizes
with APR file handles.</para></item>
        <item><para>Add apr_file_open_flags_std[err|out|in]()
functions.</para></item>
        <item><para>stdio: apr_file_open_std[err|out|in]() functions
now set the APR_WRITE or APR_READ flag as appropriate.</para></item>
        <item><para>multicast: apr_mcast_*() no longer return
APR_ENOTIMPL when invoked for non-UDP/RAW sockets. The caller is
expected to ensure that the socket-type is suitable for
multicast.</para></item>
        <item><para>Add apr_sockaddr_ip_getbuf()
function.</para></item>
        <item><para>Fix handling of %pI in apr_psprintf.</para></item>
        <item><para>Provide APR_VERSION_AT_LEAST() macro for
applications which want to enable features based on a required level
of APR.</para></item>
        <item><para>jlibtool: Teach to use static libraries with
-static.</para></item>
        <item><para>Fix checks for alloca() support in configure. PR
13037.</para></item>
        <item><para>Add %pm support to apr_snprintf() for printing the
error string corresponding to an apr_status_t value.</para></item>
        <item><para>Add APR_ARRAY_IDX() and APR_ARRAY_PUSH()
convenience macros to apr_tables.h.</para></item>
      </change>

      <change from="1.2.11" to="1.2.12">
        <item><para>Define apr_ino_t in such a way that it doesn't
change definition based on the library consumer's -D'efines to the
filesystem. </para></item>
        <item><para>Fill in apr_fileinfo_t member st_csize on Netware
and Unix (PR 41678), and refine the file times down to apr_time_t
resolution if supported by a st_atimensec or st_atim.tv_nsec value by
the OS. Additional msec implementations are possible if exposed
through autoconf.</para></item>
        <item><para>Fix apr_socket_recvfrom() to ensure the peer's
address is returned through the "from" parameter on
Win32.</para></item>
        <item><para>Cause apr_file_dup2() on Win32 to update the
MSVCRT psuedo-stdio handles for fd-based and FILE * based
I/O.</para></item>
      </change>

      <change from="1.2.10" to="1.2.11">
        <item><para>Win32 apr_file_read; Correctly handle
completion-based read-to-EOF</para></item>
        <item><para>Fixed Win32 regression of stdout inheritance in
apr_proc_create</para></item>
      </change>

      <change from="1.2.9" to="1.2.10">
        <item><para>Solve winNT inherited pipe leaks by mutexing
apr_proc_create calls, on WinNT (not WinCE, nor 9x) so that we toggle
the inherited state of the stdin/out/err pipes. All other file handles
are treated as not-inherited until apr_file_dup2'ed a std handle of
this process, or while they are used by apr_proc_create.</para></item>
        <item><para>Define the Mac OS/X filesystem_encoding as utf-8
(in previous releases the interpretation would vary)</para></item>
        <item><para>Fix day of year (tm_day) calculation for July. The
bug only affects Windows builds. PR 42953.</para></item>
        <item><para>Fix LFS detection when building over NFS. The mode
must be specified when O_CREAT is in the flags to open(). PR
42821.</para></item>
        <item><para>Avoid overwriting the hash_mutex table for
applications that incorrectly calls apr_atomic_init(). PR
42760.</para></item>
        <item><para>Allow IPv6 connectivity test to fail, avoiding a
potentially fatal error</para></item>
        <item><para>The MinGW Windows headers effectively redefines
WINADVAPI from __stdcall to empty which results in a link failure when
wincrypt.h is placed after an include to apr_private.h. PR
42293.</para></item>
        <item><para>Define SEM_FAILED if it isn't already defined, as
the proc mutex code already does it. Also search for the sem_open
function in the realtime library. (This fixes HP-UX sem_open
detection).</para></item>
        <item><para>Define the _HPUX_SOURCE feature test macro to
obtain maximum functionality. Fixes broken sendfile with LFS support
on HP-UX. PR 42261.</para></item>
      </change>

      <change from="1.2.8" to="1.2.9">
        <item><para>Stop invoking the testshm* helpers upon 'make
test' invocation</para></item>
        <item><para>Register a cleanup only if APR_FILE_NOCLEANUP was
not flagged in apr_file_mktemp</para></item>
        <item><para>Numerous build fixes for non-GCC builds and GCC
builds on Win32, as well as WinCE builds</para></item>
        <item><para>Discard file buffers when running cleanups for
exec. PR 41119.</para></item>
        <item><para>If apr_proc_create() fails to exec in the fork()ed
child, call _exit() not exit() to avoid running atexit()-registered
functions in the child. PR 30913.</para></item>
        <item><para>Improve thread safety of assorted file_io
functions. PR 42400.</para></item>
        <item><para>Fix file pointer position calculation in
apr_file_writev() on buffered file. PR 40963.</para></item>
        <item><para>Fix formatting of unsigned integers larger than
2^63 in the vformatter/apr_*printf. PR 42250.</para></item>
        <item><para>Fix possible EFAULT failures in
apr_socket_sendfile() on 32-bit Solaris with LFS enabled. PR
39463.</para></item>
        <item><para>Fix deadlock in apr_file_gets() for a file opened
with both the APR_BUFFERED and APR_XTHREAD flags.</para></item>
      </change>

      <change from="1.2.7" to="1.2.8">
        <item><para>Correctly retrieve 'empty' environment values with
apr_env_get on Win32 (e.g. "VAR="), and added validation to testall
suite. PR 40764.</para></item>
        <item><para>APR_FIND_APR macro no longer checks
/usr/local/apache2/. PR 40842.</para></item>
        <item><para>Portably check for EEXIST in mktemp code. PR
40818.</para></item>
        <item><para>Fix apr_snprintf/apr_vsnprintf return value to not
count the NUL terminator in the overflow case. PR 39996.</para></item>
        <item><para>Provide folding in autogenerated .manifest files
for Win32 builders using VisualStudio 2005</para></item>
        <item><para>Fix detection of pthread cross-process robust
mutexes. PR 39833.</para></item>
        <item><para>NetBSD: Avoid leaving zombie process when using
apr_signal() to ignore SIGCHLD. PR 36750.</para></item>
        <item><para>Fix apr_socket_sendv() for platforms without
writev. PR 38822.</para></item>
        <item><para>Avoid issues using &gt;2Gb of data per call with
sendfile() on 64-bit Linux platforms.</para></item>
      </change>
    </notes>

    <changelog>
      <change date="2011 May 26" revision="4"
      author="Albert Chin-A-Young" email="china@thewrittenword.com">
        <item><para>Apply patch for CVE-2011-1928 (<ulink url="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-1928">http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-1928</ulink>).
The fnmatch implementation in <command>apr_fnmatch.c</command> allows
remote attackers to cause a denial of service (infinite loop) via a
URI that does not match unspecified types of wildcard patterns, as
demonstrated by attacks against mod_autoindex in httpd when a
/*/WEB-INF/ configuration pattern is used. NOTE: this issue exists
because of an incorrect fix for CVE-2011-0419.</para></item>
      </change>

      <change date="2011 May 16" revision="3"
      author="Albert Chin-A-Young" email="china@thewrittenword.com">
        <item><para>Apply patch for CVE-2011-0419 (<ulink url="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-0419">http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-0419</ulink>).
The <command>apr_fnmatch()</command> function used an unconstrained
recursion when processing patterns with the '*' wildcard. An attacker
could use this flaw to cause an application using this function, which
also accepted untrusted input as a pattern for matching (such as an
httpd server using the mod_autoindex module), to exhaust all stack
memory or use an excessive amount of CPU time when performing
matching.</para></item>
      </change>

      <change date="2010 November 2" revision="2"
      author="Albert Chin-A-Young" email="china@thewrittenword.com">
        <item><para>Add support for RHEL 6</para></item>
      </change>
    </changelog>
  </program>
</programs>
